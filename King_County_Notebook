{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "017ace41",
   "metadata": {},
   "source": [
    "# Phase 2 Group 1 Project: King County Appraisal Model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d12a0bcb",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "### Authors:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09e5afdf",
   "metadata": {
    "hidden": true
   },
   "source": [
    "* Arthur Kim\n",
    "* Douglas Lu\n",
    "* Shane Mangold\n",
    "* Nate Walter"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abe451d2",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2980204e",
   "metadata": {
    "hidden": true
   },
   "source": [
    "This project utilizes the King County House Sales dataset, which is an existing dataset based on data from house sales of King County, WA from 2014 to 2015. Through the Data Science Process, we seek to understand our dataset through Exploratory Data Analysis and prepare and model our data through an iterative approach. We begin from the baseline model and utilize an assortment of statistical techniques: linear regression, multlinear regression, ordinary least squares, recursive feature elimination, and binomial feature engineering.\n",
    "\n",
    "Through the various statistical methods, we then seek to iterate across different models to idenitfy the model with the most optimal statistical R-Squared Value, RMSE, and differential values. Then, we look to highlight the two main features that best provide predictions to housing prices. \n",
    "\n",
    "With price prediction in mind, our purpose for our statistical analysis is to provide banks the means to appraise home values throughout the COVID-19 pandemic. Without the need to physically enter the domicile of clients' homes, banks would be able to provide appraisal services to prospective clients and existing clients in hopes of capturing more market share in the residential real estate market. \n",
    "\n",
    "\n",
    "Our findings will help ACME bank develop and validate home appraisals without the need for outside individuals to enter the a client or prospect's home. ACME can then use the predictions to set sales prices for homes to be put on the market at competitive market values based on the regression model's predictions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11eef537",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Business Problem"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8766baf7",
   "metadata": {
    "hidden": true
   },
   "source": [
    "With the recent wave of Delta variants in the Covid-19 string, key executives at ACME Bank have came to Group One Inc. to seek solutions on providing its clients and prospects with alternative ways to obtain home appraisal values. ACME Bank is seeking to gain more marketshare from their competitors by providing appraisal services throughout the pandemic, with the hopes of helping its clients and prospects feel safe and comfortable while offering them a solution to appraise their homes. \n",
    "\n",
    "Executives at ACME Bank have come to Group One Inc. in hopes of identifying a model that would help best predict home prices given a home's typical features. For example, given a dataset containing 20,000 different homes and its home features (i.e. number of bedrooms, number of bathrooms, square foot of living space, year built, zip code, etc), ACME Bank would like to know whether it can appropriately appraise a home's value with these different data. Accordingly, executives at ACME Bank have provided us with a dataset for house sales in King County from 2014 - 2015 in hopes obtaining a solution that could model a home's price. At Group One Inc., we have formulated a statistical model to answer this business problem.  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92cadc0c",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Data Understanding"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5020c4ec",
   "metadata": {
    "hidden": true
   },
   "source": [
    "The Dataset used is from King County, Washington between May 2014 and May 2015. It includes housing sales prices along with other descriptive information invovling the properties. \n",
    "\n",
    "* https://www.kaggle.com/harlfoxem/housesalesprediction\n",
    "\n",
    "The Data that was included in our model can be seen below, broken down into target, numeric, and categorical data. \n",
    "\n",
    "**Target Data**: \n",
    "\n",
    "* Price - Prediction Target\n",
    "\n",
    "**Numeric Data**: \n",
    "* bedrooms - Number of Bedrooms\n",
    "* bathrooms - Number of Bathrooms\n",
    "* sq_ft living - Square footage of living space\n",
    "* sqft_lot - Square footage of the lot\n",
    "* sqft_above - Square footage of the house \n",
    "* sqft_basement - Square footage of the basement \n",
    "* lat - latitude coordinate\n",
    "* long - longitude coordinate\n",
    "* sqft_living15 - The square footage of interior living space of surrounding 15 neighbors \n",
    "* sqft_lot15 - The square footage of the land lots of the nearest 15 neighbors\n",
    "\n",
    "**Categorical Data**: \n",
    "* floors - total floors in the house\n",
    "* waterfront - view of waterfront of house\n",
    "* view - number of times the house has been viewed\n",
    "* condition - how good the condition of the house is \n",
    "* grade - overall grade of housing unit condition,based on King County grading system\n",
    "* if_renovated - whether house was renovated\n",
    "* zipcode - location of the house\n",
    "* month_of_date - month of when the house was sold "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32f70be8",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Import"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a738e6cf",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Here we imported all the relevant libraries for the project"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "dcb682f8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split, ShuffleSplit, cross_validate\n",
    "from sklearn.preprocessing import PolynomialFeatures, StandardScaler, OneHotEncoder\n",
    "from sklearn.dummy import DummyRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from statsmodels.formula.api import ols\n",
    "import statsmodels.stats.api as sms\n",
    "import statsmodels.api as sm\n",
    "import scipy.stats as stats\n",
    "from sklearn.feature_selection import RFE\n",
    "from statsmodels.stats.outliers_influence import OLSInfluence as influence\n",
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bf418d0",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Review the Data File"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1aaec584",
   "metadata": {
    "hidden": true
   },
   "source": [
    "The data file was reviewed to get a better understanding of what features were included and what data types are the features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "812b507b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#read in the file\n",
    "df = pd.read_csv('data/kc_house_data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "4893c3d0",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7129300520</td>\n",
       "      <td>10/13/2014</td>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1180</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1955</td>\n",
       "      <td>0.0</td>\n",
       "      <td>98178</td>\n",
       "      <td>47.5112</td>\n",
       "      <td>-122.257</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6414100192</td>\n",
       "      <td>12/9/2014</td>\n",
       "      <td>538000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>2570</td>\n",
       "      <td>7242</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2170</td>\n",
       "      <td>400.0</td>\n",
       "      <td>1951</td>\n",
       "      <td>1991.0</td>\n",
       "      <td>98125</td>\n",
       "      <td>47.7210</td>\n",
       "      <td>-122.319</td>\n",
       "      <td>1690</td>\n",
       "      <td>7639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5631500400</td>\n",
       "      <td>2/25/2015</td>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>770</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1933</td>\n",
       "      <td>NaN</td>\n",
       "      <td>98028</td>\n",
       "      <td>47.7379</td>\n",
       "      <td>-122.233</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2487200875</td>\n",
       "      <td>12/9/2014</td>\n",
       "      <td>604000.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3.00</td>\n",
       "      <td>1960</td>\n",
       "      <td>5000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>1050</td>\n",
       "      <td>910.0</td>\n",
       "      <td>1965</td>\n",
       "      <td>0.0</td>\n",
       "      <td>98136</td>\n",
       "      <td>47.5208</td>\n",
       "      <td>-122.393</td>\n",
       "      <td>1360</td>\n",
       "      <td>5000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1954400510</td>\n",
       "      <td>2/18/2015</td>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1680</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>98074</td>\n",
       "      <td>47.6168</td>\n",
       "      <td>-122.045</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           id        date     price  bedrooms  bathrooms  sqft_living  \\\n",
       "0  7129300520  10/13/2014  221900.0         3       1.00         1180   \n",
       "1  6414100192   12/9/2014  538000.0         3       2.25         2570   \n",
       "2  5631500400   2/25/2015  180000.0         2       1.00          770   \n",
       "3  2487200875   12/9/2014  604000.0         4       3.00         1960   \n",
       "4  1954400510   2/18/2015  510000.0         3       2.00         1680   \n",
       "\n",
       "   sqft_lot  floors  waterfront  view  condition  grade  sqft_above  \\\n",
       "0      5650     1.0         NaN   0.0          3      7        1180   \n",
       "1      7242     2.0         0.0   0.0          3      7        2170   \n",
       "2     10000     1.0         0.0   0.0          3      6         770   \n",
       "3      5000     1.0         0.0   0.0          5      7        1050   \n",
       "4      8080     1.0         0.0   0.0          3      8        1680   \n",
       "\n",
       "  sqft_basement  yr_built  yr_renovated  zipcode      lat     long  \\\n",
       "0           0.0      1955           0.0    98178  47.5112 -122.257   \n",
       "1         400.0      1951        1991.0    98125  47.7210 -122.319   \n",
       "2           0.0      1933           NaN    98028  47.7379 -122.233   \n",
       "3         910.0      1965           0.0    98136  47.5208 -122.393   \n",
       "4           0.0      1987           0.0    98074  47.6168 -122.045   \n",
       "\n",
       "   sqft_living15  sqft_lot15  \n",
       "0           1340        5650  \n",
       "1           1690        7639  \n",
       "2           2720        8062  \n",
       "3           1360        5000  \n",
       "4           1800        7503  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check the first 5 entries in the data\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "12131fb7",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21597 entries, 0 to 21596\n",
      "Data columns (total 21 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   id             21597 non-null  int64  \n",
      " 1   date           21597 non-null  object \n",
      " 2   price          21597 non-null  float64\n",
      " 3   bedrooms       21597 non-null  int64  \n",
      " 4   bathrooms      21597 non-null  float64\n",
      " 5   sqft_living    21597 non-null  int64  \n",
      " 6   sqft_lot       21597 non-null  int64  \n",
      " 7   floors         21597 non-null  float64\n",
      " 8   waterfront     19221 non-null  float64\n",
      " 9   view           21534 non-null  float64\n",
      " 10  condition      21597 non-null  int64  \n",
      " 11  grade          21597 non-null  int64  \n",
      " 12  sqft_above     21597 non-null  int64  \n",
      " 13  sqft_basement  21597 non-null  object \n",
      " 14  yr_built       21597 non-null  int64  \n",
      " 15  yr_renovated   17755 non-null  float64\n",
      " 16  zipcode        21597 non-null  int64  \n",
      " 17  lat            21597 non-null  float64\n",
      " 18  long           21597 non-null  float64\n",
      " 19  sqft_living15  21597 non-null  int64  \n",
      " 20  sqft_lot15     21597 non-null  int64  \n",
      "dtypes: float64(8), int64(11), object(2)\n",
      "memory usage: 3.5+ MB\n"
     ]
    }
   ],
   "source": [
    "#check the columns and nulls\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f7ea2a4",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Cleaning the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27eceaa0",
   "metadata": {
    "hidden": true
   },
   "source": [
    "After reviewing the data, we noticed that some of the columns had nulls or the wrong data type. For the nulls, we made assumptions to fill in the null values. The column \"sqft_basement\" had to be converted to a number."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "05ddc010",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#for year renovated, convert any houses that have been renovated to '1' to indicate true\n",
    "#for any nulls, assume no renovation\n",
    "df['yr_renovated'].fillna(0, inplace=True)\n",
    "df['yr_renovated'] = df['yr_renovated'].apply(lambda x: 1 if x > 0 else x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "542f46b9",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df.rename(columns={'yr_renovated': 'if_renovated'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "e2efc94b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#for any nulls, assume no waterfront\n",
    "df['waterfront'].fillna(0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e49b68a4",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#for any nulls, assume no one viewed the property\n",
    "df['view'].fillna(0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "b5b05840",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#clean up sqft_basement and convert to int\n",
    "df['sqft_basement'] = df['sqft_basement'].replace({'?':np.nan}).astype(float)\n",
    "df['sqft_basement'].fillna(df['sqft_living']-df['sqft_above'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f21b56d4",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We also extracted the month from the date to see if there were any seasonal impact on housing prices."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "e8511ffe",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#retrieve the months and year\n",
    "df['month_of_date'] = pd.DatetimeIndex(df['date']).month\n",
    "df['year_of_date'] = pd.DatetimeIndex(df['date']).year"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "897b8676",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We converted the year built column to the age of the house to compare the data more easily"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "d6d9d9f1",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#convert yr_built to age of house by subtracting year the property was sold by the year it was built\n",
    "#to create a more sensible column \n",
    "df['age_of_house'] = df['year_of_date'] - df['yr_built']\n",
    "\n",
    "#drop year of date because years are only 2014 and 2015, and will not impact our predicative model\n",
    "#drop yr_built b/c it is redundant with age_of_house\n",
    "df.drop(columns=['year_of_date'], inplace=True)\n",
    "df.drop(columns=['yr_built'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "656b005e",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#drop duplicates if any\n",
    "df.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "cf019a9f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#drop id and date columns\n",
    "df.drop(columns=['id'], inplace=True)\n",
    "df.drop(columns=['date'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "fb9a5090",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#reset index\n",
    "df.reset_index(inplace=True, drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "5515999c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#convert some of the categorical data from floats to ints\n",
    "df['waterfront'] = df['waterfront'].astype(int)\n",
    "df['view'] = df['view'].astype(int)\n",
    "df['sqft_basement'] = df['sqft_basement'].astype(int)\n",
    "df['if_renovated'] = df['if_renovated'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "ddbd9c3b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21597 entries, 0 to 21596\n",
      "Data columns (total 20 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   price          21597 non-null  float64\n",
      " 1   bedrooms       21597 non-null  int64  \n",
      " 2   bathrooms      21597 non-null  float64\n",
      " 3   sqft_living    21597 non-null  int64  \n",
      " 4   sqft_lot       21597 non-null  int64  \n",
      " 5   floors         21597 non-null  float64\n",
      " 6   waterfront     21597 non-null  int64  \n",
      " 7   view           21597 non-null  int64  \n",
      " 8   condition      21597 non-null  int64  \n",
      " 9   grade          21597 non-null  int64  \n",
      " 10  sqft_above     21597 non-null  int64  \n",
      " 11  sqft_basement  21597 non-null  int64  \n",
      " 12  if_renovated   21597 non-null  int64  \n",
      " 13  zipcode        21597 non-null  int64  \n",
      " 14  lat            21597 non-null  float64\n",
      " 15  long           21597 non-null  float64\n",
      " 16  sqft_living15  21597 non-null  int64  \n",
      " 17  sqft_lot15     21597 non-null  int64  \n",
      " 18  month_of_date  21597 non-null  int64  \n",
      " 19  age_of_house   21597 non-null  int64  \n",
      "dtypes: float64(5), int64(15)\n",
      "memory usage: 3.3 MB\n"
     ]
    }
   ],
   "source": [
    "#check cleaned data\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "0e4868a8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>if_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "      <th>month_of_date</th>\n",
       "      <th>age_of_house</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1180</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>98178</td>\n",
       "      <td>47.5112</td>\n",
       "      <td>-122.257</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>10</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>538000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>2570</td>\n",
       "      <td>7242</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2170</td>\n",
       "      <td>400</td>\n",
       "      <td>1</td>\n",
       "      <td>98125</td>\n",
       "      <td>47.7210</td>\n",
       "      <td>-122.319</td>\n",
       "      <td>1690</td>\n",
       "      <td>7639</td>\n",
       "      <td>12</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>770</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>98028</td>\n",
       "      <td>47.7379</td>\n",
       "      <td>-122.233</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "      <td>2</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>604000.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3.00</td>\n",
       "      <td>1960</td>\n",
       "      <td>5000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>1050</td>\n",
       "      <td>910</td>\n",
       "      <td>0</td>\n",
       "      <td>98136</td>\n",
       "      <td>47.5208</td>\n",
       "      <td>-122.393</td>\n",
       "      <td>1360</td>\n",
       "      <td>5000</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1680</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>98074</td>\n",
       "      <td>47.6168</td>\n",
       "      <td>-122.045</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "      <td>2</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      price  bedrooms  bathrooms  sqft_living  sqft_lot  floors  waterfront  \\\n",
       "0  221900.0         3       1.00         1180      5650     1.0           0   \n",
       "1  538000.0         3       2.25         2570      7242     2.0           0   \n",
       "2  180000.0         2       1.00          770     10000     1.0           0   \n",
       "3  604000.0         4       3.00         1960      5000     1.0           0   \n",
       "4  510000.0         3       2.00         1680      8080     1.0           0   \n",
       "\n",
       "   view  condition  grade  sqft_above  sqft_basement  if_renovated  zipcode  \\\n",
       "0     0          3      7        1180              0             0    98178   \n",
       "1     0          3      7        2170            400             1    98125   \n",
       "2     0          3      6         770              0             0    98028   \n",
       "3     0          5      7        1050            910             0    98136   \n",
       "4     0          3      8        1680              0             0    98074   \n",
       "\n",
       "       lat     long  sqft_living15  sqft_lot15  month_of_date  age_of_house  \n",
       "0  47.5112 -122.257           1340        5650             10            59  \n",
       "1  47.7210 -122.319           1690        7639             12            63  \n",
       "2  47.7379 -122.233           2720        8062              2            82  \n",
       "3  47.5208 -122.393           1360        5000             12            49  \n",
       "4  47.6168 -122.045           1800        7503              2            28  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78a7eade",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Exploratory Data Analysis (EDA)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e4611f7",
   "metadata": {
    "hidden": true
   },
   "source": [
    "In the EDA phase, we explored the target and the features included in the data. For this project, 'price' will be our target, and the remaining data will be our features. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54ea662c",
   "metadata": {
    "hidden": true
   },
   "source": [
    "### Target: Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "9b1286fa",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Since price is our target, we will explore first\n",
    "#view distribution of price using histogram\n",
    "sns.set(style = 'white')\n",
    "fig, ax = plt.subplots(figsize = (8,8))\n",
    "sns.histplot(data = df, x = 'price', palette = 'Dark', )\n",
    "ax.set_xlabel('Price')\n",
    "ax.set_ylabel('Count')\n",
    "ax.set_title('Distribution of Price')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6a28018",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We notice from the histogram that the price data is skewed to the right, indicating a non-normal distribution. This is further validated by the box-plot below"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "8807607d",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot a boxplot for price\n",
    "sns.set(style = 'white')\n",
    "fig, ax = plt.subplots(figsize = (6,6))\n",
    "sns.boxplot(data = df, x = 'price', palette = 'pastel', fliersize = 5, whis = 8)\n",
    "ax.set_xlabel('Price')\n",
    "ax.set_ylabel('Count')\n",
    "ax.set_title('Distribution of Price')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07ae9f36",
   "metadata": {
    "hidden": true
   },
   "source": [
    "To normalize the price data, we log-transformed (base of e) the data. We can see in the histogram below, the log-transformed data looks more similar to a normal distribution than untransformed price data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "06423cb9",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Because the data is skewed to the right, transform the price data using log\n",
    "df['ln_price'] = np.log(df['price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "1df8091f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#view distribution of log base e for price using histogram\n",
    "sns.set(style = 'white')\n",
    "fig, ax = plt.subplots(figsize = (6,6))\n",
    "sns.histplot(data = df, x = 'ln_price', palette = 'Dark')\n",
    "ax.set_xlabel('Natural Log of Price')\n",
    "ax.set_ylabel('Count')\n",
    "ax.set_title('Distribution of Natural Log of Price')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "f91c15bf",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(style = 'white')\n",
    "fig, ax = plt.subplots(figsize = (6,6))\n",
    "sns.boxplot(data = df, x = 'ln_price', palette = \"pastel\")\n",
    "ax.set_xlabel(\"Price\")\n",
    "ax.set_ylabel(\"Count\")\n",
    "ax.set_title(\"Distribution of Price\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be8da9b4",
   "metadata": {
    "hidden": true
   },
   "source": [
    "### Features: Everything Else"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "881836b5",
   "metadata": {
    "hidden": true
   },
   "source": [
    "To review the features of the data, we first analyze a pair plot of the data to first identify the numeric and categorical features. We can also see linearity between the target and each feature from the plot. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "53c27dd2",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#plot the pairplot of the dataframe\n",
    "#note that both price and ln(price) are included\n",
    "#sns.pairplot(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "db33590f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['price', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors',\n",
       "       'waterfront', 'view', 'condition', 'grade', 'sqft_above',\n",
       "       'sqft_basement', 'if_renovated', 'zipcode', 'lat', 'long',\n",
       "       'sqft_living15', 'sqft_lot15', 'month_of_date', 'age_of_house',\n",
       "       'ln_price'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "beb0cc05",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#based on the pairplot, we can see which data are categorical and which are numeric\n",
    "numeric = ['bedrooms', \n",
    "           'bathrooms', \n",
    "           'sqft_living', \n",
    "           'sqft_lot', \n",
    "           'sqft_above', \n",
    "           'sqft_basement',\n",
    "           'lat', \n",
    "           'long',\n",
    "           'sqft_living15', \n",
    "           'sqft_lot15']\n",
    "\n",
    "categorical = ['floors',\n",
    "               'waterfront', \n",
    "               'view', \n",
    "               'condition', \n",
    "               'grade',\n",
    "               'if_renovated',\n",
    "               'zipcode',\n",
    "               'month_of_date']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90ec1176",
   "metadata": {
    "hidden": true
   },
   "source": [
    "It's important to validate that all observations are properly input or they could throw off the modeling process. Some erroneous observations may have values that dont make sense in a realworld context making them easy to identify and remove. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "7fcf4273",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3     9824\n",
       "4     6882\n",
       "2     2760\n",
       "5     1601\n",
       "6      272\n",
       "1      196\n",
       "7       38\n",
       "8       13\n",
       "9        6\n",
       "10       3\n",
       "11       1\n",
       "33       1\n",
       "Name: bedrooms, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "2.50    5377\n",
       "1.00    3851\n",
       "1.75    3048\n",
       "2.25    2047\n",
       "2.00    1930\n",
       "1.50    1445\n",
       "2.75    1185\n",
       "3.00     753\n",
       "3.50     731\n",
       "3.25     589\n",
       "3.75     155\n",
       "4.00     136\n",
       "4.50     100\n",
       "4.25      79\n",
       "0.75      71\n",
       "4.75      23\n",
       "5.00      21\n",
       "5.25      13\n",
       "5.50      10\n",
       "1.25       9\n",
       "6.00       6\n",
       "0.50       4\n",
       "5.75       4\n",
       "6.75       2\n",
       "8.00       2\n",
       "6.25       2\n",
       "6.50       2\n",
       "7.50       1\n",
       "7.75       1\n",
       "Name: bathrooms, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "1300    138\n",
       "1400    135\n",
       "1440    133\n",
       "1800    129\n",
       "1660    129\n",
       "       ... \n",
       "2507      1\n",
       "9890      1\n",
       "5584      1\n",
       "1961      1\n",
       "1425      1\n",
       "Name: sqft_living, Length: 1034, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "5000     358\n",
       "6000     290\n",
       "4000     251\n",
       "7200     220\n",
       "4800     119\n",
       "        ... \n",
       "22605      1\n",
       "25248      1\n",
       "9934       1\n",
       "9142       1\n",
       "1076       1\n",
       "Name: sqft_lot, Length: 9776, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "1.0    10673\n",
       "2.0     8235\n",
       "1.5     1910\n",
       "3.0      611\n",
       "2.5      161\n",
       "3.5        7\n",
       "Name: floors, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "0    21451\n",
       "1      146\n",
       "Name: waterfront, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "0    19485\n",
       "2      957\n",
       "3      508\n",
       "1      330\n",
       "4      317\n",
       "Name: view, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "3    14020\n",
       "4     5677\n",
       "5     1701\n",
       "2      170\n",
       "1       29\n",
       "Name: condition, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "7     8974\n",
       "8     6065\n",
       "9     2615\n",
       "6     2038\n",
       "10    1134\n",
       "11     399\n",
       "5      242\n",
       "12      89\n",
       "4       27\n",
       "13      13\n",
       "3        1\n",
       "Name: grade, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "1300    212\n",
       "1010    210\n",
       "1200    206\n",
       "1220    192\n",
       "1140    184\n",
       "       ... \n",
       "3674      1\n",
       "2979      1\n",
       "2382      1\n",
       "6290      1\n",
       "1425      1\n",
       "Name: sqft_above, Length: 942, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "0      13110\n",
       "600      221\n",
       "700      218\n",
       "500      214\n",
       "800      206\n",
       "       ...  \n",
       "518        1\n",
       "374        1\n",
       "784        1\n",
       "906        1\n",
       "248        1\n",
       "Name: sqft_basement, Length: 306, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "0    20853\n",
       "1      744\n",
       "Name: if_renovated, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "98103    602\n",
       "98038    589\n",
       "98115    583\n",
       "98052    574\n",
       "98117    553\n",
       "        ... \n",
       "98102    104\n",
       "98010    100\n",
       "98024     80\n",
       "98148     57\n",
       "98039     50\n",
       "Name: zipcode, Length: 70, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "47.5491    17\n",
       "47.6846    17\n",
       "47.5322    17\n",
       "47.6624    17\n",
       "47.6711    16\n",
       "           ..\n",
       "47.1976     1\n",
       "47.3013     1\n",
       "47.6139     1\n",
       "47.4184     1\n",
       "47.6502     1\n",
       "Name: lat, Length: 5033, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "-122.290    115\n",
       "-122.300    111\n",
       "-122.362    104\n",
       "-122.291    100\n",
       "-122.372     99\n",
       "           ... \n",
       "-122.459      1\n",
       "-121.726      1\n",
       "-121.819      1\n",
       "-122.440      1\n",
       "-121.403      1\n",
       "Name: long, Length: 751, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "1540    197\n",
       "1440    195\n",
       "1560    192\n",
       "1500    180\n",
       "1460    169\n",
       "       ... \n",
       "3736      1\n",
       "4950      1\n",
       "2728      1\n",
       "4740      1\n",
       "2927      1\n",
       "Name: sqft_living15, Length: 777, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "5000     427\n",
       "4000     356\n",
       "6000     288\n",
       "7200     210\n",
       "4800     145\n",
       "        ... \n",
       "10170      1\n",
       "10573      1\n",
       "11477      1\n",
       "1449       1\n",
       "2007       1\n",
       "Name: sqft_lot15, Length: 8682, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "5     2414\n",
       "4     2229\n",
       "7     2211\n",
       "6     2178\n",
       "8     1939\n",
       "10    1876\n",
       "3     1875\n",
       "9     1771\n",
       "12    1470\n",
       "11    1409\n",
       "2     1247\n",
       "1      978\n",
       "Name: month_of_date, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       " 9      472\n",
       " 8      443\n",
       " 11     431\n",
       " 0      430\n",
       " 10     428\n",
       "       ... \n",
       " 113     28\n",
       " 115     26\n",
       " 81      23\n",
       " 80      21\n",
       "-1       12\n",
       "Name: age_of_house, Length: 117, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "13.017003    172\n",
       "12.765688    172\n",
       "13.217674    159\n",
       "13.122363    152\n",
       "12.959844    150\n",
       "            ... \n",
       "12.538250      1\n",
       "12.994275      1\n",
       "12.779594      1\n",
       "13.755761      1\n",
       "12.904459      1\n",
       "Name: ln_price, Length: 3622, dtype: int64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visually inspecting value counts to look for weird values\n",
    "for column in df.columns:\n",
    "    if not column == 'price':\n",
    "        display(df[column].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "5b4c6a85",
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "#found 1 obs that should be removed\n",
    "df[df['bedrooms'] >= 20]\n",
    "df.drop(15856, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c824367f",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>if_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "      <th>month_of_date</th>\n",
       "      <th>age_of_house</th>\n",
       "      <th>ln_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4020</th>\n",
       "      <td>800000.0</td>\n",
       "      <td>7</td>\n",
       "      <td>6.75</td>\n",
       "      <td>7480</td>\n",
       "      <td>41664</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>5080</td>\n",
       "      <td>2400</td>\n",
       "      <td>0</td>\n",
       "      <td>98166</td>\n",
       "      <td>47.4643</td>\n",
       "      <td>-122.368</td>\n",
       "      <td>2810</td>\n",
       "      <td>33190</td>\n",
       "      <td>10</td>\n",
       "      <td>61</td>\n",
       "      <td>13.592367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7245</th>\n",
       "      <td>7700000.0</td>\n",
       "      <td>6</td>\n",
       "      <td>8.00</td>\n",
       "      <td>12050</td>\n",
       "      <td>27600</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>8570</td>\n",
       "      <td>3480</td>\n",
       "      <td>1</td>\n",
       "      <td>98102</td>\n",
       "      <td>47.6298</td>\n",
       "      <td>-122.323</td>\n",
       "      <td>3940</td>\n",
       "      <td>8800</td>\n",
       "      <td>10</td>\n",
       "      <td>104</td>\n",
       "      <td>15.856731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8085</th>\n",
       "      <td>4670000.0</td>\n",
       "      <td>5</td>\n",
       "      <td>6.75</td>\n",
       "      <td>9640</td>\n",
       "      <td>13068</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>4820</td>\n",
       "      <td>4820</td>\n",
       "      <td>1</td>\n",
       "      <td>98040</td>\n",
       "      <td>47.5570</td>\n",
       "      <td>-122.210</td>\n",
       "      <td>3270</td>\n",
       "      <td>10454</td>\n",
       "      <td>6</td>\n",
       "      <td>31</td>\n",
       "      <td>15.356670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8537</th>\n",
       "      <td>450000.0</td>\n",
       "      <td>9</td>\n",
       "      <td>7.50</td>\n",
       "      <td>4050</td>\n",
       "      <td>6504</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>4050</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>98144</td>\n",
       "      <td>47.5923</td>\n",
       "      <td>-122.301</td>\n",
       "      <td>1448</td>\n",
       "      <td>3866</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>13.017003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9245</th>\n",
       "      <td>6890000.0</td>\n",
       "      <td>6</td>\n",
       "      <td>7.75</td>\n",
       "      <td>9890</td>\n",
       "      <td>31374</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>8860</td>\n",
       "      <td>1030</td>\n",
       "      <td>0</td>\n",
       "      <td>98039</td>\n",
       "      <td>47.6305</td>\n",
       "      <td>-122.240</td>\n",
       "      <td>4540</td>\n",
       "      <td>42730</td>\n",
       "      <td>9</td>\n",
       "      <td>13</td>\n",
       "      <td>15.745582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12764</th>\n",
       "      <td>2280000.0</td>\n",
       "      <td>7</td>\n",
       "      <td>8.00</td>\n",
       "      <td>13540</td>\n",
       "      <td>307752</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>9410</td>\n",
       "      <td>4130</td>\n",
       "      <td>0</td>\n",
       "      <td>98053</td>\n",
       "      <td>47.6675</td>\n",
       "      <td>-121.986</td>\n",
       "      <td>4850</td>\n",
       "      <td>217800</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>14.639686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14542</th>\n",
       "      <td>2890000.0</td>\n",
       "      <td>5</td>\n",
       "      <td>6.25</td>\n",
       "      <td>8670</td>\n",
       "      <td>64033</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>6120</td>\n",
       "      <td>2550</td>\n",
       "      <td>0</td>\n",
       "      <td>98177</td>\n",
       "      <td>47.7295</td>\n",
       "      <td>-122.372</td>\n",
       "      <td>4140</td>\n",
       "      <td>81021</td>\n",
       "      <td>6</td>\n",
       "      <td>49</td>\n",
       "      <td>14.876767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18288</th>\n",
       "      <td>3300000.0</td>\n",
       "      <td>5</td>\n",
       "      <td>6.25</td>\n",
       "      <td>8020</td>\n",
       "      <td>21738</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>8020</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>98006</td>\n",
       "      <td>47.5675</td>\n",
       "      <td>-122.189</td>\n",
       "      <td>4160</td>\n",
       "      <td>18969</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>15.009433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20562</th>\n",
       "      <td>1180000.0</td>\n",
       "      <td>6</td>\n",
       "      <td>6.50</td>\n",
       "      <td>6260</td>\n",
       "      <td>10955</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>4840</td>\n",
       "      <td>1420</td>\n",
       "      <td>0</td>\n",
       "      <td>98075</td>\n",
       "      <td>47.5947</td>\n",
       "      <td>-122.039</td>\n",
       "      <td>2710</td>\n",
       "      <td>12550</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>13.981025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21490</th>\n",
       "      <td>2240000.0</td>\n",
       "      <td>5</td>\n",
       "      <td>6.50</td>\n",
       "      <td>7270</td>\n",
       "      <td>130017</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>6420</td>\n",
       "      <td>850</td>\n",
       "      <td>0</td>\n",
       "      <td>98027</td>\n",
       "      <td>47.5371</td>\n",
       "      <td>-121.982</td>\n",
       "      <td>1800</td>\n",
       "      <td>44890</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>14.621986</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           price  bedrooms  bathrooms  sqft_living  sqft_lot  floors  \\\n",
       "4020    800000.0         7       6.75         7480     41664     2.0   \n",
       "7245   7700000.0         6       8.00        12050     27600     2.5   \n",
       "8085   4670000.0         5       6.75         9640     13068     1.0   \n",
       "8537    450000.0         9       7.50         4050      6504     2.0   \n",
       "9245   6890000.0         6       7.75         9890     31374     2.0   \n",
       "12764  2280000.0         7       8.00        13540    307752     3.0   \n",
       "14542  2890000.0         5       6.25         8670     64033     2.0   \n",
       "18288  3300000.0         5       6.25         8020     21738     2.0   \n",
       "20562  1180000.0         6       6.50         6260     10955     2.0   \n",
       "21490  2240000.0         5       6.50         7270    130017     2.0   \n",
       "\n",
       "       waterfront  view  condition  grade  sqft_above  sqft_basement  \\\n",
       "4020            0     2          3     11        5080           2400   \n",
       "7245            0     3          4     13        8570           3480   \n",
       "8085            1     4          3     12        4820           4820   \n",
       "8537            0     0          3      7        4050              0   \n",
       "9245            0     4          3     13        8860           1030   \n",
       "12764           0     4          3     12        9410           4130   \n",
       "14542           0     4          3     13        6120           2550   \n",
       "18288           0     0          3     11        8020              0   \n",
       "20562           0     0          3     11        4840           1420   \n",
       "21490           0     0          3     12        6420            850   \n",
       "\n",
       "       if_renovated  zipcode      lat     long  sqft_living15  sqft_lot15  \\\n",
       "4020              0    98166  47.4643 -122.368           2810       33190   \n",
       "7245              1    98102  47.6298 -122.323           3940        8800   \n",
       "8085              1    98040  47.5570 -122.210           3270       10454   \n",
       "8537              0    98144  47.5923 -122.301           1448        3866   \n",
       "9245              0    98039  47.6305 -122.240           4540       42730   \n",
       "12764             0    98053  47.6675 -121.986           4850      217800   \n",
       "14542             0    98177  47.7295 -122.372           4140       81021   \n",
       "18288             0    98006  47.5675 -122.189           4160       18969   \n",
       "20562             0    98075  47.5947 -122.039           2710       12550   \n",
       "21490             0    98027  47.5371 -121.982           1800       44890   \n",
       "\n",
       "       month_of_date  age_of_house   ln_price  \n",
       "4020              10            61  13.592367  \n",
       "7245              10           104  15.856731  \n",
       "8085               6            31  15.356670  \n",
       "8537               8            18  13.017003  \n",
       "9245               9            13  15.745582  \n",
       "12764              5            15  14.639686  \n",
       "14542              6            49  14.876767  \n",
       "18288              7            13  15.009433  \n",
       "20562              3             8  13.981025  \n",
       "21490              5             4  14.621986  "
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#these look fine\n",
    "df[df['bathrooms']>6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "6a9f8968",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a df with the target as the first column,\n",
    "# then compute the correlation matrix\n",
    "X = df[numeric]\n",
    "y = df['price']\n",
    "heatmap_data = pd.concat([y, X], axis=1)\n",
    "corr = heatmap_data.corr()\n",
    "\n",
    "# Set up figure and axes\n",
    "fig, ax = plt.subplots(figsize=(15, 15))\n",
    "\n",
    "# Plot a heatmap of the correlation matrix, with both\n",
    "# numbers and colors indicating the correlations\n",
    "sns.heatmap(\n",
    "    # Specifies the data to be plotted\n",
    "    data=corr,\n",
    "    # The mask means we only show half the values,\n",
    "    # instead of showing duplicates. It's optional.\n",
    "    mask=np.triu(np.ones_like(corr, dtype=bool)),\n",
    "    # Specifies that we should use the existing axes\n",
    "    ax=ax,\n",
    "    # Specifies that we want labels, not just colors\n",
    "    annot=True,\n",
    "    # Customizes colorbar appearance\n",
    "    cbar_kws={\"label\": \"Correlation\", \"orientation\": \"horizontal\", \"pad\": .2, \"extend\": \"both\"}\n",
    ")\n",
    "\n",
    "# Customize the plot appearance\n",
    "ax.set_title(\"Heatmap of Correlation Between Attributes and Price\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "4c05a030",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "price            1.000000\n",
       "sqft_living      0.701929\n",
       "grade            0.667964\n",
       "sqft_above       0.605392\n",
       "sqft_living15    0.585267\n",
       "bathrooms        0.525915\n",
       "view             0.393502\n",
       "sqft_basement    0.323794\n",
       "bedrooms         0.315961\n",
       "lat              0.306687\n",
       "waterfront       0.264308\n",
       "floors           0.256820\n",
       "if_renovated     0.117546\n",
       "sqft_lot         0.089879\n",
       "sqft_lot15       0.082849\n",
       "age_of_house     0.053901\n",
       "zipcode          0.053409\n",
       "condition        0.036031\n",
       "long             0.022047\n",
       "month_of_date    0.009926\n",
       "Name: price, dtype: float64"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#reporting the correlation between price (target) and predictors\n",
    "df.corr()['price'].drop(['ln_price']).map(abs).sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "98fc039b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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NWvSsGFDXFxcKFSoEAUKFODy5cvkypWLBg0a4OPjw+zZsx/reQoXLvzQ87m4uJApUyZmzJjB9evXyZgxI5MmTUpwjipVqtChQwfat2+P3W533JTln5dG/lO5cuUYN24c48ePJzw8nJiYGHLlysU333xDpkyZyJQp0/903kfN34Nat25Nv379aNq0KbGxsVSpUsVx45/SpUszd+5cevTogY+Pj+OYYcOGMW7cOJo2bUpMTAzVqlWjW7dujzXXD+rfvz9ubm5YLBYiIiJo2LCh41LaTz/9lPHjx/P5558TGxtL7969HZe7Pvj5LVSoEBaLxXHZaNWqVfn000959dVXAShQoABjxoyhb9++GIbhuLlV6tSpeeONN/Dz8+PNN9/EYrGQLVs2Pvnkk8fqPTo6mlWrVjFhwoR4+/PkyUPjxo1ZtGgR06dPp2TJkjRu3JglS5ZQu3Ztpk2b9tAVzgddvXqV1157DYvFwrRp00ifPr1j1bJhw4ZkzpyZChUq8McffwDE+1zNmTPnoWN+//33GTp0KCtWrMBqtVK3bl1eeeWVeM/dpEkTtmzZQsOGDbHb7dSqVYugoCBHGEyMs7Mzc+fOZdSoUUybNo2iRYsmuFT8v6pRowbnzp1zXNpcoEABxo4di4eHB507d+bdd9/FYrHg4eHBnDlz4q2qiogkNYvxONcFiYiI/A/279/vuOusiIiISGJ0+a6IiIiIiIiYRiulIiIiIiIiYhqtlIqIiIiIiIhpFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIipkkxoXT//v34+Pgk2flnzpzJtm3bkuz8IiIiIiIikpDN7AaeFb179za7BRERERERkRdOigulPj4+lChRgsOHD3P37l2GDRtGjRo1Hlo/e/ZsfH19OX/+PAEBAbz11lt06tSJ1atXs2bNGgIDA6lVqxb+/v6UL1+eli1bsmjRIpYtW4bVaqVWrVoMGDCA27dvM2LECG7evInFYqFfv35Urlw5GUcuIiIiIiLy/ElxoRQgJiaGFStWsH37dmbOnPnIUApw6tQpli9fjt1up2XLllSqVAkAPz8/Nm3ahM1mY9CgQQCcOHGCpUuX8v3335MqVSo6derEqVOn+OKLL2jVqhV16tTB39+ftm3bsnbtWjw8PJJ8vCIiIiIiIs+rFBlKq1WrBkDBggUJDAz81/omTZqQOnVqAGrXrs2+ffvIkCEDxYoVw2aLPwUHDx6kVq1apEmTBoBFixYBsGfPHi5cuMCsWbMAiI2N5erVqxQtWvQpjUpEREREROTFkyJDqaurKwAWi+Wx6q1Wq+Nju93u2HZzc0tQa7PZ4p3Xz8+PVKlSYbfb+frrr0mfPj0A/v7+eHp6/q9DEBEREREREVLQ3Xf/i61btxIdHU1QUBA7duygatWqD60tV64cO3fuJCwsjNjYWPr168epU6eoWLEiS5cuBeDcuXM0bdqUiIiI5BqCiIiIiIjIcylFrpQ+KVdXV9q2bUtoaChdu3alQIECnDhxItHal156ibfffpvWrVtjt9upV68elStXJn/+/IwYMYKmTZsCMGnSJL2fVERERERE5D+yGIZhmN1EUpo9ezYAPXv2NLkTERERERER+afnYqV00aJFrFmzJsH+LFmyULJkSRM6EhERERERkcfx3K+UioiIiIiIyLPrhbjRkYiIiIiIiDybFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGlsZjfwItiTrZXZLaQolW98b3YLIiIiIiKSTLRSKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiplEoFREREREREdMolIqIiIiIiIhpbGY3IE9fhjovk2vI2zi52Aj7/TLn+35KXGhEvJqsHRuStf2rYBhEXrrJ+f7ziLkTDMArp78i2veOo/b6vHXcXr07WccgIiIiIiIvBlNXSvfv34+Pj0+yH/s8s3mmpcCMHvzRaTJHq/Ui6rIfuYe+Ha8mdcl8eHdvxsmmQzhW60MiLt4g58A2ALjl9yY2IJTj9fo7/imQioiIiIhIUtHlu8+Z9DVKEXrsHJEXbwBw8+vNZGpZLV5N2IkLHK3cg7iQcCyuzrhk9SQ2IASAtOUKY9jtFF87llLbppHjwzfASS8TERERERFJGqZfvhsQEMB7772Hv78/JUuWZOTIkezbt49Zs2YRGxtLjhw5GDt2LBkyZODXX3/l448/xtXVlbx58zrO4ePjQ7p06fjrr7+YMWMGN2/eZMaMGdjtdnLmzMmYMWPIlCkTx44dY/z48URFRZEhQwbGjBlD7ty58fHxoVixYhw+fJioqCj69+/PN998w/nz5+nQoQMdOnRg7969TJ48GYB06dIxdepUMmbMaNa0PZSrdyaifG87tqNu3MGWNjVWj1TxLuE1YuPI2KA8+ad2xx4Vw+nJy+89YLMStOsEl8d/i8XZStHFQ4kLDefGZxuTeygiIiIiIvICMH0J7Nq1awwfPpz169cTFhbGwoULmTp1Kl988QVr166latWqTJkyhejoaAYNGsSsWbNYvXo1bm5u8c5TuHBhNm/eTJYsWRgxYgRz585lw4YNvPzyy4wZM4bo6Gj69u3reK7WrVvTt29fx/GGYbBq1SpeffVVxo0bx5w5c1iyZAlz584F4NNPP2XUqFGsXr2aypUrc+bMmWSdp8fmZAEj4W4jzp5g392fDnDwpY5cnbqSYsuGg8WC/5KtXBz2BfaIKOKCw/FduIGMDSskQ+MiIiIiIvIiMj2UlitXjjx58mCxWGjatClff/01N27c4J133qF58+YsWbKEy5cv88cff5AlSxby588PQIsWLeKdp2TJkgCcOHGCkiVLkiNHDgDeeust9u3bx6VLl0ibNq2jrmHDhly5coWQkHuXrVavXh0Ab29vSpUqRapUqciePTvBwfdu/lOnTh169OjBmDFjKFasGFWrVk36yfkfRF2/jYtXBse2azZPYgJCsEdEOfa55clKmvJFHNv+y7bjmiMTtvSpyfx6DdyL5nY8ZgGMmLhk6V1ERERERF48podSm+3+FcSGcW+J7+WXX2bdunWsW7eOVatWMWvWLCwWi+NxAKvVGu88f6+c2u3xVwQNwyA2NjbB/r8fi4u7F7icnZ0T7elvHTp0YPHixeTKlYvJkyczb968Jx1qsgj65RgeZQvhljcbAF7v1Cdg88F4Nc5eGSg0ry+2jGkAyNyqGuFnrxIbEIp74Zzk/Kg1ODnh5OZC1ncbcnv9b8k+DhEREREReTGYHkoPHz6Mr68vdrudtWvX0r59e44dO8bFixeBe5fNTpo0icKFC3P79m3Onj0LwMaNib/HsVSpUhw/fpxr164BsGLFCipUqEC+fPkIDAzkxIkTAGzatAlvb2/Sp0//WH2+8cYbhIWFOd5j+qxevhtzJ5hzfeZS+LP+lN41E/ciubg0+mtSl8pPqZ+nABCy/3euzfye4t+PodTPU8jUvCpnO04E4Oq0lcQGhFB6xzRKbZtGyKE/8F+y1cwhiYiIiIjIc8z0Gx0VKFCAIUOGcOvWLSpWrEj37t0pVqwYffr0wW634+XlxeTJk3F2dmbatGkMGDAAm81GsWLFEj1fpkyZGDNmDD169CAmJgZvb2/Gjx+Pi4sL06dPZ+zYsURERJAuXTqmT5/+2H327duXQYMGYbPZcHd3Z9y4cU9rCp66wO1HCNx+JN6+2MB7f+blb37fbMbvm80JjrVHRHO+76dJ3qOIiIiIiAiAxXjwmlhJEnuytTK7hRSl8o3vzW5BRERERESSiemX74qIiIiIiMiLS6FURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiprEYhmGY3cTzLqRbA7NbSFHsYTFmt5CipFu8zewWRERERET+Z1opFREREREREdMolIqIiIiIiIhpFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERER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H2veQniMWwCA/dolIr6ZQ+q+4/D45Ets5aoS/ul4ACKWzsPinhqPjz/HY+w84i7+SfTm1WYOSUREREQkRTHlRkcFChRgyJAh3Lp1i4oVK9K6dWv27NlDo0aNMAyDV155hb/++guAatWqMXLkSCZOnPhY53ZxcWH69OmMHTuWiIgI0qVLx/Tp0wGYPHkyo0aNYvbs2Tg7OzN79mxcXFwe67zdunVj6NChzJ07F2dnZ0aNGvU/jT05xJ06SPipg/H22a/8Fe/PvMQe2E7sge0JD46Juvd3TV8gsccPEHr8QLx9cRdDCB3W1bEds2crMXu2Jjw4POze3ysVEREREZH/icV42HWy8tSEdGtgdgspij0sxuwWUpR0i7eZ3YKIiIiIyP/s+f0DlCIiIiIiIvLMUygVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiplEoFREREREREdMolIqIiIiIiIhpFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaWxmN/AisNWoYHYLKYr91BmzW0hRInZ8bnYLKUqqWp3MbkFEREREHqCVUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJjGZnYDkrR2/enL7K3HiY6zU9ArPaOalcfDzdnx+IZjF1m89w/HdmhUDP7B4Wzu2xxPDzczWk521sIv41K/LVidsd+8TNSaeRAVEa/GpeE7WItXwogIBcC45UvUiumQygPXZp1xypYHIyaS2MM7iN33kxnDSDa7Tp5n9tpdRMfGUTB7Zkb5NMAjlavj8Q37TrF46yHHdmhENP4BIWz+pBueaVOz4pejrPntBFExsRTN5cUonwa4OOtbkYiIiMiLKsWslJ4+fZqaNWvS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OJBMmTLh4+PzRM9Zr149Ro4cSf/+/R/7mJo1a3L06FFatGhBunTpyJIlS7wV1WdZtULeVCsUf7UqnburI5ACFM/uyYbeTZK7tWdG3J9HifvzaLx99uuhRM4ZcL/m+G4iju9OeHB0JFFLJid1i8+UaiXyUa1E/Eu906VO5QikAMXzZGPD2M4JjrU6OdGtSRW6NamS1G2KiIiISAphMR72txyeAfv372fOnDksXrzY1D6OHj3KpUuXaNGiBTExMbz11ltMmDCBIkWKPNbxEctGJnGHzxf7qTNmt5CiONV9se6Y/F+lqtXJ7BZERERE5AGmrpT+V5s2bWLBggWJPrZu3bqn9jx58+Zlzpw5fPXVVxiGwWuvvfbYgVREREREREQe7pleKX1eaKX0yWil9MlopfTJaKVURERE5NnyAt7ZRkRERERERJ4VCqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiplEoFREREREREdMolIqIiIiIiIhpFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQWwzAMs5t43vnkbml2CymKb1yo2S2kKFms7ma3kKLks2i+nsT4S0vNbkFERESec1opFREREREREdMolIqIiIiIiIhpFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGlsZjcgSatU7bK8+VE7nF2cuXr2Mp99NJfI0IhEa7tM7cm1P66waeG6ZO4y+VWoXZ5Og9/F2cWZC79fZEr/aYSHhj9WTeo07vSf0o+c+XPi5GRhy6qfWf7pynjHZs2ZlXk/zmFg28H8eeKv5BxakihTuyytP/LB5uLMlbOXWPjRHCL+8Tp6WI3FyYmOYzpTtGJxAI7tOMyS8YsAyF4wB50+fh8391SAwbJPvuHErmPJO7gkVrhWaep/1Bqri42b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E8T8AbPpM+8jbC42/C7f5NMPZ5KvRH46T+zB4EYfPrQGYPGYL+k4pjNTts3BsNs59dsJ1s9fQ1xMLNO6fkz7kZ1wdnXBHhfH54Pn4X/lpskjfnrC7gTz/YAFtJnXG6uzjbuX/VjVdx7ZS+SlxcTOzGk05F/P4ZknKwHXbv1rnYiIiEhKZTESeyPYM+zGjRv069ePsLAwrFYrvXr1wtPTk9GjR2O328mRIwcBAQEsXryY2bNnA9CzZ08OHjzIwIED6dixIz4+Cf8sCtz7kzAHDhzgk08+4ejRo0yYMIGIiAjSpUvHmDFjyJ8/Pxs3bmTatGkMGDCABg0aPFbPPrlbPrXxvwh84/77XZJfJFms7ma3kKLks2i+nsT4S0vNbkFERESecykulP6b/fv3M2fOHBYvXmx2Kw4KpU9GofTJKJQ+GYXSJ6NQKiIiIkktxV2++19t2rSJBQsWJPrYunXrkrkbERERERGRF9tzt1L6LNJK6ZPRSumT0Urpk9FK6ZPRSqmIiIgktRR3910RERERERF5fiiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiplEoFREREREREdMolIqIiIiIiIhpFEpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHT2Mxu4EUwv6Or2S2kKJEH75jdQori3uYVs1tIUWwN3jO7hRRlVO52ZreQ4oy6vMTsFkRERFIUrZSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiplEoFREREREREdMolIqIiIiIiIhpFEpFRERERETENDazG5CkZS1YBpe6rcFqw+53haj1CyEqIl6NJUtOXBt1AFd3MOxEb/gc+42L5jRsAudXKuLevgsWZ2diL10gbMZEjIjwxGsrViVNv6HcfaMhABaPNKT+oC+2fAUwIiOJ2vojkRtWJ2f7yW7X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+kyhYMmC9JrYi54Nez60BmDp9KV0H9udT3/+FKvNyq8bf2Xzss0UebkI1RpX49r5a0xZPcXxfF99/BVHdh0xa7hPxe3bd+n9/hC++GYmzi7OXL54lR7dBgJQqkxxps0aS51qLR5ZN2LwJ3w8ZTi/Hrx3I59fd+5jzswvAOjYrgefTBlB+/da4+TkxNRJn3LsyLMfSh8UcCeQMR9+wicLx+Ds4sy1S9cZ1Xs8AEVLFmbY1I9oV++9R9Z9//U6cuTOztKtX2JzdmbNt+s5su/4I5/3vT7tcUuVitbvtaL1e/feshIdFUPHJinjF7X/FHInmC8HzOX9ef2xOdvwv3yTz/vOJk+J/HSc2J2Rjfqb3aKIyAvJYiT25pMX3P79+5kzZw7FihVj27Zt2Gw2KlasyI8//siOHTs4ffo0AwcOpGPHjo/80zF/u1ahdjJ0/fxodiXlv0cuOaW1upndQori7uRidgspyuGgC/9eJPHkSp3F7BZSlOIuKfPO5Gb56tLzdY8HERFQKE0WCqVPRqH0ySiUPhmF0iejUPrkFEqfjELpk1EoFZHnkd5TKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGoVSERERERERMY1CqYiIiIiIiJhGoVRERERERERMo1AqIiIiIiIiplEoFREREREREdMolIqIiIiIiIhpLIZhGGY38bxrmLOh2S2kKPmtac1uIUUpaHc2u4UUxVXf8Z5IjNkNpEClYyLNbiFFqXV3r9ktpChOFovZLaQo0VHXzG5BRB6DVkpFRERERETENAqlIiIiIiIiYhqFUhERERERETGNQqmIiIiIiIiYRqFURERERERETKNQKiIiIiIiIqZRKBURERERERHTKJSKiIiIiIiIaRRKRURERERExDQKpSIiIiIiImIahVIRERERERExjUKpiIiIiIiImEahVEREREREREyjUCoiIiIiIiKmUSgVERERERER0yiUioiIiIiIiGkUSkVERERERMQ0CqUiIiIiIiJiGpvZDcjT8UrtV+g4qCPOLs5c/P0iMwbMIDw0/LFrlh9fzu0btx21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H69z586l+bb9W9WrV1exYsVksVjUpk0bffnll7p48aJeeukl++8Dzpw5o6NHjyp//vwqWbKkJMnPzy/BeipVqiRJOnjwoCpVqmT/prJjx47auXOnTp8+rRw5ctjbtWzZUmfPnlV4eLgkqUGDBpJufZNVuXJleXp66tFHH1VYWJgkqWnTpurbt68mTpyocuXKqX79+unfOfe4t692796t9957T6tXr9Z7772nTZs26ebNm4ku26xZM0lSqVKldOPGDfv02/3xoP45e/asnn76aUnSk08+KR8fH508eVJSwn4rXbq08uTJI29vb+XMmVOhoaFq2LChJk2apFGjRil79uxq06ZN+nROIurUqaPPPvtMQ4YMUUhIiGrWrKkCBQro8ccflyR16NAhTd/v2Wef1bp162QYhn766Se1bdv2vjZVqlSRt7e3PD09VaRIEYWGhmr79u1q2bKl3Nzc5OPjY/9/lZE4oi+T20czivTsi9atW6tevXr64osv9PbbbyskJMS+Tye2/yd1vHN1dVXz5s21fv16BQUFKSQkRJUqVdKOHTv0yy+/yNfXVx06dFBwcLCOHj2aIftCunXlJXfu3HJzc1PLli21e/duFS1aVMOHD9d3332nqVOnav/+/bp586ZKly6tU6dO6dVXX9XatWv15ptvStIDz4H16tWTi4uLChUqpHz58qlUqVJycXFRgQIFFBoaqh07dujgwYNq166d/Pz8FBgYqL///luSlCdPHpUrV07SrXN6aGjof9pWR5kxY4aOHz+uDz74QJ9//rkiIyPNLilDiIyMfOC5rl69erJYLHr88cftn9+2bdsmX19fSVLFihXt4z6jyarnwmzZsmnhwoUqWbKkXFxc9Morr2jLli1pui13ywznQX9/f/Xt21eurq4qV66cKlWqpL179/7nupLC7buZ2O1bCiwWS4ra330fuM1ms7/28PC4r62Li0uC9V66dEmenp6y2Wz68ssvlTNnTknS5cuXlSdPnn+7CWnu7nBt/PM7nKpVq9pvO4uJiVFkZKSCgoIS/E7n3nvkb/fJ3ffW315nfHz8fdNvz7v9u0tXV9dEa7qte/fuaty4sTZt2qQZM2bo4MGDev3111O1rf/VvX0VFhamjh07qkuXLmrQoIHy5s2rv/76K9Flb/fXvWMvqX67/R6JHQhT02/PPPOMqlSpok2bNumL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\n",
      "text/plain": [
       "<Figure size 1080x1080 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a df with the target as the first column,\n",
    "# then compute the correlation matrix\n",
    "X = df[numeric]\n",
    "ln_y = df['ln_price']\n",
    "heatmap_data = pd.concat([ln_y, X], axis=1)\n",
    "corr = heatmap_data.corr()\n",
    "\n",
    "# Set up figure and axes\n",
    "fig, ax = plt.subplots(figsize=(15, 15))\n",
    "\n",
    "# Plot a heatmap of the correlation matrix, with both\n",
    "# numbers and colors indicating the correlations\n",
    "sns.heatmap(\n",
    "    # Specifies the data to be plotted\n",
    "    data=corr,\n",
    "    # The mask means we only show half the values,\n",
    "    # instead of showing duplicates. It's optional.\n",
    "    mask=np.triu(np.ones_like(corr, dtype=bool)),\n",
    "    # Specifies that we should use the existing axes\n",
    "    ax=ax,\n",
    "    # Specifies that we want labels, not just colors\n",
    "    annot=True,\n",
    "    # Customizes colorbar appearance\n",
    "    cbar_kws={\"label\": \"Correlation\", \"orientation\": \"horizontal\", \"pad\": .2, \"extend\": \"both\"}\n",
    ")\n",
    "\n",
    "# Customize the plot appearance\n",
    "ax.set_title(\"Heatmap of Correlation Between Attributes and Price\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "b96e48d6",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ln_price         1.000000\n",
       "grade            0.703747\n",
       "sqft_living      0.695209\n",
       "sqft_living15    0.619371\n",
       "sqft_above       0.601621\n",
       "bathrooms        0.551270\n",
       "lat              0.448824\n",
       "bedrooms         0.350871\n",
       "view             0.344665\n",
       "sqft_basement    0.316908\n",
       "floors           0.310665\n",
       "waterfront       0.170724\n",
       "if_renovated     0.106534\n",
       "sqft_lot         0.100032\n",
       "sqft_lot15       0.092290\n",
       "age_of_house     0.080523\n",
       "long             0.050887\n",
       "condition        0.038855\n",
       "zipcode          0.038801\n",
       "month_of_date    0.013058\n",
       "Name: ln_price, dtype: float64"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#reporting the correlation between ln price (target) and predictors\n",
    "df.corr()['ln_price'].drop(['price']).map(abs).sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cf1fa28",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We reviewed the distribution of features and see if we need to log-transform the features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "6a50cb27",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot the numeric features to see distribution and see if they need to be log-transformed\n",
    "df[numeric].hist(figsize=[6,6]);\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "b77599e8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#log transform all numeric feature except:\n",
    "#sqft basement - has values of 0\n",
    "#long - has negative values\n",
    "to_ln = ['bedrooms',\n",
    "         'bathrooms',\n",
    "         'sqft_living',\n",
    "         'sqft_lot', \n",
    "         'sqft_above',\n",
    "         'lat',\n",
    "         'sqft_living15', \n",
    "         'sqft_lot15']\n",
    "\n",
    "for column in to_ln:\n",
    "    df[column] = np.log(df[column])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "309a521d",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Data Mainipulation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d159d8d4",
   "metadata": {
    "hidden": true
   },
   "source": [
    "For this section, we focused on creating an efficient way to take our cleaned dataframe and create train and test splits for each of our models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "702de1ba",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create two dataframes, one without ln_price, and without price\n",
    "output = df.drop(['ln_price'], axis=1) \n",
    "output_ln = df.drop(['price'], axis=1) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "7786412b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def train_test(df, target, test_size=0.20, random_state=42):\n",
    "    '''\n",
    "    This function takes in a dataframe df and target column and returns the train and test split\n",
    "    Default test size is 20, default random state is 42\n",
    "    '''\n",
    "    \n",
    "    #dropping targets out of predictors\n",
    "    X = df.drop(target, axis=1)\n",
    "\n",
    "    #set target with y\n",
    "    y = df[target]\n",
    "    \n",
    "    #creating  train test split for model comparison\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)\n",
    "    \n",
    "    #instantiating OHE object\n",
    "    ohe = OneHotEncoder(sparse=False, handle_unknown='error', drop='first')\n",
    "\n",
    "    #Fitting object onto test and trasnforming test and train\n",
    "    X_train_ohe = ohe.fit_transform(X_train[categorical])\n",
    "    X_test_ohe = ohe.transform(X_test[categorical])\n",
    "\n",
    "    #placing column names onto our new categorical columns and formatting as df\n",
    "    X_train_ohe_df = pd.DataFrame(X_train_ohe, columns=ohe.get_feature_names(categorical), \n",
    "                              index=X_train.index)\n",
    "    X_test_ohe_df = pd.DataFrame(X_test_ohe, columns=ohe.get_feature_names(categorical),\n",
    "                            index=X_test.index)\n",
    "\n",
    "    #combining categoricals with rest of data\n",
    "    X_train = pd.concat([X_train[numeric], X_train_ohe_df],axis=1)\n",
    "    X_test = pd.concat([X_test[numeric], X_test_ohe_df], axis=1)\n",
    "\n",
    "    \n",
    "    X_list = [X_train, X_test]\n",
    "    \n",
    "    #scaling X values into z-scores\n",
    "    ss = StandardScaler()\n",
    "    for i in X_list:\n",
    "        ss.fit(i)\n",
    "        i = pd.DataFrame(ss.transform(i))\n",
    "        \n",
    "    return X_train, X_test, y_train, y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2860d364",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Other Formulas and Useful Objects"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df8b4ed6",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We created several formulas to efficiently run repetitive processes, including running cross validation, checking for R-squared and RMSE, and plotting different linear regression assumption tests."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "ee3faaef",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def cross_val(estimator,X,y,n_splits=10,test_size=0.25, random_state=None):\n",
    "    \"\"\"\n",
    "    This formula performs cross validation using shuffled splits. Output is a tuple,\n",
    "    The 0th element is the median R2 score for the train sets, the 1st element\n",
    "    is the median R2 score for the test sets.\n",
    "    \n",
    "    \"\"\"\n",
    "    splitter = ShuffleSplit(n_splits=n_splits, test_size=test_size, random_state=random_state)\n",
    "\n",
    "    output = cross_validate(estimator, X=X, y=y, cv=splitter, return_train_score=True)\n",
    "    return np.median(output['train_score']), np.median(output['test_score'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "86fd7b6b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#returns a summary of the median train R-squared, median test R-squared, and differential score based\n",
    "#on the cross validation\n",
    "def cval_summary(train,test,diff):\n",
    "    return f\"The median R-squared values for the train sets were {round(train,3)}, the median R-squared values for the test sets were {round(test,3)}. These values resulted in a differential of {round(diff,5)}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "b30090b4",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def score_model(model, Xtrain, Xtest, ytrain, ytest, log=False):\n",
    "    '''\n",
    "    This function takes in a model and the train and test samples and returns\n",
    "    the train R-squared, test R-squared, and the RMSE\n",
    "    '''\n",
    "    if log == False:\n",
    "        rmse = mean_squared_error(ytest, model.predict(Xtest), squared=False)\n",
    "    else:\n",
    "        rmse = mean_squared_error(np.exp(ytest), np.exp(model.predict(Xtest)), squared=False)\n",
    "    return model.score(Xtrain, ytrain),  model.score(Xtest, ytest), rmse"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "91fcef3c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#returns a summary of the train R-squared, test R-squared, differential between R-squared, and RMSE\n",
    "def model_summary(train,test,diff,rmse):\n",
    "    return f\"The R-squared value for the train set was {round(train,3)}, and the R-squared value for the test set was {round(test,3)}. These values resulted in a differential of {round(diff,5)}. The RMSE of our model predicitons was {round(rmse,2)}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "6cfd22e8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def normality_test(ols_model):\n",
    "    \"\"\"\n",
    "    tests for normality by taking in an OLS model, and reporting out different test features\n",
    "    and plots the Q-Q plot\n",
    "    \"\"\"\n",
    "    residuals = ols_model.resid\n",
    "    name = ['Jarque-Bera','Prob','Skew', 'Kurtosis']\n",
    "    test = sms.jarque_bera(residuals)\n",
    "    for name, test in zip(name, test):\n",
    "        print('\\n',name, '----')\n",
    "        print(test)\n",
    "    fig = sm.graphics.qqplot(residuals, dist=stats.norm, line='45', fit=True);\n",
    "    fig.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "c8426b60",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def homoscedasticity_test(ols_model):\n",
    "    \"\"\"\n",
    "    tests for homoscedasticity by taking in an OLS model, and reporting out different test features\n",
    "    and plots residual vs fitted plot\n",
    "    \"\"\"\n",
    "    predicted_y = ols_model.predict()\n",
    "    resids = ols_model.resid\n",
    "\n",
    "    fig, ax = plt.subplots()\n",
    "\n",
    "    sns.regplot(x=predicted_y, y=resids, lowess=True, ax=ax, line_kws={'color': 'red'})\n",
    "    ax.set_title('Residuals vs Fitted', fontsize=16)\n",
    "    ax.set(xlabel='Fitted Values', ylabel='Residuals')\n",
    "\n",
    "    bp_test = pd.DataFrame(sms.het_breuschpagan(resids, ols_model.model.exog), \n",
    "                           columns=['value'],\n",
    "                           index=['Lagrange multiplier statistic', 'p-value', 'f-value', 'f p-value'])\n",
    "\n",
    "    gq_test = pd.DataFrame(sms.het_goldfeldquandt(resids, ols_model.model.exog)[:-1],\n",
    "                           columns=['value'],\n",
    "                           index=['F statistic', 'p-value'])\n",
    "\n",
    "    print('\\n Breusch-Pagan test ----')\n",
    "    print(bp_test)\n",
    "    print('\\n Goldfeld-Quandt test ----')\n",
    "    print(gq_test)\n",
    "    print('\\n Residuals plot ----')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "61586fa8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def actual_vs_predicted(model,X_test,y_test):\n",
    "    \"\"\"\n",
    "    Plots the actual y vs the predicted y\n",
    "    \"\"\"\n",
    "    y_predicted = model.predict(X_test)\n",
    "    fig, ax = plt.subplots(figsize=(10,10))\n",
    "    ax.scatter(x=y_test, y=y_predicted)\n",
    "    ax.set_xlabel(\"Actual Price Values\")\n",
    "    ax.set_ylabel(\"Predicted Price Values\")\n",
    "    ax.set_title(\"Actual vs Predicted\")\n",
    "    \n",
    "    p1 = max(max(y_test), max(y_predicted))\n",
    "    p2 = min(min(y_test), min(y_predicted))\n",
    "    plt.plot([p1, p2], [p1, p2], 'b-')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "a544363c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def plot_cooks_distance(c):\n",
    "    \"\"\"\n",
    "    takes in cook's distance data and plots the cook's distance\n",
    "    \"\"\"\n",
    "    _, ax = plt.subplots(figsize=(6,6))\n",
    "    ax.stem(c, markerfmt=\",\")\n",
    "    ax.set_xlabel(\"instance\")\n",
    "    ax.set_ylabel(\"distance\")\n",
    "    ax.set_title(\"Cook's Distance\")\n",
    "    return ax"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2349935",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Baseline Model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "105ad14c",
   "metadata": {
    "hidden": true
   },
   "source": [
    "For the baseline model, we used a Dummy Regressor model which takes the mean of the price as the y-predicted value"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01f9f40e",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Baseline: Target Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "7723b8ba",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output, 'price')\n",
    "\n",
    "#create a dummy regressor model based on the target as price\n",
    "baseline_model = DummyRegressor(strategy='mean')\n",
    "baseline_model.fit(X_train,y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "4e6c54eb",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.0, the median R-squared values for the test sets were -0.0. These values resulted in a differential of 0.00014'"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way (x3)\n",
    "bmodel_cval = cross_val(baseline_model,\n",
    "                        X=X_train,\n",
    "                        y=y_train,\n",
    "                        random_state=0)\n",
    "\n",
    "bmodel_cval_summary = cval_summary(bmodel_cval[0],\n",
    "                                   bmodel_cval[1],\n",
    "                                   abs(bmodel_cval[0]-bmodel_cval[1]))\n",
    "bmodel_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "cdcc7f7f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "baseline_scores = score_model(baseline_model,\n",
    "                              X_train,\n",
    "                              X_test,\n",
    "                              y_train,\n",
    "                              y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "27e497c5",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.0, and the R-squared value for the test set was -0.0. These values resulted in a differential of 0.00016. The RMSE of our model predicitons was 361985.86'"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "baseline_summary = model_summary(baseline_scores[0],\n",
    "                                 baseline_scores[1],\n",
    "                                 abs(baseline_scores[0]-baseline_scores[1]),\n",
    "                                 baseline_scores[2])\n",
    "baseline_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45516217",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Baseline: Target Log-transformed Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "3fac6469",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output_ln, 'ln_price')\n",
    "\n",
    "#create `a dummy regressor model based on the target as price\n",
    "baseline_ln_model = DummyRegressor(strategy='mean')\n",
    "baseline_ln_model.fit(X_train,y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "5be5c60a",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.0, the median R-squared values for the test sets were -0.0. These values resulted in a differential of 0.00015'"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bmodel_ln_cval = cross_val(baseline_ln_model,\n",
    "                           X=X_train,\n",
    "                           y=y_train,\n",
    "                           random_state=0)\n",
    "\n",
    "bmodel_ln_cval_summary = cval_summary(bmodel_ln_cval[0],\n",
    "                                      bmodel_ln_cval[1], \n",
    "                                      abs(bmodel_ln_cval[0]-bmodel_ln_cval[1]))\n",
    "bmodel_ln_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "79f64c7c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.0, -0.00010221773342600216, 369029.04857828317)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "baseline_ln_scores = score_model(baseline_ln_model,\n",
    "                                 X_train,\n",
    "                                 X_test,\n",
    "                                 y_train,\n",
    "                                 y_test,\n",
    "                                 log=True)\n",
    "\n",
    "baseline_ln_scores"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "443cf2c1",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.0, and the R-squared value for the test set was -0.0. These values resulted in a differential of 0.0001. The RMSE of our model predicitons was 369029.05'"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "baseline_ln_summary = model_summary(baseline_ln_scores[0],\n",
    "                                    baseline_ln_scores[1],\n",
    "                                    abs(baseline_ln_scores[0]-baseline_ln_scores[1]),\n",
    "                                    baseline_ln_scores[2])\n",
    "baseline_ln_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c094ae6d",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4aa356f1",
   "metadata": {
    "hidden": true
   },
   "source": [
    "After running cross validation with both of our baseline models to ensure data integrity, we found from the results of our regression R-squared scores that the fit of the data we found that the cross-validation, train and test scores were all near 0. This is to be expected of the baseline model due to it's horizontal nature. Exactly 0% of the variation in y train is predicted by a horizontal line through the mean and 100% of it is due to variance.\n",
    "\n",
    ">The miniscule inscrease in R-squared for the test set is due to the slight change in mean from the train to test sets.\n",
    "\n",
    "The RMSE for the baseline model was approximately 360-370K."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bebce6c",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Model 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b72ea27",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Model 1 uses a multiple linear regression model of the data using all features, including the dummied out categorical features."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d925ac92",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Target Price"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f19a28ec",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We analyzed the untransformed price data set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "e8d30d0c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output, 'price')\n",
    "\n",
    "#create linear regression model for price and setting up cross validation \n",
    "model1 = LinearRegression()\n",
    "model1.fit(X_train, y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "49c82422",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.837, the median R-squared values for the test sets were 0.83. These values resulted in a differential of 0.00699'"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way \n",
    "model1_cval = cross_val(model1,\n",
    "                        X= X_train,\n",
    "                        y=y_train,\n",
    "                        random_state=0)\n",
    "\n",
    "model1_cval_summary = cval_summary(model1_cval[0],\n",
    "                                   model1_cval[1],\n",
    "                                   abs(model1_cval[0]-model1_cval[1]))\n",
    "model1_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "8638d850",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.836, and the R-squared value for the test set was 0.806. These values resulted in a differential of 0.03061. The RMSE of our model predicitons was 159551.53'"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1_scores = score_model(model1,\n",
    "                            X_train,\n",
    "                            X_test,\n",
    "                            y_train,\n",
    "                            y_test)\n",
    "\n",
    "model1_summary = model_summary(model1_scores[0],\n",
    "                               model1_scores[1],\n",
    "                               abs(model1_scores[0]-model1_scores[1]),\n",
    "                               model1_scores[2])\n",
    "model1_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "aa5294ab",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model1, X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "346a2bb3",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We see from the Actual vs Predicted plot that though most of the data points seems to be clustered around the benchmark, there are noticeable outliers."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01a43b77",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Target Price - OLS and Assumption Tests"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb3be12d",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We find the OLS of the model to review the p values across all features and use the OLS model to run assumption tests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "3deb7229",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
      "  x = pd.concat(x[::order], 1)\n"
     ]
    }
   ],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model1_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "9e8f5877",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared:         </th>  <td>   0.836</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.835</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   762.3</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Oct 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>17:28:35</td>     <th>  Log-Likelihood:    </th> <td>-2.3032e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th>  <td>4.609e+05</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17160</td>      <th>  BIC:               </th>  <td>4.618e+05</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   115</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -7.29e+07</td> <td> 1.31e+07</td> <td>   -5.571</td> <td> 0.000</td> <td>-9.86e+07</td> <td>-4.72e+07</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>-1.996e+04</td> <td> 5666.480</td> <td>   -3.522</td> <td> 0.000</td> <td>-3.11e+04</td> <td>-8851.259</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td> 3.479e+04</td> <td> 5248.926</td> <td>    6.629</td> <td> 0.000</td> <td> 2.45e+04</td> <td> 4.51e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>-2.344e+05</td> <td> 1.64e+04</td> <td>  -14.318</td> <td> 0.000</td> <td>-2.67e+05</td> <td>-2.02e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td> 3.625e+04</td> <td> 3345.431</td> <td>   10.836</td> <td> 0.000</td> <td> 2.97e+04</td> <td> 4.28e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td> 4.507e+05</td> <td> 1.46e+04</td> <td>   30.766</td> <td> 0.000</td> <td> 4.22e+05</td> <td> 4.79e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td>  205.2187</td> <td>    7.664</td> <td>   26.776</td> <td> 0.000</td> <td>  190.196</td> <td>  220.242</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   1.2e+07</td> <td> 3.14e+06</td> <td>    3.824</td> <td> 0.000</td> <td> 5.85e+06</td> <td> 1.82e+07</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>-2.027e+05</td> <td>  4.7e+04</td> <td>   -4.313</td> <td> 0.000</td> <td>-2.95e+05</td> <td>-1.11e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>  5.43e+04</td> <td> 6287.441</td> <td>    8.636</td> <td> 0.000</td> <td>  4.2e+04</td> <td> 6.66e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>-1.646e+04</td> <td> 3713.014</td> <td>   -4.432</td> <td> 0.000</td> <td>-2.37e+04</td> <td>-9179.393</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>-1.591e+04</td> <td> 4628.218</td> <td>   -3.438</td> <td> 0.001</td> <td> -2.5e+04</td> <td>-6838.566</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>-1.248e+04</td> <td> 3991.783</td> <td>   -3.126</td> <td> 0.002</td> <td>-2.03e+04</td> <td>-4652.997</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td> 7.847e+04</td> <td> 1.41e+04</td> <td>    5.558</td> <td> 0.000</td> <td> 5.08e+04</td> <td> 1.06e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>-6.611e+04</td> <td> 8545.272</td> <td>   -7.737</td> <td> 0.000</td> <td>-8.29e+04</td> <td>-4.94e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td>     2e+04</td> <td>  5.7e+04</td> <td>    0.351</td> <td> 0.726</td> <td>-9.18e+04</td> <td> 1.32e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>  5.84e+05</td> <td> 1.71e+04</td> <td>   34.137</td> <td> 0.000</td> <td>  5.5e+05</td> <td> 6.18e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td> 9.469e+04</td> <td> 9682.736</td> <td>    9.779</td> <td> 0.000</td> <td> 7.57e+04</td> <td> 1.14e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td> 6.031e+04</td> <td> 5887.454</td> <td>   10.243</td> <td> 0.000</td> <td> 4.88e+04</td> <td> 7.18e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td> 1.435e+05</td> <td> 8047.151</td> <td>   17.829</td> <td> 0.000</td> <td> 1.28e+05</td> <td> 1.59e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td> 2.812e+05</td> <td> 1.18e+04</td> <td>   23.762</td> <td> 0.000</td> <td> 2.58e+05</td> <td> 3.04e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td> 8.745e+04</td> <td>  3.6e+04</td> <td>    2.429</td> <td> 0.015</td> <td> 1.69e+04</td> <td> 1.58e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td> 1.013e+05</td> <td> 3.39e+04</td> <td>    2.986</td> <td> 0.003</td> <td> 3.48e+04</td> <td> 1.68e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td> 1.261e+05</td> <td>  3.4e+04</td> <td>    3.714</td> <td> 0.000</td> <td> 5.96e+04</td> <td> 1.93e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td> 1.805e+05</td> <td> 3.41e+04</td> <td>    5.289</td> <td> 0.000</td> <td> 1.14e+05</td> <td> 2.47e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>-1.572e+05</td> <td> 1.54e+05</td> <td>   -1.019</td> <td> 0.308</td> <td>-4.59e+05</td> <td> 1.45e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>-1.886e+05</td> <td> 1.51e+05</td> <td>   -1.252</td> <td> 0.211</td> <td>-4.84e+05</td> <td> 1.07e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>  -2.1e+05</td> <td>  1.5e+05</td> <td>   -1.397</td> <td> 0.162</td> <td>-5.05e+05</td> <td> 8.47e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>-2.168e+05</td> <td>  1.5e+05</td> <td>   -1.442</td> <td> 0.149</td> <td>-5.11e+05</td> <td>  7.8e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>-1.967e+05</td> <td>  1.5e+05</td> <td>   -1.307</td> <td> 0.191</td> <td>-4.91e+05</td> <td> 9.82e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>-9.952e+04</td> <td> 1.51e+05</td> <td>   -0.661</td> <td> 0.508</td> <td>-3.95e+05</td> <td> 1.95e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td> 5.415e+04</td> <td> 1.51e+05</td> <td>    0.360</td> <td> 0.719</td> <td>-2.41e+05</td> <td> 3.49e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td> 3.104e+05</td> <td> 1.51e+05</td> <td>    2.058</td> <td> 0.040</td> <td> 1.48e+04</td> <td> 6.06e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td> 7.656e+05</td> <td> 1.52e+05</td> <td>    5.046</td> <td> 0.000</td> <td> 4.68e+05</td> <td> 1.06e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td> 2.197e+06</td> <td> 1.58e+05</td> <td>   13.934</td> <td> 0.000</td> <td> 1.89e+06</td> <td> 2.51e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td> 5.636e+04</td> <td> 6449.572</td> <td>    8.738</td> <td> 0.000</td> <td> 4.37e+04</td> <td>  6.9e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td> 3.198e+04</td> <td> 1.55e+04</td> <td>    2.063</td> <td> 0.039</td> <td> 1597.348</td> <td> 6.24e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td> 5334.4709</td> <td> 1.36e+04</td> <td>    0.391</td> <td> 0.696</td> <td>-2.14e+04</td> <td> 3.21e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td> 6.872e+05</td> <td> 2.45e+04</td> <td>   28.050</td> <td> 0.000</td> <td> 6.39e+05</td> <td> 7.35e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td> 2.538e+05</td> <td> 2.62e+04</td> <td>    9.690</td> <td> 0.000</td> <td> 2.02e+05</td> <td> 3.05e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td> 2.142e+05</td> <td> 2.15e+04</td> <td>    9.978</td> <td> 0.000</td> <td> 1.72e+05</td> <td> 2.56e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td> 2.161e+05</td> <td>  2.7e+04</td> <td>    7.989</td> <td> 0.000</td> <td> 1.63e+05</td> <td> 2.69e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td> 2.358e+05</td> <td> 2.56e+04</td> <td>    9.225</td> <td> 0.000</td> <td> 1.86e+05</td> <td> 2.86e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td> 1.052e+05</td> <td> 2.27e+04</td> <td>    4.630</td> <td> 0.000</td> <td> 6.07e+04</td> <td>  1.5e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td> 5.274e+04</td> <td> 3.34e+04</td> <td>    1.579</td> <td> 0.114</td> <td>-1.27e+04</td> <td> 1.18e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>  9.08e+04</td> <td> 3.63e+04</td> <td>    2.499</td> <td> 0.012</td> <td> 1.96e+04</td> <td> 1.62e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td> 5.358e+04</td> <td>  3.6e+04</td> <td>    1.486</td> <td> 0.137</td> <td>-1.71e+04</td> <td> 1.24e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td> 7.634e+04</td> <td> 2.01e+04</td> <td>    3.805</td> <td> 0.000</td> <td>  3.7e+04</td> <td> 1.16e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>-2.726e+04</td> <td> 1.24e+04</td> <td>   -2.190</td> <td> 0.029</td> <td>-5.17e+04</td> <td>-2859.357</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td> 1.909e+05</td> <td> 3.15e+04</td> <td>    6.050</td> <td> 0.000</td> <td> 1.29e+05</td> <td> 2.53e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td> 1.646e+05</td> <td> 2.18e+04</td> <td>    7.537</td> <td> 0.000</td> <td> 1.22e+05</td> <td> 2.07e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td> 3.341e+04</td> <td> 3.24e+04</td> <td>    1.030</td> <td> 0.303</td> <td>-3.01e+04</td> <td>  9.7e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td> 2.268e+05</td> <td> 2.51e+04</td> <td>    9.052</td> <td> 0.000</td> <td> 1.78e+05</td> <td> 2.76e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td> 1.368e+04</td> <td>  1.5e+04</td> <td>    0.913</td> <td> 0.361</td> <td>-1.57e+04</td> <td>  4.3e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>  1.61e+04</td> <td> 1.54e+04</td> <td>    1.043</td> <td> 0.297</td> <td>-1.42e+04</td> <td> 4.64e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td> 1980.0885</td> <td>  1.8e+04</td> <td>    0.110</td> <td> 0.912</td> <td>-3.32e+04</td> <td> 3.72e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td> 2.998e+05</td> <td> 2.78e+04</td> <td>   10.771</td> <td> 0.000</td> <td> 2.45e+05</td> <td> 3.54e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td> 1.266e+05</td> <td> 2.98e+04</td> <td>    4.250</td> <td> 0.000</td> <td> 6.82e+04</td> <td> 1.85e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td> 7.471e+04</td> <td> 1.67e+04</td> <td>    4.479</td> <td> 0.000</td> <td>  4.2e+04</td> <td> 1.07e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td> 1.246e+06</td> <td> 3.28e+04</td> <td>   38.001</td> <td> 0.000</td> <td> 1.18e+06</td> <td> 1.31e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td> 4.695e+05</td> <td> 2.18e+04</td> <td>   21.571</td> <td> 0.000</td> <td> 4.27e+05</td> <td> 5.12e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td> 2.919e+04</td> <td> 1.42e+04</td> <td>    2.050</td> <td> 0.040</td> <td> 1283.297</td> <td> 5.71e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td> 1.645e+05</td> <td> 3.03e+04</td> <td>    5.436</td> <td> 0.000</td> <td> 1.05e+05</td> <td> 2.24e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td> 1.959e+05</td> <td> 2.83e+04</td> <td>    6.921</td> <td> 0.000</td> <td>  1.4e+05</td> <td> 2.51e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td> 1.903e+05</td> <td> 3.04e+04</td> <td>    6.270</td> <td> 0.000</td> <td> 1.31e+05</td> <td>  2.5e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td> 3.434e+04</td> <td> 1.72e+04</td> <td>    2.001</td> <td> 0.045</td> <td>  701.817</td> <td>  6.8e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td> 6.844e+04</td> <td> 1.88e+04</td> <td>    3.650</td> <td> 0.000</td> <td> 3.17e+04</td> <td> 1.05e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td> 3.493e+04</td> <td> 1.63e+04</td> <td>    2.141</td> <td> 0.032</td> <td> 2954.867</td> <td> 6.69e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td> 8.105e+04</td> <td> 1.84e+04</td> <td>    4.409</td> <td> 0.000</td> <td>  4.5e+04</td> <td> 1.17e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td> 1.427e+05</td> <td> 2.82e+04</td> <td>    5.064</td> <td> 0.000</td> <td> 8.75e+04</td> <td> 1.98e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>-5.732e+04</td> <td>  2.2e+04</td> <td>   -2.604</td> <td> 0.009</td> <td>   -1e+05</td> <td>-1.42e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td> 8.026e+04</td> <td> 3.31e+04</td> <td>    2.422</td> <td> 0.015</td> <td> 1.53e+04</td> <td> 1.45e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>  1.68e+05</td> <td> 2.68e+04</td> <td>    6.259</td> <td> 0.000</td> <td> 1.15e+05</td> <td> 2.21e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td> 1.763e+05</td> <td> 2.57e+04</td> <td>    6.853</td> <td> 0.000</td> <td> 1.26e+05</td> <td> 2.27e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td> 5.639e+04</td> <td> 3.44e+04</td> <td>    1.638</td> <td> 0.101</td> <td>-1.11e+04</td> <td> 1.24e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td> 4418.5280</td> <td> 1.37e+04</td> <td>    0.323</td> <td> 0.746</td> <td>-2.24e+04</td> <td> 3.12e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td> 4.183e+05</td> <td> 2.87e+04</td> <td>   14.574</td> <td> 0.000</td> <td> 3.62e+05</td> <td> 4.75e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td> 2.845e+05</td> <td> 2.69e+04</td> <td>   10.574</td> <td> 0.000</td> <td> 2.32e+05</td> <td> 3.37e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td> 4.269e+05</td> <td> 2.75e+04</td> <td>   15.516</td> <td> 0.000</td> <td> 3.73e+05</td> <td> 4.81e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td> 9.582e+04</td> <td> 2.01e+04</td> <td>    4.774</td> <td> 0.000</td> <td> 5.65e+04</td> <td> 1.35e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td> 2.892e+05</td> <td> 2.78e+04</td> <td>   10.418</td> <td> 0.000</td> <td> 2.35e+05</td> <td> 3.44e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td> 9.247e+04</td> <td> 2.19e+04</td> <td>    4.231</td> <td> 0.000</td> <td> 4.96e+04</td> <td> 1.35e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td> 4.734e+05</td> <td> 2.86e+04</td> <td>   16.568</td> <td> 0.000</td> <td> 4.17e+05</td> <td> 5.29e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td> 6.039e+05</td> <td> 2.52e+04</td> <td>   23.998</td> <td> 0.000</td> <td> 5.55e+05</td> <td> 6.53e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td> 2.787e+05</td> <td> 2.74e+04</td> <td>   10.189</td> <td> 0.000</td> <td> 2.25e+05</td> <td> 3.32e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td> 2.512e+05</td> <td> 2.23e+04</td> <td>   11.250</td> <td> 0.000</td> <td> 2.07e+05</td> <td> 2.95e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td> 2.521e+05</td> <td> 2.77e+04</td> <td>    9.094</td> <td> 0.000</td> <td> 1.98e+05</td> <td> 3.06e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>  1.41e+05</td> <td> 1.95e+04</td> <td>    7.221</td> <td> 0.000</td> <td> 1.03e+05</td> <td> 1.79e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td> 4.425e+05</td> <td>  2.7e+04</td> <td>   16.413</td> <td> 0.000</td> <td>  3.9e+05</td> <td> 4.95e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td> 3.069e+05</td> <td>  2.4e+04</td> <td>   12.771</td> <td> 0.000</td> <td>  2.6e+05</td> <td> 3.54e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td> 1.265e+05</td> <td> 2.95e+04</td> <td>    4.285</td> <td> 0.000</td> <td> 6.86e+04</td> <td> 1.84e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td> 1.563e+05</td> <td> 2.06e+04</td> <td>    7.582</td> <td> 0.000</td> <td> 1.16e+05</td> <td> 1.97e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td> 6.993e+04</td> <td> 3.05e+04</td> <td>    2.291</td> <td> 0.022</td> <td> 1.01e+04</td> <td>  1.3e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td> 2.174e+05</td> <td> 2.11e+04</td> <td>   10.315</td> <td> 0.000</td> <td> 1.76e+05</td> <td> 2.59e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>  2.45e+05</td> <td> 2.25e+04</td> <td>   10.903</td> <td> 0.000</td> <td> 2.01e+05</td> <td> 2.89e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td> 5.675e+04</td> <td> 1.89e+04</td> <td>    3.008</td> <td> 0.003</td> <td> 1.98e+04</td> <td> 9.37e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td> 3.817e+04</td> <td> 2.49e+04</td> <td>    1.535</td> <td> 0.125</td> <td>-1.06e+04</td> <td> 8.69e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td> 4.611e+04</td> <td> 3.17e+04</td> <td>    1.454</td> <td> 0.146</td> <td>-1.61e+04</td> <td> 1.08e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td> 2.613e+04</td> <td> 1.71e+04</td> <td>    1.524</td> <td> 0.127</td> <td>-7466.093</td> <td> 5.97e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td> 2.732e+04</td> <td> 1.83e+04</td> <td>    1.496</td> <td> 0.135</td> <td>-8475.842</td> <td> 6.31e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td> 1.107e+05</td> <td> 3.19e+04</td> <td>    3.469</td> <td> 0.001</td> <td> 4.82e+04</td> <td> 1.73e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td> 2.168e+04</td> <td> 1.86e+04</td> <td>    1.163</td> <td> 0.245</td> <td>-1.49e+04</td> <td> 5.82e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td> 1.446e+04</td> <td> 1.91e+04</td> <td>    0.759</td> <td> 0.448</td> <td>-2.29e+04</td> <td> 5.18e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>-2.251e+04</td> <td> 1.46e+04</td> <td>   -1.537</td> <td> 0.124</td> <td>-5.12e+04</td> <td> 6199.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td> 3.143e+05</td> <td> 2.63e+04</td> <td>   11.943</td> <td> 0.000</td> <td> 2.63e+05</td> <td> 3.66e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>  253.1412</td> <td> 7185.145</td> <td>    0.035</td> <td> 0.972</td> <td>-1.38e+04</td> <td> 1.43e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td> 1.833e+04</td> <td> 6589.469</td> <td>    2.781</td> <td> 0.005</td> <td> 5412.464</td> <td> 3.12e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td> 2.888e+04</td> <td> 6427.519</td> <td>    4.493</td> <td> 0.000</td> <td> 1.63e+04</td> <td> 4.15e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td> -746.1045</td> <td> 6342.445</td> <td>   -0.118</td> <td> 0.906</td> <td>-1.32e+04</td> <td> 1.17e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>-7776.9878</td> <td> 6466.295</td> <td>   -1.203</td> <td> 0.229</td> <td>-2.05e+04</td> <td> 4897.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>-9154.7568</td> <td> 6438.627</td> <td>   -1.422</td> <td> 0.155</td> <td>-2.18e+04</td> <td> 3465.610</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>-1.237e+04</td> <td> 6567.162</td> <td>   -1.883</td> <td> 0.060</td> <td>-2.52e+04</td> <td>  504.950</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>-1.548e+04</td> <td> 6665.195</td> <td>   -2.323</td> <td> 0.020</td> <td>-2.85e+04</td> <td>-2416.902</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>-1.234e+04</td> <td> 6611.436</td> <td>   -1.867</td> <td> 0.062</td> <td>-2.53e+04</td> <td>  616.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>-1.199e+04</td> <td> 6969.536</td> <td>   -1.720</td> <td> 0.085</td> <td>-2.56e+04</td> <td> 1672.285</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>-7278.0937</td> <td> 6915.172</td> <td>   -1.052</td> <td> 0.293</td> <td>-2.08e+04</td> <td> 6276.350</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>12426.921</td> <th>  Durbin-Watson:     </th>  <td>   2.003</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>1143891.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 2.719</td>   <th>  Prob(JB):          </th>  <td>    0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td>42.491</td>   <th>  Cond. No.          </th>  <td>6.31e+06</td>  \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                  price   R-squared:                       0.836\n",
       "Model:                            OLS   Adj. R-squared:                  0.835\n",
       "Method:                 Least Squares   F-statistic:                     762.3\n",
       "Date:                Tue, 26 Oct 2021   Prob (F-statistic):               0.00\n",
       "Time:                        17:28:35   Log-Likelihood:            -2.3032e+05\n",
       "No. Observations:               17276   AIC:                         4.609e+05\n",
       "Df Residuals:                   17160   BIC:                         4.618e+05\n",
       "Df Model:                         115                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -7.29e+07   1.31e+07     -5.571      0.000   -9.86e+07   -4.72e+07\n",
       "bedrooms         -1.996e+04   5666.480     -3.522      0.000   -3.11e+04   -8851.259\n",
       "bathrooms         3.479e+04   5248.926      6.629      0.000    2.45e+04    4.51e+04\n",
       "sqft_living      -2.344e+05   1.64e+04    -14.318      0.000   -2.67e+05   -2.02e+05\n",
       "sqft_lot          3.625e+04   3345.431     10.836      0.000    2.97e+04    4.28e+04\n",
       "sqft_above        4.507e+05   1.46e+04     30.766      0.000    4.22e+05    4.79e+05\n",
       "sqft_basement      205.2187      7.664     26.776      0.000     190.196     220.242\n",
       "lat                 1.2e+07   3.14e+06      3.824      0.000    5.85e+06    1.82e+07\n",
       "long             -2.027e+05    4.7e+04     -4.313      0.000   -2.95e+05   -1.11e+05\n",
       "sqft_living15      5.43e+04   6287.441      8.636      0.000     4.2e+04    6.66e+04\n",
       "sqft_lot15       -1.646e+04   3713.014     -4.432      0.000   -2.37e+04   -9179.393\n",
       "floors_1.5       -1.591e+04   4628.218     -3.438      0.001    -2.5e+04   -6838.566\n",
       "floors_2.0       -1.248e+04   3991.783     -3.126      0.002   -2.03e+04   -4652.997\n",
       "floors_2.5        7.847e+04   1.41e+04      5.558      0.000    5.08e+04    1.06e+05\n",
       "floors_3.0       -6.611e+04   8545.272     -7.737      0.000   -8.29e+04   -4.94e+04\n",
       "floors_3.5            2e+04    5.7e+04      0.351      0.726   -9.18e+04    1.32e+05\n",
       "waterfront_1       5.84e+05   1.71e+04     34.137      0.000     5.5e+05    6.18e+05\n",
       "view_1            9.469e+04   9682.736      9.779      0.000    7.57e+04    1.14e+05\n",
       "view_2            6.031e+04   5887.454     10.243      0.000    4.88e+04    7.18e+04\n",
       "view_3            1.435e+05   8047.151     17.829      0.000    1.28e+05    1.59e+05\n",
       "view_4            2.812e+05   1.18e+04     23.762      0.000    2.58e+05    3.04e+05\n",
       "condition_2       8.745e+04    3.6e+04      2.429      0.015    1.69e+04    1.58e+05\n",
       "condition_3       1.013e+05   3.39e+04      2.986      0.003    3.48e+04    1.68e+05\n",
       "condition_4       1.261e+05    3.4e+04      3.714      0.000    5.96e+04    1.93e+05\n",
       "condition_5       1.805e+05   3.41e+04      5.289      0.000    1.14e+05    2.47e+05\n",
       "grade_4          -1.572e+05   1.54e+05     -1.019      0.308   -4.59e+05    1.45e+05\n",
       "grade_5          -1.886e+05   1.51e+05     -1.252      0.211   -4.84e+05    1.07e+05\n",
       "grade_6            -2.1e+05    1.5e+05     -1.397      0.162   -5.05e+05    8.47e+04\n",
       "grade_7          -2.168e+05    1.5e+05     -1.442      0.149   -5.11e+05     7.8e+04\n",
       "grade_8          -1.967e+05    1.5e+05     -1.307      0.191   -4.91e+05    9.82e+04\n",
       "grade_9          -9.952e+04   1.51e+05     -0.661      0.508   -3.95e+05    1.95e+05\n",
       "grade_10          5.415e+04   1.51e+05      0.360      0.719   -2.41e+05    3.49e+05\n",
       "grade_11          3.104e+05   1.51e+05      2.058      0.040    1.48e+04    6.06e+05\n",
       "grade_12          7.656e+05   1.52e+05      5.046      0.000    4.68e+05    1.06e+06\n",
       "grade_13          2.197e+06   1.58e+05     13.934      0.000    1.89e+06    2.51e+06\n",
       "if_renovated_1    5.636e+04   6449.572      8.738      0.000    4.37e+04     6.9e+04\n",
       "zipcode_98002     3.198e+04   1.55e+04      2.063      0.039    1597.348    6.24e+04\n",
       "zipcode_98003     5334.4709   1.36e+04      0.391      0.696   -2.14e+04    3.21e+04\n",
       "zipcode_98004     6.872e+05   2.45e+04     28.050      0.000    6.39e+05    7.35e+05\n",
       "zipcode_98005     2.538e+05   2.62e+04      9.690      0.000    2.02e+05    3.05e+05\n",
       "zipcode_98006     2.142e+05   2.15e+04      9.978      0.000    1.72e+05    2.56e+05\n",
       "zipcode_98007     2.161e+05    2.7e+04      7.989      0.000    1.63e+05    2.69e+05\n",
       "zipcode_98008     2.358e+05   2.56e+04      9.225      0.000    1.86e+05    2.86e+05\n",
       "zipcode_98010     1.052e+05   2.27e+04      4.630      0.000    6.07e+04     1.5e+05\n",
       "zipcode_98011     5.274e+04   3.34e+04      1.579      0.114   -1.27e+04    1.18e+05\n",
       "zipcode_98014      9.08e+04   3.63e+04      2.499      0.012    1.96e+04    1.62e+05\n",
       "zipcode_98019     5.358e+04    3.6e+04      1.486      0.137   -1.71e+04    1.24e+05\n",
       "zipcode_98022     7.634e+04   2.01e+04      3.805      0.000     3.7e+04    1.16e+05\n",
       "zipcode_98023    -2.726e+04   1.24e+04     -2.190      0.029   -5.17e+04   -2859.357\n",
       "zipcode_98024     1.909e+05   3.15e+04      6.050      0.000    1.29e+05    2.53e+05\n",
       "zipcode_98027     1.646e+05   2.18e+04      7.537      0.000    1.22e+05    2.07e+05\n",
       "zipcode_98028     3.341e+04   3.24e+04      1.030      0.303   -3.01e+04     9.7e+04\n",
       "zipcode_98029     2.268e+05   2.51e+04      9.052      0.000    1.78e+05    2.76e+05\n",
       "zipcode_98030     1.368e+04    1.5e+04      0.913      0.361   -1.57e+04     4.3e+04\n",
       "zipcode_98031      1.61e+04   1.54e+04      1.043      0.297   -1.42e+04    4.64e+04\n",
       "zipcode_98032     1980.0885    1.8e+04      0.110      0.912   -3.32e+04    3.72e+04\n",
       "zipcode_98033     2.998e+05   2.78e+04     10.771      0.000    2.45e+05    3.54e+05\n",
       "zipcode_98034     1.266e+05   2.98e+04      4.250      0.000    6.82e+04    1.85e+05\n",
       "zipcode_98038     7.471e+04   1.67e+04      4.479      0.000     4.2e+04    1.07e+05\n",
       "zipcode_98039     1.246e+06   3.28e+04     38.001      0.000    1.18e+06    1.31e+06\n",
       "zipcode_98040     4.695e+05   2.18e+04     21.571      0.000    4.27e+05    5.12e+05\n",
       "zipcode_98042     2.919e+04   1.42e+04      2.050      0.040    1283.297    5.71e+04\n",
       "zipcode_98045     1.645e+05   3.03e+04      5.436      0.000    1.05e+05    2.24e+05\n",
       "zipcode_98052     1.959e+05   2.83e+04      6.921      0.000     1.4e+05    2.51e+05\n",
       "zipcode_98053     1.903e+05   3.04e+04      6.270      0.000    1.31e+05     2.5e+05\n",
       "zipcode_98055     3.434e+04   1.72e+04      2.001      0.045     701.817     6.8e+04\n",
       "zipcode_98056     6.844e+04   1.88e+04      3.650      0.000    3.17e+04    1.05e+05\n",
       "zipcode_98058     3.493e+04   1.63e+04      2.141      0.032    2954.867    6.69e+04\n",
       "zipcode_98059     8.105e+04   1.84e+04      4.409      0.000     4.5e+04    1.17e+05\n",
       "zipcode_98065     1.427e+05   2.82e+04      5.064      0.000    8.75e+04    1.98e+05\n",
       "zipcode_98070    -5.732e+04    2.2e+04     -2.604      0.009      -1e+05   -1.42e+04\n",
       "zipcode_98072     8.026e+04   3.31e+04      2.422      0.015    1.53e+04    1.45e+05\n",
       "zipcode_98074      1.68e+05   2.68e+04      6.259      0.000    1.15e+05    2.21e+05\n",
       "zipcode_98075     1.763e+05   2.57e+04      6.853      0.000    1.26e+05    2.27e+05\n",
       "zipcode_98077     5.639e+04   3.44e+04      1.638      0.101   -1.11e+04    1.24e+05\n",
       "zipcode_98092     4418.5280   1.37e+04      0.323      0.746   -2.24e+04    3.12e+04\n",
       "zipcode_98102     4.183e+05   2.87e+04     14.574      0.000    3.62e+05    4.75e+05\n",
       "zipcode_98103     2.845e+05   2.69e+04     10.574      0.000    2.32e+05    3.37e+05\n",
       "zipcode_98105     4.269e+05   2.75e+04     15.516      0.000    3.73e+05    4.81e+05\n",
       "zipcode_98106     9.582e+04   2.01e+04      4.774      0.000    5.65e+04    1.35e+05\n",
       "zipcode_98107     2.892e+05   2.78e+04     10.418      0.000    2.35e+05    3.44e+05\n",
       "zipcode_98108     9.247e+04   2.19e+04      4.231      0.000    4.96e+04    1.35e+05\n",
       "zipcode_98109     4.734e+05   2.86e+04     16.568      0.000    4.17e+05    5.29e+05\n",
       "zipcode_98112     6.039e+05   2.52e+04     23.998      0.000    5.55e+05    6.53e+05\n",
       "zipcode_98115     2.787e+05   2.74e+04     10.189      0.000    2.25e+05    3.32e+05\n",
       "zipcode_98116     2.512e+05   2.23e+04     11.250      0.000    2.07e+05    2.95e+05\n",
       "zipcode_98117     2.521e+05   2.77e+04      9.094      0.000    1.98e+05    3.06e+05\n",
       "zipcode_98118      1.41e+05   1.95e+04      7.221      0.000    1.03e+05    1.79e+05\n",
       "zipcode_98119     4.425e+05    2.7e+04     16.413      0.000     3.9e+05    4.95e+05\n",
       "zipcode_98122     3.069e+05    2.4e+04     12.771      0.000     2.6e+05    3.54e+05\n",
       "zipcode_98125     1.265e+05   2.95e+04      4.285      0.000    6.86e+04    1.84e+05\n",
       "zipcode_98126     1.563e+05   2.06e+04      7.582      0.000    1.16e+05    1.97e+05\n",
       "zipcode_98133     6.993e+04   3.05e+04      2.291      0.022    1.01e+04     1.3e+05\n",
       "zipcode_98136     2.174e+05   2.11e+04     10.315      0.000    1.76e+05    2.59e+05\n",
       "zipcode_98144      2.45e+05   2.25e+04     10.903      0.000    2.01e+05    2.89e+05\n",
       "zipcode_98146     5.675e+04   1.89e+04      3.008      0.003    1.98e+04    9.37e+04\n",
       "zipcode_98148     3.817e+04   2.49e+04      1.535      0.125   -1.06e+04    8.69e+04\n",
       "zipcode_98155     4.611e+04   3.17e+04      1.454      0.146   -1.61e+04    1.08e+05\n",
       "zipcode_98166     2.613e+04   1.71e+04      1.524      0.127   -7466.093    5.97e+04\n",
       "zipcode_98168     2.732e+04   1.83e+04      1.496      0.135   -8475.842    6.31e+04\n",
       "zipcode_98177     1.107e+05   3.19e+04      3.469      0.001    4.82e+04    1.73e+05\n",
       "zipcode_98178     2.168e+04   1.86e+04      1.163      0.245   -1.49e+04    5.82e+04\n",
       "zipcode_98188     1.446e+04   1.91e+04      0.759      0.448   -2.29e+04    5.18e+04\n",
       "zipcode_98198    -2.251e+04   1.46e+04     -1.537      0.124   -5.12e+04    6199.056\n",
       "zipcode_98199     3.143e+05   2.63e+04     11.943      0.000    2.63e+05    3.66e+05\n",
       "month_of_date_2    253.1412   7185.145      0.035      0.972   -1.38e+04    1.43e+04\n",
       "month_of_date_3   1.833e+04   6589.469      2.781      0.005    5412.464    3.12e+04\n",
       "month_of_date_4   2.888e+04   6427.519      4.493      0.000    1.63e+04    4.15e+04\n",
       "month_of_date_5   -746.1045   6342.445     -0.118      0.906   -1.32e+04    1.17e+04\n",
       "month_of_date_6  -7776.9878   6466.295     -1.203      0.229   -2.05e+04    4897.611\n",
       "month_of_date_7  -9154.7568   6438.627     -1.422      0.155   -2.18e+04    3465.610\n",
       "month_of_date_8  -1.237e+04   6567.162     -1.883      0.060   -2.52e+04     504.950\n",
       "month_of_date_9  -1.548e+04   6665.195     -2.323      0.020   -2.85e+04   -2416.902\n",
       "month_of_date_10 -1.234e+04   6611.436     -1.867      0.062   -2.53e+04     616.143\n",
       "month_of_date_11 -1.199e+04   6969.536     -1.720      0.085   -2.56e+04    1672.285\n",
       "month_of_date_12 -7278.0937   6915.172     -1.052      0.293   -2.08e+04    6276.350\n",
       "==============================================================================\n",
       "Omnibus:                    12426.921   Durbin-Watson:                   2.003\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):          1143891.096\n",
       "Skew:                           2.719   Prob(JB):                         0.00\n",
       "Kurtosis:                      42.491   Cond. No.                     6.31e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "20158431",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "1143891.0958380848\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "2.7190736648474085\n",
      "\n",
      " Kurtosis ----\n",
      "42.490910792486105\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/graphics/gofplots.py:993: UserWarning: marker is redundantly defined by the 'marker' keyword argument and the fmt string \"bo\" (-> marker='o'). The keyword argument will take precedence.\n",
      "  ax.plot(x, y, fmt, **plot_style)\n",
      "/var/folders/dp/5k1wgpbj6d72lnbdgvwv16l40000gn/T/ipykernel_50673/3602366465.py:13: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model1_ols);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c599cea6",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We can clearly see from the Q-Q plot that this model is not normal, and that is further validated by the high Jarque-Bera score."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "c7d8e6ca",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                     value\n",
      "Lagrange multiplier statistic  4564.980691\n",
      "p-value                           0.000000\n",
      "f-value                          53.589291\n",
      "f p-value                         0.000000\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.910418\n",
      "p-value      0.999993\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model1_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af9e5347",
   "metadata": {
    "hidden": true
   },
   "source": [
    "The Residual vs Fitted plot also shows that the data is heteroscedastic."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "322d218a",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Target Price - Influence and Outliers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9074a67e",
   "metadata": {
    "hidden": true
   },
   "source": [
    "In order to reduce the RMSE, we tried to find any outliers within the dataset using Cook's Distance, which identifies any influential outliers, and removed them. We apply the same methodology to the test sample as we did to the train as well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "79c24e62",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#find the cooks distance\n",
    "inf = influence(model1_ols)\n",
    "C, P = inf.cooks_distance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "767a0abc",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':\"Cook's Distance\"}, xlabel='instance', ylabel='distance'>"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot cooks distance\n",
    "plot_cooks_distance(C)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "da54af4d",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create a new dataframe from main dataframe\n",
    "train_df = pd.concat([y_train, X_train], axis=1)\n",
    "\n",
    "#add new column for cooks distance\n",
    "train_df['influence'] = C"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "ce69dc19",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#using the IQR rule, check what proportion of influence are outliers\n",
    "quantile_75 = train_df['influence'].quantile(0.75)\n",
    "quantile_25 = train_df['influence'].quantile(0.25)\n",
    "iqr = quantile_75-quantile_25\n",
    "\n",
    "elim_train_df = train_df[(train_df['influence'] > quantile_75 + 3*iqr) | \n",
    "                         (train_df['influence'] < quantile_25 - 3*iqr)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "dd0d10f8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.1\n"
     ]
    }
   ],
   "source": [
    "#find the indexes related to the top x rows by cooks distance\n",
    "list_index = list(elim_train_df.index)\n",
    "\n",
    "#what proportion of df are we removing\n",
    "print(round(len(elim_train_df)/len(train_df),2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "c1527f9c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#drop any rows with the index of top x rows by cooks distance\n",
    "#removes the influence and const columns for proper retesting in the next section\n",
    "train_df.drop(index=list_index, inplace=True)\n",
    "train_df.drop(columns=['influence','const'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92631ab8",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We apply what we did to the train sample to the test sample below:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28ec7e6e",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Target Price - Retesting Based on Removed Outliers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e05c1815",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Here, we are refiting the training sample after dropping the outliers and rerunning the linear regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "a938bb22",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train = train_df.drop(['price'], axis = 1)\n",
    "y_train = train_df['price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "65bf6a70",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create linear regression model for price and setting up cross validation \n",
    "model1_adj = LinearRegression()\n",
    "model1_adj.fit(X_train, y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "fd369d5a",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.908, the median R-squared values for the test sets were 0.904. These values resulted in a differential of 0.00465'"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way \n",
    "model1_adj_cval = cross_val(model1_adj,\n",
    "                        X=X_train,\n",
    "                        y=y_train,\n",
    "                        random_state=0)\n",
    "\n",
    "model1_adj_cval_summary = cval_summary(model1_adj_cval[0],\n",
    "                                   model1_adj_cval[1],\n",
    "                                   abs(model1_adj_cval[0]-model1_adj_cval[1]))\n",
    "model1_adj_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "07824701",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.908, and the R-squared value for the test set was 0.799. These values resulted in a differential of 0.10861. The RMSE of our model predicitons was 162272.67'"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1_adj_scores = score_model(model1_adj,\n",
    "                            X_train,\n",
    "                            X_test,\n",
    "                            y_train,\n",
    "                            y_test)\n",
    "\n",
    "model1_adj_summary = model_summary(model1_adj_scores[0],\n",
    "                               model1_adj_scores[1],\n",
    "                               abs(model1_adj_scores[0]-model1_adj_scores[1]),\n",
    "                               model1_adj_scores[2])\n",
    "model1_adj_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aaae2550",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We see that though the R-squared train set is higher than that of the previous analysis with the outliers, the test R-squared is lower. The RMSE is also lower. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "951c0c21",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model1_adj, X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "4b8abc12",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
      "  x = pd.concat(x[::order], 1)\n"
     ]
    }
   ],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model1_adj_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "8e9a7a15",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>          <td>price</td>      <th>  R-squared:         </th>  <td>   0.908</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.907</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1348.</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Oct 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>17:34:49</td>     <th>  Log-Likelihood:    </th> <td>-1.9713e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 15623</td>      <th>  AIC:               </th>  <td>3.945e+05</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 15509</td>      <th>  BIC:               </th>  <td>3.954e+05</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   113</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td>-3.619e+07</td> <td> 6.15e+06</td> <td>   -5.883</td> <td> 0.000</td> <td>-4.82e+07</td> <td>-2.41e+07</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>-1.057e+04</td> <td> 2977.234</td> <td>   -3.551</td> <td> 0.000</td> <td>-1.64e+04</td> <td>-4736.541</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td> 2.046e+04</td> <td> 2715.808</td> <td>    7.533</td> <td> 0.000</td> <td> 1.51e+04</td> <td> 2.58e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>-1.103e+05</td> <td> 9687.560</td> <td>  -11.381</td> <td> 0.000</td> <td>-1.29e+05</td> <td>-9.13e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td> 3.107e+04</td> <td> 1833.521</td> <td>   16.947</td> <td> 0.000</td> <td> 2.75e+04</td> <td> 3.47e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td> 2.892e+05</td> <td> 8746.655</td> <td>   33.068</td> <td> 0.000</td> <td> 2.72e+05</td> <td> 3.06e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td>  139.9250</td> <td>    4.944</td> <td>   28.304</td> <td> 0.000</td> <td>  130.235</td> <td>  149.615</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td> 6.152e+06</td> <td> 1.63e+06</td> <td>    3.775</td> <td> 0.000</td> <td> 2.96e+06</td> <td> 9.35e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>-1.225e+05</td> <td> 2.53e+04</td> <td>   -4.837</td> <td> 0.000</td> <td>-1.72e+05</td> <td>-7.28e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td> 4.982e+04</td> <td> 3325.164</td> <td>   14.983</td> <td> 0.000</td> <td> 4.33e+04</td> <td> 5.63e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>-1.157e+04</td> <td> 2005.347</td> <td>   -5.772</td> <td> 0.000</td> <td>-1.55e+04</td> <td>-7643.441</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>-2601.4194</td> <td> 2415.410</td> <td>   -1.077</td> <td> 0.281</td> <td>-7335.905</td> <td> 2133.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>-1259.7858</td> <td> 2089.003</td> <td>   -0.603</td> <td> 0.546</td> <td>-5354.476</td> <td> 2834.904</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td> 6.515e+04</td> <td> 1.04e+04</td> <td>    6.285</td> <td> 0.000</td> <td> 4.48e+04</td> <td> 8.55e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>-5.256e+04</td> <td> 4486.097</td> <td>  -11.717</td> <td> 0.000</td> <td>-6.14e+04</td> <td>-4.38e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td> 2.687e+04</td> <td>  5.2e+04</td> <td>    0.517</td> <td> 0.605</td> <td>-7.51e+04</td> <td> 1.29e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td> 6.016e+05</td> <td>    2e+04</td> <td>   30.062</td> <td> 0.000</td> <td> 5.62e+05</td> <td> 6.41e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td> 7.801e+04</td> <td> 5781.782</td> <td>   13.493</td> <td> 0.000</td> <td> 6.67e+04</td> <td> 8.93e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td> 5.841e+04</td> <td> 3242.495</td> <td>   18.013</td> <td> 0.000</td> <td>  5.2e+04</td> <td> 6.48e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td> 1.339e+05</td> <td> 5023.873</td> <td>   26.651</td> <td> 0.000</td> <td> 1.24e+05</td> <td> 1.44e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td> 2.701e+05</td> <td> 9508.408</td> <td>   28.402</td> <td> 0.000</td> <td> 2.51e+05</td> <td> 2.89e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td> 6.885e+04</td> <td> 3.38e+04</td> <td>    2.035</td> <td> 0.042</td> <td> 2533.250</td> <td> 1.35e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td> 9.365e+04</td> <td> 3.32e+04</td> <td>    2.824</td> <td> 0.005</td> <td> 2.86e+04</td> <td> 1.59e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>  1.13e+05</td> <td> 3.32e+04</td> <td>    3.407</td> <td> 0.001</td> <td>  4.8e+04</td> <td> 1.78e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td> 1.557e+05</td> <td> 3.32e+04</td> <td>    4.688</td> <td> 0.000</td> <td> 9.06e+04</td> <td> 2.21e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>-4.199e+06</td> <td> 6.84e+05</td> <td>   -6.143</td> <td> 0.000</td> <td>-5.54e+06</td> <td>-2.86e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>-4.244e+06</td> <td> 6.83e+05</td> <td>   -6.210</td> <td> 0.000</td> <td>-5.58e+06</td> <td> -2.9e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>-4.252e+06</td> <td> 6.83e+05</td> <td>   -6.222</td> <td> 0.000</td> <td>-5.59e+06</td> <td>-2.91e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>-4.247e+06</td> <td> 6.83e+05</td> <td>   -6.214</td> <td> 0.000</td> <td>-5.59e+06</td> <td>-2.91e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>-4.217e+06</td> <td> 6.83e+05</td> <td>   -6.169</td> <td> 0.000</td> <td>-5.56e+06</td> <td>-2.88e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>-4.122e+06</td> <td> 6.84e+05</td> <td>   -6.030</td> <td> 0.000</td> <td>-5.46e+06</td> <td>-2.78e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>-3.997e+06</td> <td> 6.83e+05</td> <td>   -5.848</td> <td> 0.000</td> <td>-5.34e+06</td> <td>-2.66e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>-3.696e+06</td> <td> 6.84e+05</td> <td>   -5.406</td> <td> 0.000</td> <td>-5.04e+06</td> <td>-2.36e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>-3.215e+06</td> <td> 6.84e+05</td> <td>   -4.703</td> <td> 0.000</td> <td>-4.56e+06</td> <td>-1.88e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td> -1.79e-06</td> <td> 3.09e-07</td> <td>   -5.794</td> <td> 0.000</td> <td> -2.4e-06</td> <td>-1.18e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td> 5.782e+04</td> <td> 3639.104</td> <td>   15.888</td> <td> 0.000</td> <td> 5.07e+04</td> <td>  6.5e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td> 2.108e+04</td> <td> 7661.502</td> <td>    2.751</td> <td> 0.006</td> <td> 6060.513</td> <td> 3.61e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td> 9567.0870</td> <td> 6809.554</td> <td>    1.405</td> <td> 0.160</td> <td>-3780.435</td> <td> 2.29e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>  6.87e+05</td> <td> 1.35e+04</td> <td>   51.014</td> <td> 0.000</td> <td> 6.61e+05</td> <td> 7.13e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td> 2.997e+05</td> <td> 1.37e+04</td> <td>   21.877</td> <td> 0.000</td> <td> 2.73e+05</td> <td> 3.27e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td> 2.493e+05</td> <td> 1.11e+04</td> <td>   22.365</td> <td> 0.000</td> <td> 2.27e+05</td> <td> 2.71e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td> 2.466e+05</td> <td> 1.39e+04</td> <td>   17.789</td> <td> 0.000</td> <td> 2.19e+05</td> <td> 2.74e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td> 2.356e+05</td> <td> 1.32e+04</td> <td>   17.804</td> <td> 0.000</td> <td>  2.1e+05</td> <td> 2.62e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td> 7.406e+04</td> <td> 1.23e+04</td> <td>    6.039</td> <td> 0.000</td> <td>    5e+04</td> <td> 9.81e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>  1.11e+05</td> <td> 1.72e+04</td> <td>    6.438</td> <td> 0.000</td> <td> 7.72e+04</td> <td> 1.45e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td> 1.029e+05</td> <td> 1.92e+04</td> <td>    5.351</td> <td> 0.000</td> <td> 6.52e+04</td> <td> 1.41e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td> 8.144e+04</td> <td> 1.88e+04</td> <td>    4.342</td> <td> 0.000</td> <td> 4.47e+04</td> <td> 1.18e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td> 4.321e+04</td> <td> 1.04e+04</td> <td>    4.171</td> <td> 0.000</td> <td> 2.29e+04</td> <td> 6.35e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>-1.535e+04</td> <td> 6273.616</td> <td>   -2.447</td> <td> 0.014</td> <td>-2.76e+04</td> <td>-3055.596</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>  1.65e+05</td> <td>  1.7e+04</td> <td>    9.708</td> <td> 0.000</td> <td> 1.32e+05</td> <td> 1.98e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td> 1.892e+05</td> <td> 1.14e+04</td> <td>   16.619</td> <td> 0.000</td> <td> 1.67e+05</td> <td> 2.12e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td> 8.638e+04</td> <td> 1.67e+04</td> <td>    5.162</td> <td> 0.000</td> <td> 5.36e+04</td> <td> 1.19e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td> 2.313e+05</td> <td>  1.3e+04</td> <td>   17.737</td> <td> 0.000</td> <td> 2.06e+05</td> <td> 2.57e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td> 1.242e+04</td> <td> 7493.543</td> <td>    1.658</td> <td> 0.097</td> <td>-2265.740</td> <td> 2.71e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td> 1.529e+04</td> <td> 7779.079</td> <td>    1.965</td> <td> 0.049</td> <td>   40.441</td> <td> 3.05e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td> 1154.0798</td> <td> 8998.806</td> <td>    0.128</td> <td> 0.898</td> <td>-1.65e+04</td> <td> 1.88e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td> 3.018e+05</td> <td> 1.45e+04</td> <td>   20.832</td> <td> 0.000</td> <td> 2.73e+05</td> <td>  3.3e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td> 1.502e+05</td> <td> 1.54e+04</td> <td>    9.737</td> <td> 0.000</td> <td>  1.2e+05</td> <td>  1.8e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td> 6.205e+04</td> <td> 8636.406</td> <td>    7.185</td> <td> 0.000</td> <td> 4.51e+04</td> <td>  7.9e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td> 1.282e+06</td> <td> 5.37e+04</td> <td>   23.877</td> <td> 0.000</td> <td> 1.18e+06</td> <td> 1.39e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td> 4.705e+05</td> <td> 1.18e+04</td> <td>   39.991</td> <td> 0.000</td> <td> 4.47e+05</td> <td> 4.94e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>   2.3e+04</td> <td> 7273.968</td> <td>    3.162</td> <td> 0.002</td> <td> 8742.698</td> <td> 3.73e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td> 1.532e+05</td> <td>  1.6e+04</td> <td>    9.596</td> <td> 0.000</td> <td> 1.22e+05</td> <td> 1.85e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td> 2.299e+05</td> <td> 1.47e+04</td> <td>   15.690</td> <td> 0.000</td> <td> 2.01e+05</td> <td> 2.59e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td> 2.274e+05</td> <td> 1.58e+04</td> <td>   14.386</td> <td> 0.000</td> <td> 1.96e+05</td> <td> 2.58e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td> 3.828e+04</td> <td> 8700.726</td> <td>    4.399</td> <td> 0.000</td> <td> 2.12e+04</td> <td> 5.53e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td> 8.135e+04</td> <td> 9593.973</td> <td>    8.480</td> <td> 0.000</td> <td> 6.25e+04</td> <td>    1e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td> 3.897e+04</td> <td> 8315.951</td> <td>    4.686</td> <td> 0.000</td> <td> 2.27e+04</td> <td> 5.53e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td> 9.467e+04</td> <td> 9426.175</td> <td>   10.043</td> <td> 0.000</td> <td> 7.62e+04</td> <td> 1.13e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td> 1.546e+05</td> <td> 1.48e+04</td> <td>   10.459</td> <td> 0.000</td> <td> 1.26e+05</td> <td> 1.84e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td> 2.848e+04</td> <td> 1.31e+04</td> <td>    2.178</td> <td> 0.029</td> <td> 2843.927</td> <td> 5.41e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td> 1.252e+05</td> <td> 1.72e+04</td> <td>    7.280</td> <td> 0.000</td> <td> 9.15e+04</td> <td> 1.59e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td> 1.986e+05</td> <td>  1.4e+04</td> <td>   14.209</td> <td> 0.000</td> <td> 1.71e+05</td> <td> 2.26e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td> 2.075e+05</td> <td> 1.34e+04</td> <td>   15.456</td> <td> 0.000</td> <td> 1.81e+05</td> <td> 2.34e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>  1.23e+05</td> <td>  1.8e+04</td> <td>    6.838</td> <td> 0.000</td> <td> 8.78e+04</td> <td> 1.58e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>  112.9296</td> <td> 6858.172</td> <td>    0.016</td> <td> 0.987</td> <td>-1.33e+04</td> <td> 1.36e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td> 4.059e+05</td> <td> 1.56e+04</td> <td>   25.976</td> <td> 0.000</td> <td> 3.75e+05</td> <td> 4.37e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td> 3.076e+05</td> <td> 1.39e+04</td> <td>   22.120</td> <td> 0.000</td> <td>  2.8e+05</td> <td> 3.35e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td> 4.063e+05</td> <td> 1.46e+04</td> <td>   27.831</td> <td> 0.000</td> <td> 3.78e+05</td> <td> 4.35e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>  1.07e+05</td> <td> 1.03e+04</td> <td>   10.432</td> <td> 0.000</td> <td> 8.69e+04</td> <td> 1.27e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>  3.04e+05</td> <td> 1.43e+04</td> <td>   21.264</td> <td> 0.000</td> <td> 2.76e+05</td> <td> 3.32e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td> 1.074e+05</td> <td> 1.12e+04</td> <td>    9.611</td> <td> 0.000</td> <td> 8.55e+04</td> <td> 1.29e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td> 4.585e+05</td> <td> 1.63e+04</td> <td>   28.053</td> <td> 0.000</td> <td> 4.26e+05</td> <td> 4.91e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td> 5.992e+05</td> <td> 1.42e+04</td> <td>   42.256</td> <td> 0.000</td> <td> 5.71e+05</td> <td> 6.27e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td> 3.014e+05</td> <td> 1.41e+04</td> <td>   21.340</td> <td> 0.000</td> <td> 2.74e+05</td> <td> 3.29e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td> 2.818e+05</td> <td> 1.15e+04</td> <td>   24.477</td> <td> 0.000</td> <td> 2.59e+05</td> <td> 3.04e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td> 2.874e+05</td> <td> 1.43e+04</td> <td>   20.088</td> <td> 0.000</td> <td> 2.59e+05</td> <td> 3.15e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>  1.51e+05</td> <td> 1.01e+04</td> <td>   15.024</td> <td> 0.000</td> <td> 1.31e+05</td> <td> 1.71e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td> 4.371e+05</td> <td> 1.46e+04</td> <td>   30.041</td> <td> 0.000</td> <td> 4.09e+05</td> <td> 4.66e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>     3e+05</td> <td> 1.25e+04</td> <td>   24.099</td> <td> 0.000</td> <td> 2.76e+05</td> <td> 3.24e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>  1.61e+05</td> <td> 1.52e+04</td> <td>   10.558</td> <td> 0.000</td> <td> 1.31e+05</td> <td> 1.91e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td> 1.729e+05</td> <td> 1.06e+04</td> <td>   16.392</td> <td> 0.000</td> <td> 1.52e+05</td> <td> 1.94e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td> 1.116e+05</td> <td> 1.58e+04</td> <td>    7.084</td> <td> 0.000</td> <td> 8.07e+04</td> <td> 1.42e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td> 2.383e+05</td> <td> 1.08e+04</td> <td>   21.972</td> <td> 0.000</td> <td> 2.17e+05</td> <td>  2.6e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>  2.39e+05</td> <td> 1.16e+04</td> <td>   20.618</td> <td> 0.000</td> <td> 2.16e+05</td> <td> 2.62e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td> 7.647e+04</td> <td> 9666.231</td> <td>    7.911</td> <td> 0.000</td> <td> 5.75e+04</td> <td> 9.54e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>  6.05e+04</td> <td> 1.34e+04</td> <td>    4.521</td> <td> 0.000</td> <td> 3.43e+04</td> <td> 8.67e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>  8.98e+04</td> <td> 1.64e+04</td> <td>    5.482</td> <td> 0.000</td> <td> 5.77e+04</td> <td> 1.22e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td> 6.998e+04</td> <td> 8808.715</td> <td>    7.944</td> <td> 0.000</td> <td> 5.27e+04</td> <td> 8.72e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td> 3.393e+04</td> <td> 9251.289</td> <td>    3.667</td> <td> 0.000</td> <td> 1.58e+04</td> <td> 5.21e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td> 1.544e+05</td> <td> 1.66e+04</td> <td>    9.291</td> <td> 0.000</td> <td> 1.22e+05</td> <td> 1.87e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td> 4.255e+04</td> <td> 9491.000</td> <td>    4.483</td> <td> 0.000</td> <td> 2.39e+04</td> <td> 6.12e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td> 2.742e+04</td> <td> 9706.683</td> <td>    2.825</td> <td> 0.005</td> <td> 8390.575</td> <td> 4.64e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td> 8946.0597</td> <td> 7438.848</td> <td>    1.203</td> <td> 0.229</td> <td>-5634.953</td> <td> 2.35e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td> 3.405e+05</td> <td> 1.36e+04</td> <td>   24.960</td> <td> 0.000</td> <td> 3.14e+05</td> <td> 3.67e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td> 3861.6256</td> <td> 3714.416</td> <td>    1.040</td> <td> 0.299</td> <td>-3419.064</td> <td> 1.11e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td> 1.999e+04</td> <td> 3407.409</td> <td>    5.867</td> <td> 0.000</td> <td> 1.33e+04</td> <td> 2.67e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td> 2.777e+04</td> <td> 3329.028</td> <td>    8.341</td> <td> 0.000</td> <td> 2.12e+04</td> <td> 3.43e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td> 2935.4491</td> <td> 3286.994</td> <td>    0.893</td> <td> 0.372</td> <td>-3507.445</td> <td> 9378.343</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>-1993.6744</td> <td> 3346.489</td> <td>   -0.596</td> <td> 0.551</td> <td>-8553.185</td> <td> 4565.836</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>-2449.0661</td> <td> 3326.856</td> <td>   -0.736</td> <td> 0.462</td> <td>-8970.093</td> <td> 4071.961</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>-3956.1112</td> <td> 3399.456</td> <td>   -1.164</td> <td> 0.245</td> <td>-1.06e+04</td> <td> 2707.220</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>-7467.6663</td> <td> 3446.105</td> <td>   -2.167</td> <td> 0.030</td> <td>-1.42e+04</td> <td> -712.898</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>-9064.0997</td> <td> 3421.451</td> <td>   -2.649</td> <td> 0.008</td> <td>-1.58e+04</td> <td>-2357.655</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>-1.081e+04</td> <td> 3601.166</td> <td>   -3.002</td> <td> 0.003</td> <td>-1.79e+04</td> <td>-3750.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>-4589.7591</td> <td> 3580.515</td> <td>   -1.282</td> <td> 0.200</td> <td>-1.16e+04</td> <td> 2428.468</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>303.170</td> <th>  Durbin-Watson:     </th> <td>   1.971</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 397.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 0.254</td>  <th>  Prob(JB):          </th> <td>5.16e-87</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.593</td>  <th>  Cond. No.          </th> <td>5.90e+18</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 1.07e-28. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                  price   R-squared:                       0.908\n",
       "Model:                            OLS   Adj. R-squared:                  0.907\n",
       "Method:                 Least Squares   F-statistic:                     1348.\n",
       "Date:                Tue, 26 Oct 2021   Prob (F-statistic):               0.00\n",
       "Time:                        17:34:49   Log-Likelihood:            -1.9713e+05\n",
       "No. Observations:               15623   AIC:                         3.945e+05\n",
       "Df Residuals:                   15509   BIC:                         3.954e+05\n",
       "Df Model:                         113                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const            -3.619e+07   6.15e+06     -5.883      0.000   -4.82e+07   -2.41e+07\n",
       "bedrooms         -1.057e+04   2977.234     -3.551      0.000   -1.64e+04   -4736.541\n",
       "bathrooms         2.046e+04   2715.808      7.533      0.000    1.51e+04    2.58e+04\n",
       "sqft_living      -1.103e+05   9687.560    -11.381      0.000   -1.29e+05   -9.13e+04\n",
       "sqft_lot          3.107e+04   1833.521     16.947      0.000    2.75e+04    3.47e+04\n",
       "sqft_above        2.892e+05   8746.655     33.068      0.000    2.72e+05    3.06e+05\n",
       "sqft_basement      139.9250      4.944     28.304      0.000     130.235     149.615\n",
       "lat               6.152e+06   1.63e+06      3.775      0.000    2.96e+06    9.35e+06\n",
       "long             -1.225e+05   2.53e+04     -4.837      0.000   -1.72e+05   -7.28e+04\n",
       "sqft_living15     4.982e+04   3325.164     14.983      0.000    4.33e+04    5.63e+04\n",
       "sqft_lot15       -1.157e+04   2005.347     -5.772      0.000   -1.55e+04   -7643.441\n",
       "floors_1.5       -2601.4194   2415.410     -1.077      0.281   -7335.905    2133.066\n",
       "floors_2.0       -1259.7858   2089.003     -0.603      0.546   -5354.476    2834.904\n",
       "floors_2.5        6.515e+04   1.04e+04      6.285      0.000    4.48e+04    8.55e+04\n",
       "floors_3.0       -5.256e+04   4486.097    -11.717      0.000   -6.14e+04   -4.38e+04\n",
       "floors_3.5        2.687e+04    5.2e+04      0.517      0.605   -7.51e+04    1.29e+05\n",
       "waterfront_1      6.016e+05      2e+04     30.062      0.000    5.62e+05    6.41e+05\n",
       "view_1            7.801e+04   5781.782     13.493      0.000    6.67e+04    8.93e+04\n",
       "view_2            5.841e+04   3242.495     18.013      0.000     5.2e+04    6.48e+04\n",
       "view_3            1.339e+05   5023.873     26.651      0.000    1.24e+05    1.44e+05\n",
       "view_4            2.701e+05   9508.408     28.402      0.000    2.51e+05    2.89e+05\n",
       "condition_2       6.885e+04   3.38e+04      2.035      0.042    2533.250    1.35e+05\n",
       "condition_3       9.365e+04   3.32e+04      2.824      0.005    2.86e+04    1.59e+05\n",
       "condition_4        1.13e+05   3.32e+04      3.407      0.001     4.8e+04    1.78e+05\n",
       "condition_5       1.557e+05   3.32e+04      4.688      0.000    9.06e+04    2.21e+05\n",
       "grade_4          -4.199e+06   6.84e+05     -6.143      0.000   -5.54e+06   -2.86e+06\n",
       "grade_5          -4.244e+06   6.83e+05     -6.210      0.000   -5.58e+06    -2.9e+06\n",
       "grade_6          -4.252e+06   6.83e+05     -6.222      0.000   -5.59e+06   -2.91e+06\n",
       "grade_7          -4.247e+06   6.83e+05     -6.214      0.000   -5.59e+06   -2.91e+06\n",
       "grade_8          -4.217e+06   6.83e+05     -6.169      0.000   -5.56e+06   -2.88e+06\n",
       "grade_9          -4.122e+06   6.84e+05     -6.030      0.000   -5.46e+06   -2.78e+06\n",
       "grade_10         -3.997e+06   6.83e+05     -5.848      0.000   -5.34e+06   -2.66e+06\n",
       "grade_11         -3.696e+06   6.84e+05     -5.406      0.000   -5.04e+06   -2.36e+06\n",
       "grade_12         -3.215e+06   6.84e+05     -4.703      0.000   -4.56e+06   -1.88e+06\n",
       "grade_13          -1.79e-06   3.09e-07     -5.794      0.000    -2.4e-06   -1.18e-06\n",
       "if_renovated_1    5.782e+04   3639.104     15.888      0.000    5.07e+04     6.5e+04\n",
       "zipcode_98002     2.108e+04   7661.502      2.751      0.006    6060.513    3.61e+04\n",
       "zipcode_98003     9567.0870   6809.554      1.405      0.160   -3780.435    2.29e+04\n",
       "zipcode_98004      6.87e+05   1.35e+04     51.014      0.000    6.61e+05    7.13e+05\n",
       "zipcode_98005     2.997e+05   1.37e+04     21.877      0.000    2.73e+05    3.27e+05\n",
       "zipcode_98006     2.493e+05   1.11e+04     22.365      0.000    2.27e+05    2.71e+05\n",
       "zipcode_98007     2.466e+05   1.39e+04     17.789      0.000    2.19e+05    2.74e+05\n",
       "zipcode_98008     2.356e+05   1.32e+04     17.804      0.000     2.1e+05    2.62e+05\n",
       "zipcode_98010     7.406e+04   1.23e+04      6.039      0.000       5e+04    9.81e+04\n",
       "zipcode_98011      1.11e+05   1.72e+04      6.438      0.000    7.72e+04    1.45e+05\n",
       "zipcode_98014     1.029e+05   1.92e+04      5.351      0.000    6.52e+04    1.41e+05\n",
       "zipcode_98019     8.144e+04   1.88e+04      4.342      0.000    4.47e+04    1.18e+05\n",
       "zipcode_98022     4.321e+04   1.04e+04      4.171      0.000    2.29e+04    6.35e+04\n",
       "zipcode_98023    -1.535e+04   6273.616     -2.447      0.014   -2.76e+04   -3055.596\n",
       "zipcode_98024      1.65e+05    1.7e+04      9.708      0.000    1.32e+05    1.98e+05\n",
       "zipcode_98027     1.892e+05   1.14e+04     16.619      0.000    1.67e+05    2.12e+05\n",
       "zipcode_98028     8.638e+04   1.67e+04      5.162      0.000    5.36e+04    1.19e+05\n",
       "zipcode_98029     2.313e+05    1.3e+04     17.737      0.000    2.06e+05    2.57e+05\n",
       "zipcode_98030     1.242e+04   7493.543      1.658      0.097   -2265.740    2.71e+04\n",
       "zipcode_98031     1.529e+04   7779.079      1.965      0.049      40.441    3.05e+04\n",
       "zipcode_98032     1154.0798   8998.806      0.128      0.898   -1.65e+04    1.88e+04\n",
       "zipcode_98033     3.018e+05   1.45e+04     20.832      0.000    2.73e+05     3.3e+05\n",
       "zipcode_98034     1.502e+05   1.54e+04      9.737      0.000     1.2e+05     1.8e+05\n",
       "zipcode_98038     6.205e+04   8636.406      7.185      0.000    4.51e+04     7.9e+04\n",
       "zipcode_98039     1.282e+06   5.37e+04     23.877      0.000    1.18e+06    1.39e+06\n",
       "zipcode_98040     4.705e+05   1.18e+04     39.991      0.000    4.47e+05    4.94e+05\n",
       "zipcode_98042       2.3e+04   7273.968      3.162      0.002    8742.698    3.73e+04\n",
       "zipcode_98045     1.532e+05    1.6e+04      9.596      0.000    1.22e+05    1.85e+05\n",
       "zipcode_98052     2.299e+05   1.47e+04     15.690      0.000    2.01e+05    2.59e+05\n",
       "zipcode_98053     2.274e+05   1.58e+04     14.386      0.000    1.96e+05    2.58e+05\n",
       "zipcode_98055     3.828e+04   8700.726      4.399      0.000    2.12e+04    5.53e+04\n",
       "zipcode_98056     8.135e+04   9593.973      8.480      0.000    6.25e+04       1e+05\n",
       "zipcode_98058     3.897e+04   8315.951      4.686      0.000    2.27e+04    5.53e+04\n",
       "zipcode_98059     9.467e+04   9426.175     10.043      0.000    7.62e+04    1.13e+05\n",
       "zipcode_98065     1.546e+05   1.48e+04     10.459      0.000    1.26e+05    1.84e+05\n",
       "zipcode_98070     2.848e+04   1.31e+04      2.178      0.029    2843.927    5.41e+04\n",
       "zipcode_98072     1.252e+05   1.72e+04      7.280      0.000    9.15e+04    1.59e+05\n",
       "zipcode_98074     1.986e+05    1.4e+04     14.209      0.000    1.71e+05    2.26e+05\n",
       "zipcode_98075     2.075e+05   1.34e+04     15.456      0.000    1.81e+05    2.34e+05\n",
       "zipcode_98077      1.23e+05    1.8e+04      6.838      0.000    8.78e+04    1.58e+05\n",
       "zipcode_98092      112.9296   6858.172      0.016      0.987   -1.33e+04    1.36e+04\n",
       "zipcode_98102     4.059e+05   1.56e+04     25.976      0.000    3.75e+05    4.37e+05\n",
       "zipcode_98103     3.076e+05   1.39e+04     22.120      0.000     2.8e+05    3.35e+05\n",
       "zipcode_98105     4.063e+05   1.46e+04     27.831      0.000    3.78e+05    4.35e+05\n",
       "zipcode_98106      1.07e+05   1.03e+04     10.432      0.000    8.69e+04    1.27e+05\n",
       "zipcode_98107      3.04e+05   1.43e+04     21.264      0.000    2.76e+05    3.32e+05\n",
       "zipcode_98108     1.074e+05   1.12e+04      9.611      0.000    8.55e+04    1.29e+05\n",
       "zipcode_98109     4.585e+05   1.63e+04     28.053      0.000    4.26e+05    4.91e+05\n",
       "zipcode_98112     5.992e+05   1.42e+04     42.256      0.000    5.71e+05    6.27e+05\n",
       "zipcode_98115     3.014e+05   1.41e+04     21.340      0.000    2.74e+05    3.29e+05\n",
       "zipcode_98116     2.818e+05   1.15e+04     24.477      0.000    2.59e+05    3.04e+05\n",
       "zipcode_98117     2.874e+05   1.43e+04     20.088      0.000    2.59e+05    3.15e+05\n",
       "zipcode_98118      1.51e+05   1.01e+04     15.024      0.000    1.31e+05    1.71e+05\n",
       "zipcode_98119     4.371e+05   1.46e+04     30.041      0.000    4.09e+05    4.66e+05\n",
       "zipcode_98122         3e+05   1.25e+04     24.099      0.000    2.76e+05    3.24e+05\n",
       "zipcode_98125      1.61e+05   1.52e+04     10.558      0.000    1.31e+05    1.91e+05\n",
       "zipcode_98126     1.729e+05   1.06e+04     16.392      0.000    1.52e+05    1.94e+05\n",
       "zipcode_98133     1.116e+05   1.58e+04      7.084      0.000    8.07e+04    1.42e+05\n",
       "zipcode_98136     2.383e+05   1.08e+04     21.972      0.000    2.17e+05     2.6e+05\n",
       "zipcode_98144      2.39e+05   1.16e+04     20.618      0.000    2.16e+05    2.62e+05\n",
       "zipcode_98146     7.647e+04   9666.231      7.911      0.000    5.75e+04    9.54e+04\n",
       "zipcode_98148      6.05e+04   1.34e+04      4.521      0.000    3.43e+04    8.67e+04\n",
       "zipcode_98155      8.98e+04   1.64e+04      5.482      0.000    5.77e+04    1.22e+05\n",
       "zipcode_98166     6.998e+04   8808.715      7.944      0.000    5.27e+04    8.72e+04\n",
       "zipcode_98168     3.393e+04   9251.289      3.667      0.000    1.58e+04    5.21e+04\n",
       "zipcode_98177     1.544e+05   1.66e+04      9.291      0.000    1.22e+05    1.87e+05\n",
       "zipcode_98178     4.255e+04   9491.000      4.483      0.000    2.39e+04    6.12e+04\n",
       "zipcode_98188     2.742e+04   9706.683      2.825      0.005    8390.575    4.64e+04\n",
       "zipcode_98198     8946.0597   7438.848      1.203      0.229   -5634.953    2.35e+04\n",
       "zipcode_98199     3.405e+05   1.36e+04     24.960      0.000    3.14e+05    3.67e+05\n",
       "month_of_date_2   3861.6256   3714.416      1.040      0.299   -3419.064    1.11e+04\n",
       "month_of_date_3   1.999e+04   3407.409      5.867      0.000    1.33e+04    2.67e+04\n",
       "month_of_date_4   2.777e+04   3329.028      8.341      0.000    2.12e+04    3.43e+04\n",
       "month_of_date_5   2935.4491   3286.994      0.893      0.372   -3507.445    9378.343\n",
       "month_of_date_6  -1993.6744   3346.489     -0.596      0.551   -8553.185    4565.836\n",
       "month_of_date_7  -2449.0661   3326.856     -0.736      0.462   -8970.093    4071.961\n",
       "month_of_date_8  -3956.1112   3399.456     -1.164      0.245   -1.06e+04    2707.220\n",
       "month_of_date_9  -7467.6663   3446.105     -2.167      0.030   -1.42e+04    -712.898\n",
       "month_of_date_10 -9064.0997   3421.451     -2.649      0.008   -1.58e+04   -2357.655\n",
       "month_of_date_11 -1.081e+04   3601.166     -3.002      0.003   -1.79e+04   -3750.614\n",
       "month_of_date_12 -4589.7591   3580.515     -1.282      0.200   -1.16e+04    2428.468\n",
       "==============================================================================\n",
       "Omnibus:                      303.170   Durbin-Watson:                   1.971\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              397.366\n",
       "Skew:                           0.254   Prob(JB):                     5.16e-87\n",
       "Kurtosis:                       3.593   Cond. No.                     5.90e+18\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 1.07e-28. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1_adj_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "026102b4",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "397.36605732768777\n",
      "\n",
      " Prob ----\n",
      "5.164841561233565e-87\n",
      "\n",
      " Skew ----\n",
      "0.25435529537826285\n",
      "\n",
      " Kurtosis ----\n",
      "3.5929974150488335\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/graphics/gofplots.py:993: UserWarning: marker is redundantly defined by the 'marker' keyword argument and the fmt string \"bo\" (-> marker='o'). The keyword argument will take precedence.\n",
      "  ax.plot(x, y, fmt, **plot_style)\n",
      "/var/folders/dp/5k1wgpbj6d72lnbdgvwv16l40000gn/T/ipykernel_50673/3602366465.py:13: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model1_adj_ols);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "417d68cc",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                     value\n",
      "Lagrange multiplier statistic  2563.990464\n",
      "p-value                           0.000000\n",
      "f-value                          26.947068\n",
      "f p-value                         0.000000\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "               value\n",
      "F statistic  1.00619\n",
      "p-value      0.39331\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model1_adj_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82c371f6",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Target Log-transformed Price"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfa9cd47",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We repeat Model 1 for the log-transformed price data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "1841b732",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output_ln, 'ln_price')\n",
    "\n",
    "#create linear regression model for ln price\n",
    "model1_ln= LinearRegression()\n",
    "model1_ln.fit(X_train, y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "bc4b6c78",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.889, the median R-squared values for the test sets were 0.888. These values resulted in a differential of 0.00103'"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation\n",
    "model1_ln_cval = cross_val(model1_ln,\n",
    "                           X=X_train,\n",
    "                           y=y_train,\n",
    "                           random_state=0)\n",
    "\n",
    "model1_ln_cval_summary = cval_summary(model1_ln_cval[0],\n",
    "                                      model1_ln_cval[1],\n",
    "                                      abs(model1_ln_cval[0]-model1_ln_cval[1]))\n",
    "model1_ln_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "45a4fdb5",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00697. The RMSE of our model predicitons was 122550.02'"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model1_ln_scores = score_model(model1_ln,\n",
    "                             X_train,\n",
    "                             X_test,\n",
    "                             y_train,\n",
    "                             y_test,\n",
    "                             log=True)\n",
    "\n",
    "model1_ln_summary = model_summary(model1_ln_scores[0],\n",
    "                                  model1_ln_scores[1],\n",
    "                                  abs(model1_ln_scores[0]-model1_ln_scores[1]),\n",
    "                                  model1_ln_scores[2])\n",
    "model1_ln_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "eb3b5a7d",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model1_ln, X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36084611",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Log-transformed Price - OLS and Assumption Tests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "9cab4728",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
      "  x = pd.concat(x[::order], 1)\n"
     ]
    }
   ],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model1_ln_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "da4d8509",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th>  <td>   0.889</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.888</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1194.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Oct 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>17:35:51</td>     <th>  Log-Likelihood:    </th>  <td>  5513.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>-1.080e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17160</td>      <th>  BIC:               </th>  <td>  -9896.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   115</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -145.5581</td> <td>   15.427</td> <td>   -9.435</td> <td> 0.000</td> <td> -175.796</td> <td> -115.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>   -0.0468</td> <td>    0.007</td> <td>   -7.013</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td>    0.0578</td> <td>    0.006</td> <td>    9.346</td> <td> 0.000</td> <td>    0.046</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>    0.2778</td> <td>    0.019</td> <td>   14.391</td> <td> 0.000</td> <td>    0.240</td> <td>    0.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td>    0.0741</td> <td>    0.004</td> <td>   18.779</td> <td> 0.000</td> <td>    0.066</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td>    0.1536</td> <td>    0.017</td> <td>    8.894</td> <td> 0.000</td> <td>    0.120</td> <td>    0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td> 9.381e-06</td> <td> 9.04e-06</td> <td>    1.038</td> <td> 0.299</td> <td>-8.33e-06</td> <td> 2.71e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   25.7463</td> <td>    3.699</td> <td>    6.960</td> <td> 0.000</td> <td>   18.495</td> <td>   32.997</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>   -0.4412</td> <td>    0.055</td> <td>   -7.962</td> <td> 0.000</td> <td>   -0.550</td> <td>   -0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>    0.1579</td> <td>    0.007</td> <td>   21.300</td> <td> 0.000</td> <td>    0.143</td> <td>    0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>   -0.0217</td> <td>    0.004</td> <td>   -4.959</td> <td> 0.000</td> <td>   -0.030</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>    0.0061</td> <td>    0.005</td> <td>    1.121</td> <td> 0.262</td> <td>   -0.005</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>   -0.0088</td> <td>    0.005</td> <td>   -1.869</td> <td> 0.062</td> <td>   -0.018</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td>    0.0046</td> <td>    0.017</td> <td>    0.277</td> <td> 0.782</td> <td>   -0.028</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>   -0.0839</td> <td>    0.010</td> <td>   -8.328</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td>   -0.0662</td> <td>    0.067</td> <td>   -0.985</td> <td> 0.325</td> <td>   -0.198</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>    0.4569</td> <td>    0.020</td> <td>   22.658</td> <td> 0.000</td> <td>    0.417</td> <td>    0.496</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td>    0.1251</td> <td>    0.011</td> <td>   10.963</td> <td> 0.000</td> <td>    0.103</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td>    0.1015</td> <td>    0.007</td> <td>   14.622</td> <td> 0.000</td> <td>    0.088</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td>    0.1752</td> <td>    0.009</td> <td>   18.473</td> <td> 0.000</td> <td>    0.157</td> <td>    0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td>    0.2847</td> <td>    0.014</td> <td>   20.409</td> <td> 0.000</td> <td>    0.257</td> <td>    0.312</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td>    0.1887</td> <td>    0.042</td> <td>    4.447</td> <td> 0.000</td> <td>    0.106</td> <td>    0.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td>    0.3081</td> <td>    0.040</td> <td>    7.703</td> <td> 0.000</td> <td>    0.230</td> <td>    0.387</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>    0.3500</td> <td>    0.040</td> <td>    8.742</td> <td> 0.000</td> <td>    0.271</td> <td>    0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td>    0.4202</td> <td>    0.040</td> <td>   10.446</td> <td> 0.000</td> <td>    0.341</td> <td>    0.499</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>   -0.6135</td> <td>    0.182</td> <td>   -3.375</td> <td> 0.001</td> <td>   -0.970</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>   -0.5416</td> <td>    0.178</td> <td>   -3.050</td> <td> 0.002</td> <td>   -0.890</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>   -0.4886</td> <td>    0.177</td> <td>   -2.757</td> <td> 0.006</td> <td>   -0.836</td> <td>   -0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>   -0.4195</td> <td>    0.177</td> <td>   -2.367</td> <td> 0.018</td> <td>   -0.767</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>   -0.3398</td> <td>    0.177</td> <td>   -1.916</td> <td> 0.055</td> <td>   -0.687</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>   -0.2221</td> <td>    0.177</td> <td>   -1.252</td> <td> 0.211</td> <td>   -0.570</td> <td>    0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>   -0.1338</td> <td>    0.178</td> <td>   -0.754</td> <td> 0.451</td> <td>   -0.482</td> <td>    0.214</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>   -0.0152</td> <td>    0.178</td> <td>   -0.085</td> <td> 0.932</td> <td>   -0.364</td> <td>    0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>    0.1104</td> <td>    0.179</td> <td>    0.617</td> <td> 0.537</td> <td>   -0.240</td> <td>    0.461</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td>    0.3994</td> <td>    0.186</td> <td>    2.149</td> <td> 0.032</td> <td>    0.035</td> <td>    0.764</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td>    0.0713</td> <td>    0.008</td> <td>    9.384</td> <td> 0.000</td> <td>    0.056</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td>    0.0271</td> <td>    0.018</td> <td>    1.483</td> <td> 0.138</td> <td>   -0.009</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td>    0.0097</td> <td>    0.016</td> <td>    0.603</td> <td> 0.546</td> <td>   -0.022</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>    0.9800</td> <td>    0.029</td> <td>   33.933</td> <td> 0.000</td> <td>    0.923</td> <td>    1.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td>    0.6090</td> <td>    0.031</td> <td>   19.720</td> <td> 0.000</td> <td>    0.548</td> <td>    0.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td>    0.5609</td> <td>    0.025</td> <td>   22.161</td> <td> 0.000</td> <td>    0.511</td> <td>    0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td>    0.5554</td> <td>    0.032</td> <td>   17.420</td> <td> 0.000</td> <td>    0.493</td> <td>    0.618</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td>    0.5676</td> <td>    0.030</td> <td>   18.834</td> <td> 0.000</td> <td>    0.509</td> <td>    0.627</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td>    0.3270</td> <td>    0.027</td> <td>   12.206</td> <td> 0.000</td> <td>    0.274</td> <td>    0.379</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>    0.2429</td> <td>    0.039</td> <td>    6.170</td> <td> 0.000</td> <td>    0.166</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>    0.2746</td> <td>    0.043</td> <td>    6.409</td> <td> 0.000</td> <td>    0.191</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td>    0.2127</td> <td>    0.042</td> <td>    5.006</td> <td> 0.000</td> <td>    0.129</td> <td>    0.296</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td>    0.2200</td> <td>    0.024</td> <td>    9.303</td> <td> 0.000</td> <td>    0.174</td> <td>    0.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>   -0.0567</td> <td>    0.015</td> <td>   -3.863</td> <td> 0.000</td> <td>   -0.085</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>    0.4545</td> <td>    0.037</td> <td>   12.220</td> <td> 0.000</td> <td>    0.382</td> <td>    0.527</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td>    0.4955</td> <td>    0.026</td> <td>   19.251</td> <td> 0.000</td> <td>    0.445</td> <td>    0.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td>    0.1822</td> <td>    0.038</td> <td>    4.767</td> <td> 0.000</td> <td>    0.107</td> <td>    0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td>    0.5909</td> <td>    0.030</td> <td>   20.002</td> <td> 0.000</td> <td>    0.533</td> <td>    0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td>    0.0561</td> <td>    0.018</td> <td>    3.176</td> <td> 0.001</td> <td>    0.021</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>    0.0617</td> <td>    0.018</td> <td>    3.389</td> <td> 0.001</td> <td>    0.026</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td>   -0.0463</td> <td>    0.021</td> <td>   -2.185</td> <td> 0.029</td> <td>   -0.088</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td>    0.6330</td> <td>    0.033</td> <td>   19.291</td> <td> 0.000</td> <td>    0.569</td> <td>    0.697</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td>    0.3612</td> <td>    0.035</td> <td>   10.290</td> <td> 0.000</td> <td>    0.292</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td>    0.2356</td> <td>    0.020</td> <td>   11.983</td> <td> 0.000</td> <td>    0.197</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td>    1.1320</td> <td>    0.039</td> <td>   29.291</td> <td> 0.000</td> <td>    1.056</td> <td>    1.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td>    0.7627</td> <td>    0.026</td> <td>   29.727</td> <td> 0.000</td> <td>    0.712</td> <td>    0.813</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>    0.0992</td> <td>    0.017</td> <td>    5.911</td> <td> 0.000</td> <td>    0.066</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td>    0.4588</td> <td>    0.036</td> <td>   12.865</td> <td> 0.000</td> <td>    0.389</td> <td>    0.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td>    0.5066</td> <td>    0.033</td> <td>   15.178</td> <td> 0.000</td> <td>    0.441</td> <td>    0.572</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td>    0.4908</td> <td>    0.036</td> <td>   13.715</td> <td> 0.000</td> <td>    0.421</td> <td>    0.561</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td>    0.1052</td> <td>    0.020</td> <td>    5.200</td> <td> 0.000</td> <td>    0.066</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td>    0.2591</td> <td>    0.022</td> <td>   11.720</td> <td> 0.000</td> <td>    0.216</td> <td>    0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td>    0.1409</td> <td>    0.019</td> <td>    7.327</td> <td> 0.000</td> <td>    0.103</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td>    0.2999</td> <td>    0.022</td> <td>   13.837</td> <td> 0.000</td> <td>    0.257</td> <td>    0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td>    0.4632</td> <td>    0.033</td> <td>   13.942</td> <td> 0.000</td> <td>    0.398</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>    0.1606</td> <td>    0.026</td> <td>    6.186</td> <td> 0.000</td> <td>    0.110</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td>    0.2896</td> <td>    0.039</td> <td>    7.413</td> <td> 0.000</td> <td>    0.213</td> <td>    0.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>    0.4830</td> <td>    0.032</td> <td>   15.264</td> <td> 0.000</td> <td>    0.421</td> <td>    0.545</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td>    0.5083</td> <td>    0.030</td> <td>   16.761</td> <td> 0.000</td> <td>    0.449</td> <td>    0.568</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>    0.2856</td> <td>    0.041</td> <td>    7.037</td> <td> 0.000</td> <td>    0.206</td> <td>    0.365</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>    0.0612</td> <td>    0.016</td> <td>    3.801</td> <td> 0.000</td> <td>    0.030</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td>    0.8143</td> <td>    0.034</td> <td>   24.065</td> <td> 0.000</td> <td>    0.748</td> <td>    0.881</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td>    0.6574</td> <td>    0.032</td> <td>   20.729</td> <td> 0.000</td> <td>    0.595</td> <td>    0.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td>    0.7881</td> <td>    0.032</td> <td>   24.299</td> <td> 0.000</td> <td>    0.725</td> <td>    0.852</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>    0.2383</td> <td>    0.024</td> <td>   10.071</td> <td> 0.000</td> <td>    0.192</td> <td>    0.285</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>    0.6729</td> <td>    0.033</td> <td>   20.561</td> <td> 0.000</td> <td>    0.609</td> <td>    0.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td>    0.2555</td> <td>    0.026</td> <td>    9.916</td> <td> 0.000</td> <td>    0.205</td> <td>    0.306</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td>    0.8520</td> <td>    0.034</td> <td>   25.291</td> <td> 0.000</td> <td>    0.786</td> <td>    0.918</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td>    0.9203</td> <td>    0.030</td> <td>   31.023</td> <td> 0.000</td> <td>    0.862</td> <td>    0.978</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td>    0.6430</td> <td>    0.032</td> <td>   19.941</td> <td> 0.000</td> <td>    0.580</td> <td>    0.706</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td>    0.6127</td> <td>    0.026</td> <td>   23.280</td> <td> 0.000</td> <td>    0.561</td> <td>    0.664</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td>    0.6127</td> <td>    0.033</td> <td>   18.751</td> <td> 0.000</td> <td>    0.549</td> <td>    0.677</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>    0.3700</td> <td>    0.023</td> <td>   16.070</td> <td> 0.000</td> <td>    0.325</td> <td>    0.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td>    0.8159</td> <td>    0.032</td> <td>   25.671</td> <td> 0.000</td> <td>    0.754</td> <td>    0.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>    0.6868</td> <td>    0.028</td> <td>   24.245</td> <td> 0.000</td> <td>    0.631</td> <td>    0.742</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>    0.3670</td> <td>    0.035</td> <td>   10.544</td> <td> 0.000</td> <td>    0.299</td> <td>    0.435</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td>    0.4187</td> <td>    0.024</td> <td>   17.234</td> <td> 0.000</td> <td>    0.371</td> <td>    0.466</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td>    0.2297</td> <td>    0.036</td> <td>    6.384</td> <td> 0.000</td> <td>    0.159</td> <td>    0.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td>    0.5547</td> <td>    0.025</td> <td>   22.328</td> <td> 0.000</td> <td>    0.506</td> <td>    0.603</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>    0.5616</td> <td>    0.026</td> <td>   21.198</td> <td> 0.000</td> <td>    0.510</td> <td>    0.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td>    0.1673</td> <td>    0.022</td> <td>    7.520</td> <td> 0.000</td> <td>    0.124</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>    0.0857</td> <td>    0.029</td> <td>    2.923</td> <td> 0.003</td> <td>    0.028</td> <td>    0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>    0.1938</td> <td>    0.037</td> <td>    5.183</td> <td> 0.000</td> <td>    0.120</td> <td>    0.267</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td>    0.2049</td> <td>    0.020</td> <td>   10.144</td> <td> 0.000</td> <td>    0.165</td> <td>    0.245</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td>   -0.0006</td> <td>    0.022</td> <td>   -0.029</td> <td> 0.977</td> <td>   -0.043</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td>    0.3314</td> <td>    0.038</td> <td>    8.805</td> <td> 0.000</td> <td>    0.258</td> <td>    0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td>    0.0838</td> <td>    0.022</td> <td>    3.815</td> <td> 0.000</td> <td>    0.041</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td>    0.0377</td> <td>    0.022</td> <td>    1.678</td> <td> 0.093</td> <td>   -0.006</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>   -0.0021</td> <td>    0.017</td> <td>   -0.123</td> <td> 0.902</td> <td>   -0.036</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td>    0.6567</td> <td>    0.031</td> <td>   21.168</td> <td> 0.000</td> <td>    0.596</td> <td>    0.717</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>    0.0150</td> <td>    0.008</td> <td>    1.771</td> <td> 0.077</td> <td>   -0.002</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td>    0.0424</td> <td>    0.008</td> <td>    5.457</td> <td> 0.000</td> <td>    0.027</td> <td>    0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td>    0.0657</td> <td>    0.008</td> <td>    8.671</td> <td> 0.000</td> <td>    0.051</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td>    0.0075</td> <td>    0.007</td> <td>    1.002</td> <td> 0.317</td> <td>   -0.007</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>   -0.0014</td> <td>    0.008</td> <td>   -0.188</td> <td> 0.851</td> <td>   -0.016</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>   -0.0079</td> <td>    0.008</td> <td>   -1.045</td> <td> 0.296</td> <td>   -0.023</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>   -0.0070</td> <td>    0.008</td> <td>   -0.898</td> <td> 0.369</td> <td>   -0.022</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>   -0.0124</td> <td>    0.008</td> <td>   -1.580</td> <td> 0.114</td> <td>   -0.028</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>   -0.0143</td> <td>    0.008</td> <td>   -1.830</td> <td> 0.067</td> <td>   -0.030</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>   -0.0136</td> <td>    0.008</td> <td>   -1.659</td> <td> 0.097</td> <td>   -0.030</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>   -0.0047</td> <td>    0.008</td> <td>   -0.575</td> <td> 0.565</td> <td>   -0.021</td> <td>    0.011</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>1263.108</td> <th>  Durbin-Watson:     </th> <td>   2.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>5617.621</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td>-0.222</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 5.758</td>  <th>  Cond. No.          </th> <td>6.31e+06</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.889\n",
       "Model:                            OLS   Adj. R-squared:                  0.888\n",
       "Method:                 Least Squares   F-statistic:                     1194.\n",
       "Date:                Tue, 26 Oct 2021   Prob (F-statistic):               0.00\n",
       "Time:                        17:35:51   Log-Likelihood:                 5513.8\n",
       "No. Observations:               17276   AIC:                        -1.080e+04\n",
       "Df Residuals:                   17160   BIC:                            -9896.\n",
       "Df Model:                         115                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -145.5581     15.427     -9.435      0.000    -175.796    -115.320\n",
       "bedrooms            -0.0468      0.007     -7.013      0.000      -0.060      -0.034\n",
       "bathrooms            0.0578      0.006      9.346      0.000       0.046       0.070\n",
       "sqft_living          0.2778      0.019     14.391      0.000       0.240       0.316\n",
       "sqft_lot             0.0741      0.004     18.779      0.000       0.066       0.082\n",
       "sqft_above           0.1536      0.017      8.894      0.000       0.120       0.187\n",
       "sqft_basement     9.381e-06   9.04e-06      1.038      0.299   -8.33e-06    2.71e-05\n",
       "lat                 25.7463      3.699      6.960      0.000      18.495      32.997\n",
       "long                -0.4412      0.055     -7.962      0.000      -0.550      -0.333\n",
       "sqft_living15        0.1579      0.007     21.300      0.000       0.143       0.172\n",
       "sqft_lot15          -0.0217      0.004     -4.959      0.000      -0.030      -0.013\n",
       "floors_1.5           0.0061      0.005      1.121      0.262      -0.005       0.017\n",
       "floors_2.0          -0.0088      0.005     -1.869      0.062      -0.018       0.000\n",
       "floors_2.5           0.0046      0.017      0.277      0.782      -0.028       0.037\n",
       "floors_3.0          -0.0839      0.010     -8.328      0.000      -0.104      -0.064\n",
       "floors_3.5          -0.0662      0.067     -0.985      0.325      -0.198       0.066\n",
       "waterfront_1         0.4569      0.020     22.658      0.000       0.417       0.496\n",
       "view_1               0.1251      0.011     10.963      0.000       0.103       0.148\n",
       "view_2               0.1015      0.007     14.622      0.000       0.088       0.115\n",
       "view_3               0.1752      0.009     18.473      0.000       0.157       0.194\n",
       "view_4               0.2847      0.014     20.409      0.000       0.257       0.312\n",
       "condition_2          0.1887      0.042      4.447      0.000       0.106       0.272\n",
       "condition_3          0.3081      0.040      7.703      0.000       0.230       0.387\n",
       "condition_4          0.3500      0.040      8.742      0.000       0.271       0.428\n",
       "condition_5          0.4202      0.040     10.446      0.000       0.341       0.499\n",
       "grade_4             -0.6135      0.182     -3.375      0.001      -0.970      -0.257\n",
       "grade_5             -0.5416      0.178     -3.050      0.002      -0.890      -0.193\n",
       "grade_6             -0.4886      0.177     -2.757      0.006      -0.836      -0.141\n",
       "grade_7             -0.4195      0.177     -2.367      0.018      -0.767      -0.072\n",
       "grade_8             -0.3398      0.177     -1.916      0.055      -0.687       0.008\n",
       "grade_9             -0.2221      0.177     -1.252      0.211      -0.570       0.126\n",
       "grade_10            -0.1338      0.178     -0.754      0.451      -0.482       0.214\n",
       "grade_11            -0.0152      0.178     -0.085      0.932      -0.364       0.333\n",
       "grade_12             0.1104      0.179      0.617      0.537      -0.240       0.461\n",
       "grade_13             0.3994      0.186      2.149      0.032       0.035       0.764\n",
       "if_renovated_1       0.0713      0.008      9.384      0.000       0.056       0.086\n",
       "zipcode_98002        0.0271      0.018      1.483      0.138      -0.009       0.063\n",
       "zipcode_98003        0.0097      0.016      0.603      0.546      -0.022       0.041\n",
       "zipcode_98004        0.9800      0.029     33.933      0.000       0.923       1.037\n",
       "zipcode_98005        0.6090      0.031     19.720      0.000       0.548       0.669\n",
       "zipcode_98006        0.5609      0.025     22.161      0.000       0.511       0.611\n",
       "zipcode_98007        0.5554      0.032     17.420      0.000       0.493       0.618\n",
       "zipcode_98008        0.5676      0.030     18.834      0.000       0.509       0.627\n",
       "zipcode_98010        0.3270      0.027     12.206      0.000       0.274       0.379\n",
       "zipcode_98011        0.2429      0.039      6.170      0.000       0.166       0.320\n",
       "zipcode_98014        0.2746      0.043      6.409      0.000       0.191       0.359\n",
       "zipcode_98019        0.2127      0.042      5.006      0.000       0.129       0.296\n",
       "zipcode_98022        0.2200      0.024      9.303      0.000       0.174       0.266\n",
       "zipcode_98023       -0.0567      0.015     -3.863      0.000      -0.085      -0.028\n",
       "zipcode_98024        0.4545      0.037     12.220      0.000       0.382       0.527\n",
       "zipcode_98027        0.4955      0.026     19.251      0.000       0.445       0.546\n",
       "zipcode_98028        0.1822      0.038      4.767      0.000       0.107       0.257\n",
       "zipcode_98029        0.5909      0.030     20.002      0.000       0.533       0.649\n",
       "zipcode_98030        0.0561      0.018      3.176      0.001       0.021       0.091\n",
       "zipcode_98031        0.0617      0.018      3.389      0.001       0.026       0.097\n",
       "zipcode_98032       -0.0463      0.021     -2.185      0.029      -0.088      -0.005\n",
       "zipcode_98033        0.6330      0.033     19.291      0.000       0.569       0.697\n",
       "zipcode_98034        0.3612      0.035     10.290      0.000       0.292       0.430\n",
       "zipcode_98038        0.2356      0.020     11.983      0.000       0.197       0.274\n",
       "zipcode_98039        1.1320      0.039     29.291      0.000       1.056       1.208\n",
       "zipcode_98040        0.7627      0.026     29.727      0.000       0.712       0.813\n",
       "zipcode_98042        0.0992      0.017      5.911      0.000       0.066       0.132\n",
       "zipcode_98045        0.4588      0.036     12.865      0.000       0.389       0.529\n",
       "zipcode_98052        0.5066      0.033     15.178      0.000       0.441       0.572\n",
       "zipcode_98053        0.4908      0.036     13.715      0.000       0.421       0.561\n",
       "zipcode_98055        0.1052      0.020      5.200      0.000       0.066       0.145\n",
       "zipcode_98056        0.2591      0.022     11.720      0.000       0.216       0.302\n",
       "zipcode_98058        0.1409      0.019      7.327      0.000       0.103       0.179\n",
       "zipcode_98059        0.2999      0.022     13.837      0.000       0.257       0.342\n",
       "zipcode_98065        0.4632      0.033     13.942      0.000       0.398       0.528\n",
       "zipcode_98070        0.1606      0.026      6.186      0.000       0.110       0.211\n",
       "zipcode_98072        0.2896      0.039      7.413      0.000       0.213       0.366\n",
       "zipcode_98074        0.4830      0.032     15.264      0.000       0.421       0.545\n",
       "zipcode_98075        0.5083      0.030     16.761      0.000       0.449       0.568\n",
       "zipcode_98077        0.2856      0.041      7.037      0.000       0.206       0.365\n",
       "zipcode_98092        0.0612      0.016      3.801      0.000       0.030       0.093\n",
       "zipcode_98102        0.8143      0.034     24.065      0.000       0.748       0.881\n",
       "zipcode_98103        0.6574      0.032     20.729      0.000       0.595       0.720\n",
       "zipcode_98105        0.7881      0.032     24.299      0.000       0.725       0.852\n",
       "zipcode_98106        0.2383      0.024     10.071      0.000       0.192       0.285\n",
       "zipcode_98107        0.6729      0.033     20.561      0.000       0.609       0.737\n",
       "zipcode_98108        0.2555      0.026      9.916      0.000       0.205       0.306\n",
       "zipcode_98109        0.8520      0.034     25.291      0.000       0.786       0.918\n",
       "zipcode_98112        0.9203      0.030     31.023      0.000       0.862       0.978\n",
       "zipcode_98115        0.6430      0.032     19.941      0.000       0.580       0.706\n",
       "zipcode_98116        0.6127      0.026     23.280      0.000       0.561       0.664\n",
       "zipcode_98117        0.6127      0.033     18.751      0.000       0.549       0.677\n",
       "zipcode_98118        0.3700      0.023     16.070      0.000       0.325       0.415\n",
       "zipcode_98119        0.8159      0.032     25.671      0.000       0.754       0.878\n",
       "zipcode_98122        0.6868      0.028     24.245      0.000       0.631       0.742\n",
       "zipcode_98125        0.3670      0.035     10.544      0.000       0.299       0.435\n",
       "zipcode_98126        0.4187      0.024     17.234      0.000       0.371       0.466\n",
       "zipcode_98133        0.2297      0.036      6.384      0.000       0.159       0.300\n",
       "zipcode_98136        0.5547      0.025     22.328      0.000       0.506       0.603\n",
       "zipcode_98144        0.5616      0.026     21.198      0.000       0.510       0.614\n",
       "zipcode_98146        0.1673      0.022      7.520      0.000       0.124       0.211\n",
       "zipcode_98148        0.0857      0.029      2.923      0.003       0.028       0.143\n",
       "zipcode_98155        0.1938      0.037      5.183      0.000       0.120       0.267\n",
       "zipcode_98166        0.2049      0.020     10.144      0.000       0.165       0.245\n",
       "zipcode_98168       -0.0006      0.022     -0.029      0.977      -0.043       0.042\n",
       "zipcode_98177        0.3314      0.038      8.805      0.000       0.258       0.405\n",
       "zipcode_98178        0.0838      0.022      3.815      0.000       0.041       0.127\n",
       "zipcode_98188        0.0377      0.022      1.678      0.093      -0.006       0.082\n",
       "zipcode_98198       -0.0021      0.017     -0.123      0.902      -0.036       0.032\n",
       "zipcode_98199        0.6567      0.031     21.168      0.000       0.596       0.717\n",
       "month_of_date_2      0.0150      0.008      1.771      0.077      -0.002       0.032\n",
       "month_of_date_3      0.0424      0.008      5.457      0.000       0.027       0.058\n",
       "month_of_date_4      0.0657      0.008      8.671      0.000       0.051       0.081\n",
       "month_of_date_5      0.0075      0.007      1.002      0.317      -0.007       0.022\n",
       "month_of_date_6     -0.0014      0.008     -0.188      0.851      -0.016       0.014\n",
       "month_of_date_7     -0.0079      0.008     -1.045      0.296      -0.023       0.007\n",
       "month_of_date_8     -0.0070      0.008     -0.898      0.369      -0.022       0.008\n",
       "month_of_date_9     -0.0124      0.008     -1.580      0.114      -0.028       0.003\n",
       "month_of_date_10    -0.0143      0.008     -1.830      0.067      -0.030       0.001\n",
       "month_of_date_11    -0.0136      0.008     -1.659      0.097      -0.030       0.002\n",
       "month_of_date_12    -0.0047      0.008     -0.575      0.565      -0.021       0.011\n",
       "==============================================================================\n",
       "Omnibus:                     1263.108   Durbin-Watson:                   2.025\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5617.621\n",
       "Skew:                          -0.222   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.758   Cond. No.                     6.31e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1_ln_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "de5dc044",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "5617.6206563395335\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.2216147136335716\n",
      "\n",
      " Kurtosis ----\n",
      "5.758188731968339\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/graphics/gofplots.py:993: UserWarning: marker is redundantly defined by the 'marker' keyword argument and the fmt string \"bo\" (-> marker='o'). The keyword argument will take precedence.\n",
      "  ax.plot(x, y, fmt, **plot_style)\n",
      "/var/folders/dp/5k1wgpbj6d72lnbdgvwv16l40000gn/T/ipykernel_50673/3602366465.py:13: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model1_ln_ols);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "7ca35752",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.659959e+03\n",
      "p-value                        5.934956e-272\n",
      "f-value                         1.586156e+01\n",
      "f p-value                      5.234348e-288\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.959992\n",
      "p-value      0.970256\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model1_ln_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe6591ec",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Log-transformed Price  - Influence and Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "68030425",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#find the cooks distance\n",
    "inf = influence(model1_ln_ols)\n",
    "C, P = inf.cooks_distance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "1218f74c",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':\"Cook's Distance\"}, xlabel='instance', ylabel='distance'>"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plot cooks distance\n",
    "plot_cooks_distance(C)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "0ae9c619",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create a new dataframe from main dataframe\n",
    "train_df = pd.concat([y_train, X_train], axis=1)\n",
    "\n",
    "#add new column for cooks distance\n",
    "train_df['influence'] = C"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "0281fdcd",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#using the IQR rule, check what proportion of influence are outliers\n",
    "quantile_75 = train_df['influence'].quantile(0.75)\n",
    "quantile_25 = train_df['influence'].quantile(0.25)\n",
    "iqr = quantile_75-quantile_25\n",
    "\n",
    "elim_train_df = train_df[(train_df['influence'] > quantile_75 + 3*iqr) | \n",
    "                       (train_df['influence'] < quantile_25 - 3*iqr)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "58e1e542",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.07\n"
     ]
    }
   ],
   "source": [
    "#find the indexes related to the top x rows by cooks distance\n",
    "list_index = list(elim_train_df.index)\n",
    "\n",
    "#what proportion of df are we removing\n",
    "print(round(len(elim_train_df)/len(train_df),2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "1de0c505",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#drop any rows with the index of top x rows by cooks distance and any nulls\n",
    "train_df.drop(index=list_index, inplace=True)\n",
    "train_df.drop(columns=['influence','const'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3dafc052",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 1: Log-transformed Price  - Retesting Based on Removed Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "92af3a70",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train = train_df.drop(['ln_price'], axis = 1)\n",
    "y_train = train_df['ln_price']\n",
    "\n",
    "#create linear regression model for ln price\n",
    "model1_ln_adj= LinearRegression()\n",
    "model1_ln_adj.fit(X_train, y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "697a9198",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.925, the median R-squared values for the test sets were 0.923. These values resulted in a differential of 0.00181'"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation\n",
    "model1_ln_adj_cval = cross_val(model1_ln_adj,\n",
    "                           X=X_train,\n",
    "                           y=y_train,\n",
    "                           random_state=0)\n",
    "\n",
    "model1_ln_adj_cval_summary = cval_summary(model1_ln_adj_cval[0],\n",
    "                                      model1_ln_adj_cval[1],\n",
    "                                      abs(model1_ln_adj_cval[0]-model1_ln_adj_cval[1]))\n",
    "model1_ln_adj_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "ce1ab2c3",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.924, and the R-squared value for the test set was 0.881. These values resulted in a differential of 0.04295. The RMSE of our model predicitons was 122796.62'"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model1_ln_adj_scores = score_model(model1_ln_adj,\n",
    "                             X_train,\n",
    "                             X_test,\n",
    "                             y_train,\n",
    "                             y_test,\n",
    "                             log=True)\n",
    "\n",
    "model1_ln_adj_summary = model_summary(model1_ln_adj_scores[0],\n",
    "                                  model1_ln_adj_scores[1],\n",
    "                                  abs(model1_ln_adj_scores[0]-model1_ln_adj_scores[1]),\n",
    "                                  model1_ln_adj_scores[2])\n",
    "model1_ln_adj_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "191028ae",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model1_ln_adj, X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "fe9387ea",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only\n",
      "  x = pd.concat(x[::order], 1)\n"
     ]
    }
   ],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model1_ln_adj_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "45d29e51",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th>  <td>   0.924</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.924</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1727.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Oct 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>17:37:08</td>     <th>  Log-Likelihood:    </th>  <td>  9434.2</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 16083</td>      <th>  AIC:               </th> <td>-1.864e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 15969</td>      <th>  BIC:               </th> <td>-1.776e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   113</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -102.1610</td> <td>   11.446</td> <td>   -8.925</td> <td> 0.000</td> <td> -124.597</td> <td>  -79.725</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>   -0.0372</td> <td>    0.005</td> <td>   -6.840</td> <td> 0.000</td> <td>   -0.048</td> <td>   -0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td>    0.0535</td> <td>    0.005</td> <td>   10.761</td> <td> 0.000</td> <td>    0.044</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>    0.2626</td> <td>    0.016</td> <td>   16.277</td> <td> 0.000</td> <td>    0.231</td> <td>    0.294</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td>    0.0681</td> <td>    0.003</td> <td>   20.276</td> <td> 0.000</td> <td>    0.062</td> <td>    0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td>    0.1677</td> <td>    0.014</td> <td>   11.607</td> <td> 0.000</td> <td>    0.139</td> <td>    0.196</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td> 1.462e-05</td> <td> 7.73e-06</td> <td>    1.893</td> <td> 0.058</td> <td> -5.2e-07</td> <td> 2.98e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   22.2268</td> <td>    2.985</td> <td>    7.445</td> <td> 0.000</td> <td>   16.375</td> <td>   28.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>   -0.2791</td> <td>    0.052</td> <td>   -5.333</td> <td> 0.000</td> <td>   -0.382</td> <td>   -0.177</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>    0.1509</td> <td>    0.006</td> <td>   25.063</td> <td> 0.000</td> <td>    0.139</td> <td>    0.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>   -0.0187</td> <td>    0.004</td> <td>   -5.076</td> <td> 0.000</td> <td>   -0.026</td> <td>   -0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>    0.0053</td> <td>    0.004</td> <td>    1.205</td> <td> 0.228</td> <td>   -0.003</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>   -0.0099</td> <td>    0.004</td> <td>   -2.636</td> <td> 0.008</td> <td>   -0.017</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td>   -0.0137</td> <td>    0.015</td> <td>   -0.926</td> <td> 0.354</td> <td>   -0.043</td> <td>    0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>   -0.0935</td> <td>    0.008</td> <td>  -11.648</td> <td> 0.000</td> <td>   -0.109</td> <td>   -0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td> 7.053e-12</td> <td> 7.93e-13</td> <td>    8.898</td> <td> 0.000</td> <td>  5.5e-12</td> <td> 8.61e-12</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>    0.5042</td> <td>    0.019</td> <td>   25.936</td> <td> 0.000</td> <td>    0.466</td> <td>    0.542</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td>    0.1059</td> <td>    0.010</td> <td>   11.054</td> <td> 0.000</td> <td>    0.087</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td>    0.0981</td> <td>    0.006</td> <td>   17.413</td> <td> 0.000</td> <td>    0.087</td> <td>    0.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td>    0.1676</td> <td>    0.008</td> <td>   20.720</td> <td> 0.000</td> <td>    0.152</td> <td>    0.183</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td>    0.2688</td> <td>    0.012</td> <td>   21.585</td> <td> 0.000</td> <td>    0.244</td> <td>    0.293</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td>    0.2307</td> <td>    0.097</td> <td>    2.374</td> <td> 0.018</td> <td>    0.040</td> <td>    0.421</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td>    0.3680</td> <td>    0.096</td> <td>    3.835</td> <td> 0.000</td> <td>    0.180</td> <td>    0.556</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>    0.4014</td> <td>    0.096</td> <td>    4.182</td> <td> 0.000</td> <td>    0.213</td> <td>    0.590</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td>    0.4738</td> <td>    0.096</td> <td>    4.934</td> <td> 0.000</td> <td>    0.286</td> <td>    0.662</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>  -10.5820</td> <td>    1.146</td> <td>   -9.236</td> <td> 0.000</td> <td>  -12.828</td> <td>   -8.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>  -10.5430</td> <td>    1.145</td> <td>   -9.211</td> <td> 0.000</td> <td>  -12.787</td> <td>   -8.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>  -10.4656</td> <td>    1.145</td> <td>   -9.143</td> <td> 0.000</td> <td>  -12.709</td> <td>   -8.222</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>  -10.4022</td> <td>    1.145</td> <td>   -9.087</td> <td> 0.000</td> <td>  -12.646</td> <td>   -8.158</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>  -10.3278</td> <td>    1.145</td> <td>   -9.022</td> <td> 0.000</td> <td>  -12.572</td> <td>   -8.084</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>  -10.2095</td> <td>    1.145</td> <td>   -8.918</td> <td> 0.000</td> <td>  -12.453</td> <td>   -7.966</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>  -10.1292</td> <td>    1.145</td> <td>   -8.849</td> <td> 0.000</td> <td>  -12.373</td> <td>   -7.885</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>  -10.0174</td> <td>    1.145</td> <td>   -8.749</td> <td> 0.000</td> <td>  -12.262</td> <td>   -7.773</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>   -9.8803</td> <td>    1.145</td> <td>   -8.629</td> <td> 0.000</td> <td>  -12.125</td> <td>   -7.636</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td>   -9.6040</td> <td>    1.146</td> <td>   -8.381</td> <td> 0.000</td> <td>  -11.850</td> <td>   -7.358</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td>    0.0810</td> <td>    0.006</td> <td>   12.773</td> <td> 0.000</td> <td>    0.069</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td>    0.0288</td> <td>    0.014</td> <td>    1.997</td> <td> 0.046</td> <td>    0.001</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td>    0.0224</td> <td>    0.013</td> <td>    1.760</td> <td> 0.078</td> <td>   -0.003</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>    1.0104</td> <td>    0.023</td> <td>   43.194</td> <td> 0.000</td> <td>    0.965</td> <td>    1.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td>    0.6424</td> <td>    0.025</td> <td>   25.488</td> <td> 0.000</td> <td>    0.593</td> <td>    0.692</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td>    0.5675</td> <td>    0.021</td> <td>   27.295</td> <td> 0.000</td> <td>    0.527</td> <td>    0.608</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td>    0.5725</td> <td>    0.026</td> <td>   22.141</td> <td> 0.000</td> <td>    0.522</td> <td>    0.623</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td>    0.5661</td> <td>    0.025</td> <td>   22.856</td> <td> 0.000</td> <td>    0.518</td> <td>    0.615</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td>    0.2448</td> <td>    0.024</td> <td>   10.321</td> <td> 0.000</td> <td>    0.198</td> <td>    0.291</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>    0.2763</td> <td>    0.032</td> <td>    8.699</td> <td> 0.000</td> <td>    0.214</td> <td>    0.339</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>    0.2507</td> <td>    0.036</td> <td>    6.886</td> <td> 0.000</td> <td>    0.179</td> <td>    0.322</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td>    0.2082</td> <td>    0.036</td> <td>    5.827</td> <td> 0.000</td> <td>    0.138</td> <td>    0.278</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td>    0.1645</td> <td>    0.020</td> <td>    8.228</td> <td> 0.000</td> <td>    0.125</td> <td>    0.204</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>   -0.0372</td> <td>    0.012</td> <td>   -3.144</td> <td> 0.002</td> <td>   -0.060</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>    0.4002</td> <td>    0.033</td> <td>   12.117</td> <td> 0.000</td> <td>    0.335</td> <td>    0.465</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td>    0.4928</td> <td>    0.022</td> <td>   22.483</td> <td> 0.000</td> <td>    0.450</td> <td>    0.536</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td>    0.2253</td> <td>    0.031</td> <td>    7.333</td> <td> 0.000</td> <td>    0.165</td> <td>    0.286</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td>    0.5681</td> <td>    0.025</td> <td>   22.583</td> <td> 0.000</td> <td>    0.519</td> <td>    0.617</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td>    0.0595</td> <td>    0.014</td> <td>    4.220</td> <td> 0.000</td> <td>    0.032</td> <td>    0.087</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>    0.0592</td> <td>    0.015</td> <td>    4.055</td> <td> 0.000</td> <td>    0.031</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td>   -0.0128</td> <td>    0.017</td> <td>   -0.742</td> <td> 0.458</td> <td>   -0.047</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td>    0.6339</td> <td>    0.027</td> <td>   23.748</td> <td> 0.000</td> <td>    0.582</td> <td>    0.686</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td>    0.3743</td> <td>    0.028</td> <td>   13.153</td> <td> 0.000</td> <td>    0.319</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td>    0.2029</td> <td>    0.017</td> <td>   11.909</td> <td> 0.000</td> <td>    0.170</td> <td>    0.236</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td>    1.1754</td> <td>    0.033</td> <td>   35.747</td> <td> 0.000</td> <td>    1.111</td> <td>    1.240</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td>    0.7972</td> <td>    0.021</td> <td>   38.470</td> <td> 0.000</td> <td>    0.757</td> <td>    0.838</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>    0.0782</td> <td>    0.014</td> <td>    5.564</td> <td> 0.000</td> <td>    0.051</td> <td>    0.106</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td>    0.4066</td> <td>    0.032</td> <td>   12.604</td> <td> 0.000</td> <td>    0.343</td> <td>    0.470</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td>    0.5139</td> <td>    0.027</td> <td>   18.717</td> <td> 0.000</td> <td>    0.460</td> <td>    0.568</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td>    0.4931</td> <td>    0.030</td> <td>   16.461</td> <td> 0.000</td> <td>    0.434</td> <td>    0.552</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td>    0.1108</td> <td>    0.016</td> <td>    6.757</td> <td> 0.000</td> <td>    0.079</td> <td>    0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td>    0.2578</td> <td>    0.018</td> <td>   14.323</td> <td> 0.000</td> <td>    0.223</td> <td>    0.293</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td>    0.1380</td> <td>    0.016</td> <td>    8.698</td> <td> 0.000</td> <td>    0.107</td> <td>    0.169</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td>    0.2952</td> <td>    0.018</td> <td>   16.555</td> <td> 0.000</td> <td>    0.260</td> <td>    0.330</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td>    0.4180</td> <td>    0.029</td> <td>   14.271</td> <td> 0.000</td> <td>    0.361</td> <td>    0.475</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>    0.2152</td> <td>    0.023</td> <td>    9.447</td> <td> 0.000</td> <td>    0.171</td> <td>    0.260</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td>    0.3093</td> <td>    0.032</td> <td>    9.700</td> <td> 0.000</td> <td>    0.247</td> <td>    0.372</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>    0.4771</td> <td>    0.027</td> <td>   17.957</td> <td> 0.000</td> <td>    0.425</td> <td>    0.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td>    0.4896</td> <td>    0.026</td> <td>   19.093</td> <td> 0.000</td> <td>    0.439</td> <td>    0.540</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>    0.2918</td> <td>    0.033</td> <td>    8.719</td> <td> 0.000</td> <td>    0.226</td> <td>    0.357</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>    0.0403</td> <td>    0.013</td> <td>    3.101</td> <td> 0.002</td> <td>    0.015</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td>    0.8510</td> <td>    0.028</td> <td>   30.606</td> <td> 0.000</td> <td>    0.797</td> <td>    0.906</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td>    0.6995</td> <td>    0.025</td> <td>   27.566</td> <td> 0.000</td> <td>    0.650</td> <td>    0.749</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td>    0.8168</td> <td>    0.026</td> <td>   31.452</td> <td> 0.000</td> <td>    0.766</td> <td>    0.868</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>    0.2858</td> <td>    0.019</td> <td>   15.058</td> <td> 0.000</td> <td>    0.249</td> <td>    0.323</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>    0.7070</td> <td>    0.026</td> <td>   27.061</td> <td> 0.000</td> <td>    0.656</td> <td>    0.758</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td>    0.2975</td> <td>    0.021</td> <td>   14.354</td> <td> 0.000</td> <td>    0.257</td> <td>    0.338</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td>    0.8917</td> <td>    0.027</td> <td>   32.533</td> <td> 0.000</td> <td>    0.838</td> <td>    0.945</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td>    0.9580</td> <td>    0.024</td> <td>   40.088</td> <td> 0.000</td> <td>    0.911</td> <td>    1.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td>    0.6833</td> <td>    0.026</td> <td>   26.448</td> <td> 0.000</td> <td>    0.633</td> <td>    0.734</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td>    0.6714</td> <td>    0.021</td> <td>   31.911</td> <td> 0.000</td> <td>    0.630</td> <td>    0.713</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td>    0.6645</td> <td>    0.026</td> <td>   25.427</td> <td> 0.000</td> <td>    0.613</td> <td>    0.716</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>    0.3962</td> <td>    0.019</td> <td>   21.305</td> <td> 0.000</td> <td>    0.360</td> <td>    0.433</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td>    0.8615</td> <td>    0.026</td> <td>   33.653</td> <td> 0.000</td> <td>    0.811</td> <td>    0.912</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>    0.7005</td> <td>    0.023</td> <td>   30.738</td> <td> 0.000</td> <td>    0.656</td> <td>    0.745</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>    0.4009</td> <td>    0.028</td> <td>   14.360</td> <td> 0.000</td> <td>    0.346</td> <td>    0.456</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td>    0.4649</td> <td>    0.019</td> <td>   23.898</td> <td> 0.000</td> <td>    0.427</td> <td>    0.503</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td>    0.2780</td> <td>    0.029</td> <td>    9.652</td> <td> 0.000</td> <td>    0.222</td> <td>    0.334</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td>    0.6057</td> <td>    0.020</td> <td>   30.417</td> <td> 0.000</td> <td>    0.567</td> <td>    0.645</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>    0.5803</td> <td>    0.021</td> <td>   27.361</td> <td> 0.000</td> <td>    0.539</td> <td>    0.622</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td>    0.2004</td> <td>    0.018</td> <td>   10.978</td> <td> 0.000</td> <td>    0.165</td> <td>    0.236</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>    0.1296</td> <td>    0.027</td> <td>    4.809</td> <td> 0.000</td> <td>    0.077</td> <td>    0.182</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>    0.2396</td> <td>    0.030</td> <td>    7.988</td> <td> 0.000</td> <td>    0.181</td> <td>    0.298</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td>    0.2513</td> <td>    0.016</td> <td>   15.481</td> <td> 0.000</td> <td>    0.219</td> <td>    0.283</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td>    0.0405</td> <td>    0.017</td> <td>    2.332</td> <td> 0.020</td> <td>    0.006</td> <td>    0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td>    0.3634</td> <td>    0.030</td> <td>   12.002</td> <td> 0.000</td> <td>    0.304</td> <td>    0.423</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td>    0.0974</td> <td>    0.018</td> <td>    5.515</td> <td> 0.000</td> <td>    0.063</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td>    0.0533</td> <td>    0.018</td> <td>    2.917</td> <td> 0.004</td> <td>    0.017</td> <td>    0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>    0.0237</td> <td>    0.014</td> <td>    1.707</td> <td> 0.088</td> <td>   -0.004</td> <td>    0.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td>    0.7067</td> <td>    0.025</td> <td>   28.442</td> <td> 0.000</td> <td>    0.658</td> <td>    0.755</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>    0.0197</td> <td>    0.007</td> <td>    2.909</td> <td> 0.004</td> <td>    0.006</td> <td>    0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td>    0.0444</td> <td>    0.006</td> <td>    7.151</td> <td> 0.000</td> <td>    0.032</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td>    0.0641</td> <td>    0.006</td> <td>   10.581</td> <td> 0.000</td> <td>    0.052</td> <td>    0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td>    0.0074</td> <td>    0.006</td> <td>    1.232</td> <td> 0.218</td> <td>   -0.004</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>    0.0016</td> <td>    0.006</td> <td>    0.264</td> <td> 0.792</td> <td>   -0.010</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>   -0.0026</td> <td>    0.006</td> <td>   -0.433</td> <td> 0.665</td> <td>   -0.014</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>   -0.0062</td> <td>    0.006</td> <td>   -1.003</td> <td> 0.316</td> <td>   -0.018</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>   -0.0108</td> <td>    0.006</td> <td>   -1.719</td> <td> 0.086</td> <td>   -0.023</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>   -0.0156</td> <td>    0.006</td> <td>   -2.513</td> <td> 0.012</td> <td>   -0.028</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>   -0.0159</td> <td>    0.007</td> <td>   -2.428</td> <td> 0.015</td> <td>   -0.029</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>   -0.0043</td> <td>    0.007</td> <td>   -0.656</td> <td> 0.512</td> <td>   -0.017</td> <td>    0.008</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>41.487</td> <th>  Durbin-Watson:     </th> <td>   2.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  41.776</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.125</td> <th>  Prob(JB):          </th> <td>8.48e-10</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 2.995</td> <th>  Cond. No.          </th> <td>7.47e+18</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 7.96e-29. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.924\n",
       "Model:                            OLS   Adj. R-squared:                  0.924\n",
       "Method:                 Least Squares   F-statistic:                     1727.\n",
       "Date:                Tue, 26 Oct 2021   Prob (F-statistic):               0.00\n",
       "Time:                        17:37:08   Log-Likelihood:                 9434.2\n",
       "No. Observations:               16083   AIC:                        -1.864e+04\n",
       "Df Residuals:                   15969   BIC:                        -1.776e+04\n",
       "Df Model:                         113                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -102.1610     11.446     -8.925      0.000    -124.597     -79.725\n",
       "bedrooms            -0.0372      0.005     -6.840      0.000      -0.048      -0.027\n",
       "bathrooms            0.0535      0.005     10.761      0.000       0.044       0.063\n",
       "sqft_living          0.2626      0.016     16.277      0.000       0.231       0.294\n",
       "sqft_lot             0.0681      0.003     20.276      0.000       0.062       0.075\n",
       "sqft_above           0.1677      0.014     11.607      0.000       0.139       0.196\n",
       "sqft_basement     1.462e-05   7.73e-06      1.893      0.058    -5.2e-07    2.98e-05\n",
       "lat                 22.2268      2.985      7.445      0.000      16.375      28.078\n",
       "long                -0.2791      0.052     -5.333      0.000      -0.382      -0.177\n",
       "sqft_living15        0.1509      0.006     25.063      0.000       0.139       0.163\n",
       "sqft_lot15          -0.0187      0.004     -5.076      0.000      -0.026      -0.011\n",
       "floors_1.5           0.0053      0.004      1.205      0.228      -0.003       0.014\n",
       "floors_2.0          -0.0099      0.004     -2.636      0.008      -0.017      -0.003\n",
       "floors_2.5          -0.0137      0.015     -0.926      0.354      -0.043       0.015\n",
       "floors_3.0          -0.0935      0.008    -11.648      0.000      -0.109      -0.078\n",
       "floors_3.5        7.053e-12   7.93e-13      8.898      0.000     5.5e-12    8.61e-12\n",
       "waterfront_1         0.5042      0.019     25.936      0.000       0.466       0.542\n",
       "view_1               0.1059      0.010     11.054      0.000       0.087       0.125\n",
       "view_2               0.0981      0.006     17.413      0.000       0.087       0.109\n",
       "view_3               0.1676      0.008     20.720      0.000       0.152       0.183\n",
       "view_4               0.2688      0.012     21.585      0.000       0.244       0.293\n",
       "condition_2          0.2307      0.097      2.374      0.018       0.040       0.421\n",
       "condition_3          0.3680      0.096      3.835      0.000       0.180       0.556\n",
       "condition_4          0.4014      0.096      4.182      0.000       0.213       0.590\n",
       "condition_5          0.4738      0.096      4.934      0.000       0.286       0.662\n",
       "grade_4            -10.5820      1.146     -9.236      0.000     -12.828      -8.336\n",
       "grade_5            -10.5430      1.145     -9.211      0.000     -12.787      -8.300\n",
       "grade_6            -10.4656      1.145     -9.143      0.000     -12.709      -8.222\n",
       "grade_7            -10.4022      1.145     -9.087      0.000     -12.646      -8.158\n",
       "grade_8            -10.3278      1.145     -9.022      0.000     -12.572      -8.084\n",
       "grade_9            -10.2095      1.145     -8.918      0.000     -12.453      -7.966\n",
       "grade_10           -10.1292      1.145     -8.849      0.000     -12.373      -7.885\n",
       "grade_11           -10.0174      1.145     -8.749      0.000     -12.262      -7.773\n",
       "grade_12            -9.8803      1.145     -8.629      0.000     -12.125      -7.636\n",
       "grade_13            -9.6040      1.146     -8.381      0.000     -11.850      -7.358\n",
       "if_renovated_1       0.0810      0.006     12.773      0.000       0.069       0.093\n",
       "zipcode_98002        0.0288      0.014      1.997      0.046       0.001       0.057\n",
       "zipcode_98003        0.0224      0.013      1.760      0.078      -0.003       0.047\n",
       "zipcode_98004        1.0104      0.023     43.194      0.000       0.965       1.056\n",
       "zipcode_98005        0.6424      0.025     25.488      0.000       0.593       0.692\n",
       "zipcode_98006        0.5675      0.021     27.295      0.000       0.527       0.608\n",
       "zipcode_98007        0.5725      0.026     22.141      0.000       0.522       0.623\n",
       "zipcode_98008        0.5661      0.025     22.856      0.000       0.518       0.615\n",
       "zipcode_98010        0.2448      0.024     10.321      0.000       0.198       0.291\n",
       "zipcode_98011        0.2763      0.032      8.699      0.000       0.214       0.339\n",
       "zipcode_98014        0.2507      0.036      6.886      0.000       0.179       0.322\n",
       "zipcode_98019        0.2082      0.036      5.827      0.000       0.138       0.278\n",
       "zipcode_98022        0.1645      0.020      8.228      0.000       0.125       0.204\n",
       "zipcode_98023       -0.0372      0.012     -3.144      0.002      -0.060      -0.014\n",
       "zipcode_98024        0.4002      0.033     12.117      0.000       0.335       0.465\n",
       "zipcode_98027        0.4928      0.022     22.483      0.000       0.450       0.536\n",
       "zipcode_98028        0.2253      0.031      7.333      0.000       0.165       0.286\n",
       "zipcode_98029        0.5681      0.025     22.583      0.000       0.519       0.617\n",
       "zipcode_98030        0.0595      0.014      4.220      0.000       0.032       0.087\n",
       "zipcode_98031        0.0592      0.015      4.055      0.000       0.031       0.088\n",
       "zipcode_98032       -0.0128      0.017     -0.742      0.458      -0.047       0.021\n",
       "zipcode_98033        0.6339      0.027     23.748      0.000       0.582       0.686\n",
       "zipcode_98034        0.3743      0.028     13.153      0.000       0.319       0.430\n",
       "zipcode_98038        0.2029      0.017     11.909      0.000       0.170       0.236\n",
       "zipcode_98039        1.1754      0.033     35.747      0.000       1.111       1.240\n",
       "zipcode_98040        0.7972      0.021     38.470      0.000       0.757       0.838\n",
       "zipcode_98042        0.0782      0.014      5.564      0.000       0.051       0.106\n",
       "zipcode_98045        0.4066      0.032     12.604      0.000       0.343       0.470\n",
       "zipcode_98052        0.5139      0.027     18.717      0.000       0.460       0.568\n",
       "zipcode_98053        0.4931      0.030     16.461      0.000       0.434       0.552\n",
       "zipcode_98055        0.1108      0.016      6.757      0.000       0.079       0.143\n",
       "zipcode_98056        0.2578      0.018     14.323      0.000       0.223       0.293\n",
       "zipcode_98058        0.1380      0.016      8.698      0.000       0.107       0.169\n",
       "zipcode_98059        0.2952      0.018     16.555      0.000       0.260       0.330\n",
       "zipcode_98065        0.4180      0.029     14.271      0.000       0.361       0.475\n",
       "zipcode_98070        0.2152      0.023      9.447      0.000       0.171       0.260\n",
       "zipcode_98072        0.3093      0.032      9.700      0.000       0.247       0.372\n",
       "zipcode_98074        0.4771      0.027     17.957      0.000       0.425       0.529\n",
       "zipcode_98075        0.4896      0.026     19.093      0.000       0.439       0.540\n",
       "zipcode_98077        0.2918      0.033      8.719      0.000       0.226       0.357\n",
       "zipcode_98092        0.0403      0.013      3.101      0.002       0.015       0.066\n",
       "zipcode_98102        0.8510      0.028     30.606      0.000       0.797       0.906\n",
       "zipcode_98103        0.6995      0.025     27.566      0.000       0.650       0.749\n",
       "zipcode_98105        0.8168      0.026     31.452      0.000       0.766       0.868\n",
       "zipcode_98106        0.2858      0.019     15.058      0.000       0.249       0.323\n",
       "zipcode_98107        0.7070      0.026     27.061      0.000       0.656       0.758\n",
       "zipcode_98108        0.2975      0.021     14.354      0.000       0.257       0.338\n",
       "zipcode_98109        0.8917      0.027     32.533      0.000       0.838       0.945\n",
       "zipcode_98112        0.9580      0.024     40.088      0.000       0.911       1.005\n",
       "zipcode_98115        0.6833      0.026     26.448      0.000       0.633       0.734\n",
       "zipcode_98116        0.6714      0.021     31.911      0.000       0.630       0.713\n",
       "zipcode_98117        0.6645      0.026     25.427      0.000       0.613       0.716\n",
       "zipcode_98118        0.3962      0.019     21.305      0.000       0.360       0.433\n",
       "zipcode_98119        0.8615      0.026     33.653      0.000       0.811       0.912\n",
       "zipcode_98122        0.7005      0.023     30.738      0.000       0.656       0.745\n",
       "zipcode_98125        0.4009      0.028     14.360      0.000       0.346       0.456\n",
       "zipcode_98126        0.4649      0.019     23.898      0.000       0.427       0.503\n",
       "zipcode_98133        0.2780      0.029      9.652      0.000       0.222       0.334\n",
       "zipcode_98136        0.6057      0.020     30.417      0.000       0.567       0.645\n",
       "zipcode_98144        0.5803      0.021     27.361      0.000       0.539       0.622\n",
       "zipcode_98146        0.2004      0.018     10.978      0.000       0.165       0.236\n",
       "zipcode_98148        0.1296      0.027      4.809      0.000       0.077       0.182\n",
       "zipcode_98155        0.2396      0.030      7.988      0.000       0.181       0.298\n",
       "zipcode_98166        0.2513      0.016     15.481      0.000       0.219       0.283\n",
       "zipcode_98168        0.0405      0.017      2.332      0.020       0.006       0.074\n",
       "zipcode_98177        0.3634      0.030     12.002      0.000       0.304       0.423\n",
       "zipcode_98178        0.0974      0.018      5.515      0.000       0.063       0.132\n",
       "zipcode_98188        0.0533      0.018      2.917      0.004       0.017       0.089\n",
       "zipcode_98198        0.0237      0.014      1.707      0.088      -0.004       0.051\n",
       "zipcode_98199        0.7067      0.025     28.442      0.000       0.658       0.755\n",
       "month_of_date_2      0.0197      0.007      2.909      0.004       0.006       0.033\n",
       "month_of_date_3      0.0444      0.006      7.151      0.000       0.032       0.057\n",
       "month_of_date_4      0.0641      0.006     10.581      0.000       0.052       0.076\n",
       "month_of_date_5      0.0074      0.006      1.232      0.218      -0.004       0.019\n",
       "month_of_date_6      0.0016      0.006      0.264      0.792      -0.010       0.014\n",
       "month_of_date_7     -0.0026      0.006     -0.433      0.665      -0.014       0.009\n",
       "month_of_date_8     -0.0062      0.006     -1.003      0.316      -0.018       0.006\n",
       "month_of_date_9     -0.0108      0.006     -1.719      0.086      -0.023       0.002\n",
       "month_of_date_10    -0.0156      0.006     -2.513      0.012      -0.028      -0.003\n",
       "month_of_date_11    -0.0159      0.007     -2.428      0.015      -0.029      -0.003\n",
       "month_of_date_12    -0.0043      0.007     -0.656      0.512      -0.017       0.008\n",
       "==============================================================================\n",
       "Omnibus:                       41.487   Durbin-Watson:                   2.005\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               41.776\n",
       "Skew:                          -0.125   Prob(JB):                     8.48e-10\n",
       "Kurtosis:                       2.995   Cond. No.                     7.47e+18\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 7.96e-29. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1_ln_adj_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "92f3c11e",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "41.775593568024824\n",
      "\n",
      " Prob ----\n",
      "8.482915044049456e-10\n",
      "\n",
      " Skew ----\n",
      "-0.12481393553966984\n",
      "\n",
      " Kurtosis ----\n",
      "2.9949080873764244\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/envs/firstEnv/lib/python3.9/site-packages/statsmodels/graphics/gofplots.py:993: UserWarning: marker is redundantly defined by the 'marker' keyword argument and the fmt string \"bo\" (-> marker='o'). The keyword argument will take precedence.\n",
      "  ax.plot(x, y, fmt, **plot_style)\n",
      "/var/folders/dp/5k1wgpbj6d72lnbdgvwv16l40000gn/T/ipykernel_50673/3602366465.py:13: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model1_ln_adj_ols);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "255faaaa",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.331805e+03\n",
      "p-value                        4.310745e-206\n",
      "f-value                         1.275888e+01\n",
      "f p-value                      8.588103e-218\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  1.001869\n",
      "p-value      0.466874\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model1_ln_adj_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "220bb557",
   "metadata": {
    "hidden": true
   },
   "source": [
    "### Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "9825553e",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Model 1: Untransformed Price, With Outliers ----\n",
      "The R-squared value for the train set was 0.836, and the R-squared value for the test set was 0.806. These values resulted in a differential of 0.03061. The RMSE of our model predicitons was 159551.53\n",
      "\n",
      " Model 1: Untransformed Price, Without Outliers ----\n",
      "The R-squared value for the train set was 0.908, and the R-squared value for the test set was 0.799. These values resulted in a differential of 0.10861. The RMSE of our model predicitons was 162272.67\n",
      "\n",
      " Model 1: Log-Transformed Price, With Outliers ----\n",
      "The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00697. The RMSE of our model predicitons was 122550.02\n",
      "\n",
      " Model 1: Log-Transformed Price, Without Outliers ----\n",
      "The R-squared value for the train set was 0.924, and the R-squared value for the test set was 0.881. These values resulted in a differential of 0.04295. The RMSE of our model predicitons was 122796.62\n"
     ]
    }
   ],
   "source": [
    "print('\\n Model 1: Untransformed Price, With Outliers ----')\n",
    "print(model1_summary)\n",
    "print('\\n Model 1: Untransformed Price, Without Outliers ----')\n",
    "print(model1_adj_summary)\n",
    "print('\\n Model 1: Log-Transformed Price, With Outliers ----')\n",
    "print(model1_ln_summary)\n",
    "print('\\n Model 1: Log-Transformed Price, Without Outliers ----')\n",
    "print(model1_ln_adj_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67b7af3b",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We see from the various Model 1 analyses, the log-transformed price data had a higher R-squared value and lower RMSE than those of the non-transformed price data. In addition, after we removed the outliers from the train data, we noticed a higher train R-squared value, but a lower test R-Squared value and higher RMSE.\n",
    "\n",
    "Therefore, we see that log-transformed price data with outliers is the best Model 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "d76c31db",
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "best_model1_summary = model1_ln_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bcb57e72",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Model 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "52def016",
   "metadata": {
    "hidden": true
   },
   "source": [
    "In Model 2 we drop features that had a relatively high p-value (alpha = 0.05) from Model 1 ln price OLS with outliers removed to look for improvement in model fit."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f17a13d2",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 2: Filtering by p-value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "19e8e7f2",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create a dataframe for the parameters and pvalues\n",
    "results = pd.DataFrame(model1_ln_ols.pvalues)\n",
    "results.reset_index(inplace=True)\n",
    "\n",
    "#rename the columns\n",
    "results.rename(columns={'index': 'parameter', 0: 'pvalue'}, inplace=True)\n",
    "\n",
    "#create a list of parameters that have a pvalue < 0.05\n",
    "feat = results[results['pvalue'] < 0.05]\n",
    "features = list(feat['parameter'])\n",
    "\n",
    "#the intercept constant is not needed \n",
    "features.remove('const')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "acef1904",
   "metadata": {
    "hidden": true
   },
   "source": [
    "### Model 2: Fitting and Validation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fb48c8a",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We fit the data by running only the features selected above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "f7d93819",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output_ln, 'ln_price')\n",
    "\n",
    "#create linear regression model for price and setting up cross validation (x3)\n",
    "model2 = LinearRegression()\n",
    "model2.fit(X_train[features], y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "56937f0c",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.879, the median R-squared values for the test sets were 0.878. These values resulted in a differential of 0.00105'"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation\n",
    "model2_cval = cross_val(model2,\n",
    "                        X=X_train[features],\n",
    "                        y=y_train,\n",
    "                        random_state=0)\n",
    "\n",
    "model2_cval_summary = cval_summary(model2_cval[0],\n",
    "                                   model2_cval[1],\n",
    "                                   abs(model2_cval[0]-model2_cval[1]))\n",
    "model2_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "6c65bdc2",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.879, and the R-squared value for the test set was 0.869. These values resulted in a differential of 0.00991. The RMSE of our model predicitons was 140511.22'"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model2_scores = score_model(model2,\n",
    "                             X_train[features],\n",
    "                             X_test[features],\n",
    "                             y_train,\n",
    "                             y_test,\n",
    "                             log=True)\n",
    "\n",
    "model2_summary = model_summary(model2_scores[0],\n",
    "                               model2_scores[1],\n",
    "                               abs(model2_scores[0]-model2_scores[1]),\n",
    "                               model2_scores[2])\n",
    "model2_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "49e033be",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model2, X_test[features], y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6587edb8",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 2: OLS and Assumption Tests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "381d71b4",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train[features])\n",
    "\n",
    "#find OLS for train data set\n",
    "model2_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "b0b8c011",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th> <td>   0.879</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1368.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 16 Jul 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:17:00</td>     <th>  Log-Likelihood:    </th> <td>  4758.8</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>  -9334.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17184</td>      <th>  BIC:               </th> <td>  -8620.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    91</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>           <td> -150.4993</td> <td>   11.362</td> <td>  -13.245</td> <td> 0.000</td> <td> -172.771</td> <td> -128.228</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>        <td>   -0.0819</td> <td>    0.007</td> <td>  -11.947</td> <td> 0.000</td> <td>   -0.095</td> <td>   -0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>       <td>    0.0588</td> <td>    0.006</td> <td>    9.496</td> <td> 0.000</td> <td>    0.047</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>     <td>    0.3321</td> <td>    0.009</td> <td>   35.773</td> <td> 0.000</td> <td>    0.314</td> <td>    0.350</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>        <td>    0.0774</td> <td>    0.004</td> <td>   19.079</td> <td> 0.000</td> <td>    0.069</td> <td>    0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>      <td>    0.1977</td> <td>    0.007</td> <td>   26.619</td> <td> 0.000</td> <td>    0.183</td> <td>    0.212</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>             <td>   27.9835</td> <td>    2.664</td> <td>   10.504</td> <td> 0.000</td> <td>   22.762</td> <td>   33.205</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>            <td>   -0.3995</td> <td>    0.055</td> <td>   -7.263</td> <td> 0.000</td> <td>   -0.507</td> <td>   -0.292</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>   <td>    0.1953</td> <td>    0.008</td> <td>   25.603</td> <td> 0.000</td> <td>    0.180</td> <td>    0.210</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>      <td>   -0.0154</td> <td>    0.005</td> <td>   -3.380</td> <td> 0.001</td> <td>   -0.024</td> <td>   -0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>      <td>   -0.0648</td> <td>    0.010</td> <td>   -6.806</td> <td> 0.000</td> <td>   -0.083</td> <td>   -0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>    <td>    0.4545</td> <td>    0.021</td> <td>   21.631</td> <td> 0.000</td> <td>    0.413</td> <td>    0.496</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>          <td>    0.1290</td> <td>    0.012</td> <td>   10.873</td> <td> 0.000</td> <td>    0.106</td> <td>    0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>          <td>    0.1154</td> <td>    0.007</td> <td>   16.023</td> <td> 0.000</td> <td>    0.101</td> <td>    0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>          <td>    0.2038</td> <td>    0.010</td> <td>   20.820</td> <td> 0.000</td> <td>    0.185</td> <td>    0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>          <td>    0.3401</td> <td>    0.014</td> <td>   23.671</td> <td> 0.000</td> <td>    0.312</td> <td>    0.368</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>     <td>    0.2099</td> <td>    0.044</td> <td>    4.740</td> <td> 0.000</td> <td>    0.123</td> <td>    0.297</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>     <td>    0.3344</td> <td>    0.042</td> <td>    8.011</td> <td> 0.000</td> <td>    0.253</td> <td>    0.416</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>     <td>    0.3669</td> <td>    0.042</td> <td>    8.783</td> <td> 0.000</td> <td>    0.285</td> <td>    0.449</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>     <td>    0.4366</td> <td>    0.042</td> <td>   10.401</td> <td> 0.000</td> <td>    0.354</td> <td>    0.519</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>         <td>   -0.2092</td> <td>    0.043</td> <td>   -4.860</td> <td> 0.000</td> <td>   -0.294</td> <td>   -0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>         <td>   -0.1552</td> <td>    0.015</td> <td>  -10.671</td> <td> 0.000</td> <td>   -0.184</td> <td>   -0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>         <td>   -0.1167</td> <td>    0.007</td> <td>  -17.209</td> <td> 0.000</td> <td>   -0.130</td> <td>   -0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>         <td>   -0.0805</td> <td>    0.004</td> <td>  -20.190</td> <td> 0.000</td> <td>   -0.088</td> <td>   -0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>        <td>    0.5148</td> <td>    0.056</td> <td>    9.132</td> <td> 0.000</td> <td>    0.404</td> <td>    0.625</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>  <td>    0.0573</td> <td>    0.008</td> <td>    7.241</td> <td> 0.000</td> <td>    0.042</td> <td>    0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>   <td>    0.9985</td> <td>    0.020</td> <td>   49.653</td> <td> 0.000</td> <td>    0.959</td> <td>    1.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>   <td>    0.6144</td> <td>    0.023</td> <td>   26.224</td> <td> 0.000</td> <td>    0.569</td> <td>    0.660</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>   <td>    0.5771</td> <td>    0.018</td> <td>   32.002</td> <td> 0.000</td> <td>    0.542</td> <td>    0.612</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>   <td>    0.5456</td> <td>    0.025</td> <td>   21.914</td> <td> 0.000</td> <td>    0.497</td> <td>    0.594</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>   <td>    0.5433</td> <td>    0.022</td> <td>   24.368</td> <td> 0.000</td> <td>    0.500</td> <td>    0.587</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>   <td>    0.3053</td> <td>    0.026</td> <td>   11.713</td> <td> 0.000</td> <td>    0.254</td> <td>    0.356</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>   <td>    0.1997</td> <td>    0.028</td> <td>    7.163</td> <td> 0.000</td> <td>    0.145</td> <td>    0.254</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>   <td>    0.2196</td> <td>    0.037</td> <td>    5.984</td> <td> 0.000</td> <td>    0.148</td> <td>    0.292</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>   <td>    0.1441</td> <td>    0.034</td> <td>    4.281</td> <td> 0.000</td> <td>    0.078</td> <td>    0.210</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>   <td>    0.1909</td> <td>    0.022</td> <td>    8.501</td> <td> 0.000</td> <td>    0.147</td> <td>    0.235</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>   <td>   -0.0549</td> <td>    0.012</td> <td>   -4.543</td> <td> 0.000</td> <td>   -0.079</td> <td>   -0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>   <td>    0.4106</td> <td>    0.034</td> <td>   12.222</td> <td> 0.000</td> <td>    0.345</td> <td>    0.476</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>   <td>    0.4788</td> <td>    0.021</td> <td>   23.328</td> <td> 0.000</td> <td>    0.439</td> <td>    0.519</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>   <td>    0.1422</td> <td>    0.026</td> <td>    5.501</td> <td> 0.000</td> <td>    0.092</td> <td>    0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>   <td>    0.5741</td> <td>    0.024</td> <td>   23.820</td> <td> 0.000</td> <td>    0.527</td> <td>    0.621</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>   <td>    0.0341</td> <td>    0.015</td> <td>    2.259</td> <td> 0.024</td> <td>    0.005</td> <td>    0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>   <td>    0.0418</td> <td>    0.015</td> <td>    2.825</td> <td> 0.005</td> <td>    0.013</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>   <td>   -0.0501</td> <td>    0.019</td> <td>   -2.618</td> <td> 0.009</td> <td>   -0.088</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>   <td>    0.6272</td> <td>    0.022</td> <td>   28.117</td> <td> 0.000</td> <td>    0.583</td> <td>    0.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>   <td>    0.3424</td> <td>    0.023</td> <td>   14.714</td> <td> 0.000</td> <td>    0.297</td> <td>    0.388</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>   <td>    0.1963</td> <td>    0.017</td> <td>   11.295</td> <td> 0.000</td> <td>    0.162</td> <td>    0.230</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>   <td>    1.1875</td> <td>    0.033</td> <td>   35.965</td> <td> 0.000</td> <td>    1.123</td> <td>    1.252</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>   <td>    0.7942</td> <td>    0.018</td> <td>   43.544</td> <td> 0.000</td> <td>    0.758</td> <td>    0.830</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>   <td>    0.0767</td> <td>    0.014</td> <td>    5.492</td> <td> 0.000</td> <td>    0.049</td> <td>    0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>   <td>    0.4164</td> <td>    0.034</td> <td>   12.416</td> <td> 0.000</td> <td>    0.351</td> <td>    0.482</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>   <td>    0.4822</td> <td>    0.023</td> <td>   20.568</td> <td> 0.000</td> <td>    0.436</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>   <td>    0.4526</td> <td>    0.027</td> <td>   16.672</td> <td> 0.000</td> <td>    0.399</td> <td>    0.506</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>   <td>    0.0846</td> <td>    0.015</td> <td>    5.506</td> <td> 0.000</td> <td>    0.054</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>   <td>    0.2434</td> <td>    0.016</td> <td>   15.532</td> <td> 0.000</td> <td>    0.213</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>   <td>    0.1203</td> <td>    0.015</td> <td>    8.215</td> <td> 0.000</td> <td>    0.092</td> <td>    0.149</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>   <td>    0.2755</td> <td>    0.016</td> <td>   17.150</td> <td> 0.000</td> <td>    0.244</td> <td>    0.307</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>   <td>    0.4068</td> <td>    0.030</td> <td>   13.784</td> <td> 0.000</td> <td>    0.349</td> <td>    0.465</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>   <td>    0.1248</td> <td>    0.023</td> <td>    5.414</td> <td> 0.000</td> <td>    0.080</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>   <td>    0.2554</td> <td>    0.028</td> <td>    9.179</td> <td> 0.000</td> <td>    0.201</td> <td>    0.310</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>   <td>    0.4768</td> <td>    0.024</td> <td>   19.813</td> <td> 0.000</td> <td>    0.430</td> <td>    0.524</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>   <td>    0.5138</td> <td>    0.024</td> <td>   21.435</td> <td> 0.000</td> <td>    0.467</td> <td>    0.561</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>   <td>    0.2791</td> <td>    0.031</td> <td>    9.135</td> <td> 0.000</td> <td>    0.219</td> <td>    0.339</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>   <td>    0.0416</td> <td>    0.014</td> <td>    2.912</td> <td> 0.004</td> <td>    0.014</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>   <td>    0.8430</td> <td>    0.026</td> <td>   32.651</td> <td> 0.000</td> <td>    0.792</td> <td>    0.894</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>   <td>    0.6547</td> <td>    0.020</td> <td>   32.978</td> <td> 0.000</td> <td>    0.616</td> <td>    0.694</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>   <td>    0.7931</td> <td>    0.022</td> <td>   35.856</td> <td> 0.000</td> <td>    0.750</td> <td>    0.837</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>   <td>    0.2497</td> <td>    0.016</td> <td>   15.872</td> <td> 0.000</td> <td>    0.219</td> <td>    0.281</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>   <td>    0.6732</td> <td>    0.022</td> <td>   30.876</td> <td> 0.000</td> <td>    0.630</td> <td>    0.716</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>   <td>    0.2521</td> <td>    0.019</td> <td>   13.603</td> <td> 0.000</td> <td>    0.216</td> <td>    0.288</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>   <td>    0.8757</td> <td>    0.025</td> <td>   34.354</td> <td> 0.000</td> <td>    0.826</td> <td>    0.926</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>   <td>    0.9508</td> <td>    0.020</td> <td>   47.605</td> <td> 0.000</td> <td>    0.912</td> <td>    0.990</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>   <td>    0.6394</td> <td>    0.020</td> <td>   31.397</td> <td> 0.000</td> <td>    0.599</td> <td>    0.679</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>   <td>    0.6235</td> <td>    0.017</td> <td>   35.653</td> <td> 0.000</td> <td>    0.589</td> <td>    0.658</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>   <td>    0.6176</td> <td>    0.021</td> <td>   30.111</td> <td> 0.000</td> <td>    0.577</td> <td>    0.658</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>   <td>    0.3686</td> <td>    0.015</td> <td>   25.192</td> <td> 0.000</td> <td>    0.340</td> <td>    0.397</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>   <td>    0.8320</td> <td>    0.022</td> <td>   37.377</td> <td> 0.000</td> <td>    0.788</td> <td>    0.876</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>   <td>    0.6955</td> <td>    0.019</td> <td>   36.636</td> <td> 0.000</td> <td>    0.658</td> <td>    0.733</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>   <td>    0.3476</td> <td>    0.022</td> <td>   15.475</td> <td> 0.000</td> <td>    0.304</td> <td>    0.392</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>   <td>    0.4264</td> <td>    0.016</td> <td>   26.491</td> <td> 0.000</td> <td>    0.395</td> <td>    0.458</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>   <td>    0.2167</td> <td>    0.023</td> <td>    9.470</td> <td> 0.000</td> <td>    0.172</td> <td>    0.262</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>   <td>    0.5597</td> <td>    0.017</td> <td>   32.350</td> <td> 0.000</td> <td>    0.526</td> <td>    0.594</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>   <td>    0.5631</td> <td>    0.017</td> <td>   32.216</td> <td> 0.000</td> <td>    0.529</td> <td>    0.597</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>   <td>    0.1594</td> <td>    0.015</td> <td>   10.295</td> <td> 0.000</td> <td>    0.129</td> <td>    0.190</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>   <td>    0.0744</td> <td>    0.027</td> <td>    2.730</td> <td> 0.006</td> <td>    0.021</td> <td>    0.128</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>   <td>    0.1723</td> <td>    0.024</td> <td>    7.139</td> <td> 0.000</td> <td>    0.125</td> <td>    0.220</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>   <td>    0.1961</td> <td>    0.015</td> <td>   13.135</td> <td> 0.000</td> <td>    0.167</td> <td>    0.225</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>   <td>    0.3103</td> <td>    0.025</td> <td>   12.378</td> <td> 0.000</td> <td>    0.261</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>   <td>    0.0661</td> <td>    0.016</td> <td>    4.201</td> <td> 0.000</td> <td>    0.035</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>   <td>    0.6746</td> <td>    0.020</td> <td>   33.071</td> <td> 0.000</td> <td>    0.635</td> <td>    0.715</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th> <td>    0.0472</td> <td>    0.005</td> <td>    9.455</td> <td> 0.000</td> <td>    0.037</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th> <td>    0.0689</td> <td>    0.005</td> <td>   14.808</td> <td> 0.000</td> <td>    0.060</td> <td>    0.078</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>997.348</td> <th>  Durbin-Watson:     </th> <td>   2.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>4058.587</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.113</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 5.364</td>  <th>  Cond. No.          </th> <td>1.02e+06</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.02e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.879\n",
       "Model:                            OLS   Adj. R-squared:                  0.878\n",
       "Method:                 Least Squares   F-statistic:                     1368.\n",
       "Date:                Fri, 16 Jul 2021   Prob (F-statistic):               0.00\n",
       "Time:                        15:17:00   Log-Likelihood:                 4758.8\n",
       "No. Observations:               17276   AIC:                            -9334.\n",
       "Df Residuals:                   17184   BIC:                            -8620.\n",
       "Df Model:                          91                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===================================================================================\n",
       "                      coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-----------------------------------------------------------------------------------\n",
       "const            -150.4993     11.362    -13.245      0.000    -172.771    -128.228\n",
       "bedrooms           -0.0819      0.007    -11.947      0.000      -0.095      -0.068\n",
       "bathrooms           0.0588      0.006      9.496      0.000       0.047       0.071\n",
       "sqft_living         0.3321      0.009     35.773      0.000       0.314       0.350\n",
       "sqft_lot            0.0774      0.004     19.079      0.000       0.069       0.085\n",
       "sqft_above          0.1977      0.007     26.619      0.000       0.183       0.212\n",
       "lat                27.9835      2.664     10.504      0.000      22.762      33.205\n",
       "long               -0.3995      0.055     -7.263      0.000      -0.507      -0.292\n",
       "sqft_living15       0.1953      0.008     25.603      0.000       0.180       0.210\n",
       "sqft_lot15         -0.0154      0.005     -3.380      0.001      -0.024      -0.006\n",
       "floors_3.0         -0.0648      0.010     -6.806      0.000      -0.083      -0.046\n",
       "waterfront_1        0.4545      0.021     21.631      0.000       0.413       0.496\n",
       "view_1              0.1290      0.012     10.873      0.000       0.106       0.152\n",
       "view_2              0.1154      0.007     16.023      0.000       0.101       0.129\n",
       "view_3              0.2038      0.010     20.820      0.000       0.185       0.223\n",
       "view_4              0.3401      0.014     23.671      0.000       0.312       0.368\n",
       "condition_2         0.2099      0.044      4.740      0.000       0.123       0.297\n",
       "condition_3         0.3344      0.042      8.011      0.000       0.253       0.416\n",
       "condition_4         0.3669      0.042      8.783      0.000       0.285       0.449\n",
       "condition_5         0.4366      0.042     10.401      0.000       0.354       0.519\n",
       "grade_4            -0.2092      0.043     -4.860      0.000      -0.294      -0.125\n",
       "grade_5            -0.1552      0.015    -10.671      0.000      -0.184      -0.127\n",
       "grade_6            -0.1167      0.007    -17.209      0.000      -0.130      -0.103\n",
       "grade_7            -0.0805      0.004    -20.190      0.000      -0.088      -0.073\n",
       "grade_13            0.5148      0.056      9.132      0.000       0.404       0.625\n",
       "if_renovated_1      0.0573      0.008      7.241      0.000       0.042       0.073\n",
       "zipcode_98004       0.9985      0.020     49.653      0.000       0.959       1.038\n",
       "zipcode_98005       0.6144      0.023     26.224      0.000       0.569       0.660\n",
       "zipcode_98006       0.5771      0.018     32.002      0.000       0.542       0.612\n",
       "zipcode_98007       0.5456      0.025     21.914      0.000       0.497       0.594\n",
       "zipcode_98008       0.5433      0.022     24.368      0.000       0.500       0.587\n",
       "zipcode_98010       0.3053      0.026     11.713      0.000       0.254       0.356\n",
       "zipcode_98011       0.1997      0.028      7.163      0.000       0.145       0.254\n",
       "zipcode_98014       0.2196      0.037      5.984      0.000       0.148       0.292\n",
       "zipcode_98019       0.1441      0.034      4.281      0.000       0.078       0.210\n",
       "zipcode_98022       0.1909      0.022      8.501      0.000       0.147       0.235\n",
       "zipcode_98023      -0.0549      0.012     -4.543      0.000      -0.079      -0.031\n",
       "zipcode_98024       0.4106      0.034     12.222      0.000       0.345       0.476\n",
       "zipcode_98027       0.4788      0.021     23.328      0.000       0.439       0.519\n",
       "zipcode_98028       0.1422      0.026      5.501      0.000       0.092       0.193\n",
       "zipcode_98029       0.5741      0.024     23.820      0.000       0.527       0.621\n",
       "zipcode_98030       0.0341      0.015      2.259      0.024       0.005       0.064\n",
       "zipcode_98031       0.0418      0.015      2.825      0.005       0.013       0.071\n",
       "zipcode_98032      -0.0501      0.019     -2.618      0.009      -0.088      -0.013\n",
       "zipcode_98033       0.6272      0.022     28.117      0.000       0.583       0.671\n",
       "zipcode_98034       0.3424      0.023     14.714      0.000       0.297       0.388\n",
       "zipcode_98038       0.1963      0.017     11.295      0.000       0.162       0.230\n",
       "zipcode_98039       1.1875      0.033     35.965      0.000       1.123       1.252\n",
       "zipcode_98040       0.7942      0.018     43.544      0.000       0.758       0.830\n",
       "zipcode_98042       0.0767      0.014      5.492      0.000       0.049       0.104\n",
       "zipcode_98045       0.4164      0.034     12.416      0.000       0.351       0.482\n",
       "zipcode_98052       0.4822      0.023     20.568      0.000       0.436       0.528\n",
       "zipcode_98053       0.4526      0.027     16.672      0.000       0.399       0.506\n",
       "zipcode_98055       0.0846      0.015      5.506      0.000       0.054       0.115\n",
       "zipcode_98056       0.2434      0.016     15.532      0.000       0.213       0.274\n",
       "zipcode_98058       0.1203      0.015      8.215      0.000       0.092       0.149\n",
       "zipcode_98059       0.2755      0.016     17.150      0.000       0.244       0.307\n",
       "zipcode_98065       0.4068      0.030     13.784      0.000       0.349       0.465\n",
       "zipcode_98070       0.1248      0.023      5.414      0.000       0.080       0.170\n",
       "zipcode_98072       0.2554      0.028      9.179      0.000       0.201       0.310\n",
       "zipcode_98074       0.4768      0.024     19.813      0.000       0.430       0.524\n",
       "zipcode_98075       0.5138      0.024     21.435      0.000       0.467       0.561\n",
       "zipcode_98077       0.2791      0.031      9.135      0.000       0.219       0.339\n",
       "zipcode_98092       0.0416      0.014      2.912      0.004       0.014       0.070\n",
       "zipcode_98102       0.8430      0.026     32.651      0.000       0.792       0.894\n",
       "zipcode_98103       0.6547      0.020     32.978      0.000       0.616       0.694\n",
       "zipcode_98105       0.7931      0.022     35.856      0.000       0.750       0.837\n",
       "zipcode_98106       0.2497      0.016     15.872      0.000       0.219       0.281\n",
       "zipcode_98107       0.6732      0.022     30.876      0.000       0.630       0.716\n",
       "zipcode_98108       0.2521      0.019     13.603      0.000       0.216       0.288\n",
       "zipcode_98109       0.8757      0.025     34.354      0.000       0.826       0.926\n",
       "zipcode_98112       0.9508      0.020     47.605      0.000       0.912       0.990\n",
       "zipcode_98115       0.6394      0.020     31.397      0.000       0.599       0.679\n",
       "zipcode_98116       0.6235      0.017     35.653      0.000       0.589       0.658\n",
       "zipcode_98117       0.6176      0.021     30.111      0.000       0.577       0.658\n",
       "zipcode_98118       0.3686      0.015     25.192      0.000       0.340       0.397\n",
       "zipcode_98119       0.8320      0.022     37.377      0.000       0.788       0.876\n",
       "zipcode_98122       0.6955      0.019     36.636      0.000       0.658       0.733\n",
       "zipcode_98125       0.3476      0.022     15.475      0.000       0.304       0.392\n",
       "zipcode_98126       0.4264      0.016     26.491      0.000       0.395       0.458\n",
       "zipcode_98133       0.2167      0.023      9.470      0.000       0.172       0.262\n",
       "zipcode_98136       0.5597      0.017     32.350      0.000       0.526       0.594\n",
       "zipcode_98144       0.5631      0.017     32.216      0.000       0.529       0.597\n",
       "zipcode_98146       0.1594      0.015     10.295      0.000       0.129       0.190\n",
       "zipcode_98148       0.0744      0.027      2.730      0.006       0.021       0.128\n",
       "zipcode_98155       0.1723      0.024      7.139      0.000       0.125       0.220\n",
       "zipcode_98166       0.1961      0.015     13.135      0.000       0.167       0.225\n",
       "zipcode_98177       0.3103      0.025     12.378      0.000       0.261       0.359\n",
       "zipcode_98178       0.0661      0.016      4.201      0.000       0.035       0.097\n",
       "zipcode_98199       0.6746      0.020     33.071      0.000       0.635       0.715\n",
       "month_of_date_3     0.0472      0.005      9.455      0.000       0.037       0.057\n",
       "month_of_date_4     0.0689      0.005     14.808      0.000       0.060       0.078\n",
       "==============================================================================\n",
       "Omnibus:                      997.348   Durbin-Watson:                   2.027\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             4058.587\n",
       "Skew:                          -0.113   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.364   Cond. No.                     1.02e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 1.02e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model2_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "1e85c4aa",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "4058.5874049444456\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.11298843612359129\n",
      "\n",
      " Kurtosis ----\n",
      "5.363718796904574\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-41-42a69f1a355e>:13: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model2_ols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "098712fe",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.625614e+03\n",
      "p-value                        1.867622e-279\n",
      "f-value                         1.961441e+01\n",
      "f p-value                      2.896442e-295\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.961160\n",
      "p-value      0.966447\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model2_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b00fc62d",
   "metadata": {
    "hidden": true
   },
   "source": [
    "### Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "f45233cc",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Model 2: With Significant Features ----\n",
      "The R-squared value for the train set was 0.879, and the R-squared value for the test set was 0.869. These values resulted in a differential of 0.00991. The RMSE of our model predicitons was 140511.22\n",
      "\n",
      " Model 1: ----\n",
      "The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00697. The RMSE of our model predicitons was 122550.02\n"
     ]
    }
   ],
   "source": [
    "print('\\n Model 2: With Significant Features ----')\n",
    "print(model2_summary)\n",
    "print('\\n Model 1: ----')\n",
    "print(best_model1_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08d30a04",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Our fit on the data has dropped  by removing features containing p-values greater than 0.05. In light of this  decrease in accuracy we will still be relying on our \"best\" model 1."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dad8239c",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Model 3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44888b69",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Model 3 uses the same dataframe structure as Model 1, but introduces recursive feature elimination (RFE) of varying number of features to improve on the model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49be7452",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 3: Recursive Feature Elimination (RFE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "631941b1",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output_ln, 'ln_price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "9ba00649",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "115"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#determine how many features we have\n",
    "len(X_train.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2f8fb9d",
   "metadata": {
    "hidden": true
   },
   "source": [
    "We created a for loop to find the top column names based on varying n for the RFE."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "6c0a714c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#determine n for RFE\n",
    "n = [10, 20, 50, 100]\n",
    "\n",
    "key_cols = {}\n",
    "\n",
    "for x in n:\n",
    "    #instatiate Linear Regression\n",
    "    lr_rfe = LinearRegression()\n",
    "    select = RFE(lr_rfe, n_features_to_select=x)\n",
    "    \n",
    "    #fit model to RFE\n",
    "    select.fit(X=X_train, y=y_train)\n",
    "    \n",
    "    #obtain the indexes where select.support_ is true\n",
    "    true_indexes = [i for i, x in enumerate(select.support_) if x]\n",
    "    \n",
    "    #create a list of all column names matched with index and add to dictionary\n",
    "    key_columns = []\n",
    "    for i in true_indexes:\n",
    "        key_columns.append(X_train.columns[i])\n",
    "    key_cols[\"key_cols_{0}\".format(x)] = key_columns "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6c0218e",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 3: Testing 10 Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "0a71aced",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create linear regression model for price and setting up cross validation (x3)\n",
    "model3_10 = LinearRegression()\n",
    "model3_10.fit(X_train[key_cols['key_cols_10']], y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "12d0e84f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.713, the median R-squared values for the test sets were 0.711. These values resulted in a differential of 0.00136'"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way (x3)\n",
    "model3_10_cval = cross_val(model3_10,\n",
    "                       X=X_train[key_cols['key_cols_10']],\n",
    "                       y=y_train,\n",
    "                       random_state=0,)\n",
    "\n",
    "model3_10_cval_summary = cval_summary(model3_10_cval[0],\n",
    "                                      model3_10_cval[1],\n",
    "                                      abs(model3_10_cval[0]-model3_10_cval[1]))\n",
    "\n",
    "model3_10_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "15bf438e",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.712, and the R-squared value for the test set was 0.708. These values resulted in a differential of 0.00439. The RMSE of our model predicitons was 192278.25'"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model3_10_scores = score_model(model3_10,\n",
    "                           X_train[key_cols['key_cols_10']],\n",
    "                           X_test[key_cols['key_cols_10']],\n",
    "                           y_train,\n",
    "                           y_test,\n",
    "                              log=True)\n",
    "\n",
    "model3_10_summary = model_summary(model3_10_scores[0],\n",
    "                                  model3_10_scores[1],\n",
    "                                  abs(model3_10_scores[0]-model3_10_scores[1]),\n",
    "                                  model3_10_scores[2])\n",
    "model3_10_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "c23978c1",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model3_10, X_test[key_cols['key_cols_10']], y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "e45587d5",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model3_10_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "cc52e3ab",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th>  <td>   0.889</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.888</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1194.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 16 Jul 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:17:32</td>     <th>  Log-Likelihood:    </th>  <td>  5513.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>-1.080e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17160</td>      <th>  BIC:               </th>  <td>  -9896.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   115</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -145.5581</td> <td>   15.427</td> <td>   -9.435</td> <td> 0.000</td> <td> -175.796</td> <td> -115.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>   -0.0468</td> <td>    0.007</td> <td>   -7.013</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td>    0.0578</td> <td>    0.006</td> <td>    9.346</td> <td> 0.000</td> <td>    0.046</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>    0.2778</td> <td>    0.019</td> <td>   14.391</td> <td> 0.000</td> <td>    0.240</td> <td>    0.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td>    0.0741</td> <td>    0.004</td> <td>   18.779</td> <td> 0.000</td> <td>    0.066</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td>    0.1536</td> <td>    0.017</td> <td>    8.894</td> <td> 0.000</td> <td>    0.120</td> <td>    0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td> 9.381e-06</td> <td> 9.04e-06</td> <td>    1.038</td> <td> 0.299</td> <td>-8.33e-06</td> <td> 2.71e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   25.7463</td> <td>    3.699</td> <td>    6.960</td> <td> 0.000</td> <td>   18.495</td> <td>   32.997</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>   -0.4412</td> <td>    0.055</td> <td>   -7.962</td> <td> 0.000</td> <td>   -0.550</td> <td>   -0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>    0.1579</td> <td>    0.007</td> <td>   21.300</td> <td> 0.000</td> <td>    0.143</td> <td>    0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>   -0.0217</td> <td>    0.004</td> <td>   -4.959</td> <td> 0.000</td> <td>   -0.030</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>    0.0061</td> <td>    0.005</td> <td>    1.121</td> <td> 0.262</td> <td>   -0.005</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>   -0.0088</td> <td>    0.005</td> <td>   -1.869</td> <td> 0.062</td> <td>   -0.018</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td>    0.0046</td> <td>    0.017</td> <td>    0.277</td> <td> 0.782</td> <td>   -0.028</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>   -0.0839</td> <td>    0.010</td> <td>   -8.328</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td>   -0.0662</td> <td>    0.067</td> <td>   -0.985</td> <td> 0.325</td> <td>   -0.198</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>    0.4569</td> <td>    0.020</td> <td>   22.658</td> <td> 0.000</td> <td>    0.417</td> <td>    0.496</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td>    0.1251</td> <td>    0.011</td> <td>   10.963</td> <td> 0.000</td> <td>    0.103</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td>    0.1015</td> <td>    0.007</td> <td>   14.622</td> <td> 0.000</td> <td>    0.088</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td>    0.1752</td> <td>    0.009</td> <td>   18.473</td> <td> 0.000</td> <td>    0.157</td> <td>    0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td>    0.2847</td> <td>    0.014</td> <td>   20.409</td> <td> 0.000</td> <td>    0.257</td> <td>    0.312</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td>    0.1887</td> <td>    0.042</td> <td>    4.447</td> <td> 0.000</td> <td>    0.106</td> <td>    0.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td>    0.3081</td> <td>    0.040</td> <td>    7.703</td> <td> 0.000</td> <td>    0.230</td> <td>    0.387</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>    0.3500</td> <td>    0.040</td> <td>    8.742</td> <td> 0.000</td> <td>    0.271</td> <td>    0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td>    0.4202</td> <td>    0.040</td> <td>   10.446</td> <td> 0.000</td> <td>    0.341</td> <td>    0.499</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>   -0.6135</td> <td>    0.182</td> <td>   -3.375</td> <td> 0.001</td> <td>   -0.970</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>   -0.5416</td> <td>    0.178</td> <td>   -3.050</td> <td> 0.002</td> <td>   -0.890</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>   -0.4886</td> <td>    0.177</td> <td>   -2.757</td> <td> 0.006</td> <td>   -0.836</td> <td>   -0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>   -0.4195</td> <td>    0.177</td> <td>   -2.367</td> <td> 0.018</td> <td>   -0.767</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>   -0.3398</td> <td>    0.177</td> <td>   -1.916</td> <td> 0.055</td> <td>   -0.687</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>   -0.2221</td> <td>    0.177</td> <td>   -1.252</td> <td> 0.211</td> <td>   -0.570</td> <td>    0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>   -0.1338</td> <td>    0.178</td> <td>   -0.754</td> <td> 0.451</td> <td>   -0.482</td> <td>    0.214</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>   -0.0152</td> <td>    0.178</td> <td>   -0.085</td> <td> 0.932</td> <td>   -0.364</td> <td>    0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>    0.1104</td> <td>    0.179</td> <td>    0.617</td> <td> 0.537</td> <td>   -0.240</td> <td>    0.461</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td>    0.3994</td> <td>    0.186</td> <td>    2.149</td> <td> 0.032</td> <td>    0.035</td> <td>    0.764</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td>    0.0713</td> <td>    0.008</td> <td>    9.384</td> <td> 0.000</td> <td>    0.056</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td>    0.0271</td> <td>    0.018</td> <td>    1.483</td> <td> 0.138</td> <td>   -0.009</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td>    0.0097</td> <td>    0.016</td> <td>    0.603</td> <td> 0.546</td> <td>   -0.022</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>    0.9800</td> <td>    0.029</td> <td>   33.933</td> <td> 0.000</td> <td>    0.923</td> <td>    1.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td>    0.6090</td> <td>    0.031</td> <td>   19.720</td> <td> 0.000</td> <td>    0.548</td> <td>    0.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td>    0.5609</td> <td>    0.025</td> <td>   22.161</td> <td> 0.000</td> <td>    0.511</td> <td>    0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td>    0.5554</td> <td>    0.032</td> <td>   17.420</td> <td> 0.000</td> <td>    0.493</td> <td>    0.618</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td>    0.5676</td> <td>    0.030</td> <td>   18.834</td> <td> 0.000</td> <td>    0.509</td> <td>    0.627</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td>    0.3270</td> <td>    0.027</td> <td>   12.206</td> <td> 0.000</td> <td>    0.274</td> <td>    0.379</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>    0.2429</td> <td>    0.039</td> <td>    6.170</td> <td> 0.000</td> <td>    0.166</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>    0.2746</td> <td>    0.043</td> <td>    6.409</td> <td> 0.000</td> <td>    0.191</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td>    0.2127</td> <td>    0.042</td> <td>    5.006</td> <td> 0.000</td> <td>    0.129</td> <td>    0.296</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td>    0.2200</td> <td>    0.024</td> <td>    9.303</td> <td> 0.000</td> <td>    0.174</td> <td>    0.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>   -0.0567</td> <td>    0.015</td> <td>   -3.863</td> <td> 0.000</td> <td>   -0.085</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>    0.4545</td> <td>    0.037</td> <td>   12.220</td> <td> 0.000</td> <td>    0.382</td> <td>    0.527</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td>    0.4955</td> <td>    0.026</td> <td>   19.251</td> <td> 0.000</td> <td>    0.445</td> <td>    0.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td>    0.1822</td> <td>    0.038</td> <td>    4.767</td> <td> 0.000</td> <td>    0.107</td> <td>    0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td>    0.5909</td> <td>    0.030</td> <td>   20.002</td> <td> 0.000</td> <td>    0.533</td> <td>    0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td>    0.0561</td> <td>    0.018</td> <td>    3.176</td> <td> 0.001</td> <td>    0.021</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>    0.0617</td> <td>    0.018</td> <td>    3.389</td> <td> 0.001</td> <td>    0.026</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td>   -0.0463</td> <td>    0.021</td> <td>   -2.185</td> <td> 0.029</td> <td>   -0.088</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td>    0.6330</td> <td>    0.033</td> <td>   19.291</td> <td> 0.000</td> <td>    0.569</td> <td>    0.697</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td>    0.3612</td> <td>    0.035</td> <td>   10.290</td> <td> 0.000</td> <td>    0.292</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td>    0.2356</td> <td>    0.020</td> <td>   11.983</td> <td> 0.000</td> <td>    0.197</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td>    1.1320</td> <td>    0.039</td> <td>   29.291</td> <td> 0.000</td> <td>    1.056</td> <td>    1.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td>    0.7627</td> <td>    0.026</td> <td>   29.727</td> <td> 0.000</td> <td>    0.712</td> <td>    0.813</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>    0.0992</td> <td>    0.017</td> <td>    5.911</td> <td> 0.000</td> <td>    0.066</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td>    0.4588</td> <td>    0.036</td> <td>   12.865</td> <td> 0.000</td> <td>    0.389</td> <td>    0.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td>    0.5066</td> <td>    0.033</td> <td>   15.178</td> <td> 0.000</td> <td>    0.441</td> <td>    0.572</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td>    0.4908</td> <td>    0.036</td> <td>   13.715</td> <td> 0.000</td> <td>    0.421</td> <td>    0.561</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td>    0.1052</td> <td>    0.020</td> <td>    5.200</td> <td> 0.000</td> <td>    0.066</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td>    0.2591</td> <td>    0.022</td> <td>   11.720</td> <td> 0.000</td> <td>    0.216</td> <td>    0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td>    0.1409</td> <td>    0.019</td> <td>    7.327</td> <td> 0.000</td> <td>    0.103</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td>    0.2999</td> <td>    0.022</td> <td>   13.837</td> <td> 0.000</td> <td>    0.257</td> <td>    0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td>    0.4632</td> <td>    0.033</td> <td>   13.942</td> <td> 0.000</td> <td>    0.398</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>    0.1606</td> <td>    0.026</td> <td>    6.186</td> <td> 0.000</td> <td>    0.110</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td>    0.2896</td> <td>    0.039</td> <td>    7.413</td> <td> 0.000</td> <td>    0.213</td> <td>    0.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>    0.4830</td> <td>    0.032</td> <td>   15.264</td> <td> 0.000</td> <td>    0.421</td> <td>    0.545</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td>    0.5083</td> <td>    0.030</td> <td>   16.761</td> <td> 0.000</td> <td>    0.449</td> <td>    0.568</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>    0.2856</td> <td>    0.041</td> <td>    7.037</td> <td> 0.000</td> <td>    0.206</td> <td>    0.365</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>    0.0612</td> <td>    0.016</td> <td>    3.801</td> <td> 0.000</td> <td>    0.030</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td>    0.8143</td> <td>    0.034</td> <td>   24.065</td> <td> 0.000</td> <td>    0.748</td> <td>    0.881</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td>    0.6574</td> <td>    0.032</td> <td>   20.729</td> <td> 0.000</td> <td>    0.595</td> <td>    0.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td>    0.7881</td> <td>    0.032</td> <td>   24.299</td> <td> 0.000</td> <td>    0.725</td> <td>    0.852</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>    0.2383</td> <td>    0.024</td> <td>   10.071</td> <td> 0.000</td> <td>    0.192</td> <td>    0.285</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>    0.6729</td> <td>    0.033</td> <td>   20.561</td> <td> 0.000</td> <td>    0.609</td> <td>    0.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td>    0.2555</td> <td>    0.026</td> <td>    9.916</td> <td> 0.000</td> <td>    0.205</td> <td>    0.306</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td>    0.8520</td> <td>    0.034</td> <td>   25.291</td> <td> 0.000</td> <td>    0.786</td> <td>    0.918</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td>    0.9203</td> <td>    0.030</td> <td>   31.023</td> <td> 0.000</td> <td>    0.862</td> <td>    0.978</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td>    0.6430</td> <td>    0.032</td> <td>   19.941</td> <td> 0.000</td> <td>    0.580</td> <td>    0.706</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td>    0.6127</td> <td>    0.026</td> <td>   23.280</td> <td> 0.000</td> <td>    0.561</td> <td>    0.664</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td>    0.6127</td> <td>    0.033</td> <td>   18.751</td> <td> 0.000</td> <td>    0.549</td> <td>    0.677</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>    0.3700</td> <td>    0.023</td> <td>   16.070</td> <td> 0.000</td> <td>    0.325</td> <td>    0.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td>    0.8159</td> <td>    0.032</td> <td>   25.671</td> <td> 0.000</td> <td>    0.754</td> <td>    0.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>    0.6868</td> <td>    0.028</td> <td>   24.245</td> <td> 0.000</td> <td>    0.631</td> <td>    0.742</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>    0.3670</td> <td>    0.035</td> <td>   10.544</td> <td> 0.000</td> <td>    0.299</td> <td>    0.435</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td>    0.4187</td> <td>    0.024</td> <td>   17.234</td> <td> 0.000</td> <td>    0.371</td> <td>    0.466</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td>    0.2297</td> <td>    0.036</td> <td>    6.384</td> <td> 0.000</td> <td>    0.159</td> <td>    0.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td>    0.5547</td> <td>    0.025</td> <td>   22.328</td> <td> 0.000</td> <td>    0.506</td> <td>    0.603</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>    0.5616</td> <td>    0.026</td> <td>   21.198</td> <td> 0.000</td> <td>    0.510</td> <td>    0.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td>    0.1673</td> <td>    0.022</td> <td>    7.520</td> <td> 0.000</td> <td>    0.124</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>    0.0857</td> <td>    0.029</td> <td>    2.923</td> <td> 0.003</td> <td>    0.028</td> <td>    0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>    0.1938</td> <td>    0.037</td> <td>    5.183</td> <td> 0.000</td> <td>    0.120</td> <td>    0.267</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td>    0.2049</td> <td>    0.020</td> <td>   10.144</td> <td> 0.000</td> <td>    0.165</td> <td>    0.245</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td>   -0.0006</td> <td>    0.022</td> <td>   -0.029</td> <td> 0.977</td> <td>   -0.043</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td>    0.3314</td> <td>    0.038</td> <td>    8.805</td> <td> 0.000</td> <td>    0.258</td> <td>    0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td>    0.0838</td> <td>    0.022</td> <td>    3.815</td> <td> 0.000</td> <td>    0.041</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td>    0.0377</td> <td>    0.022</td> <td>    1.678</td> <td> 0.093</td> <td>   -0.006</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>   -0.0021</td> <td>    0.017</td> <td>   -0.123</td> <td> 0.902</td> <td>   -0.036</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td>    0.6567</td> <td>    0.031</td> <td>   21.168</td> <td> 0.000</td> <td>    0.596</td> <td>    0.717</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>    0.0150</td> <td>    0.008</td> <td>    1.771</td> <td> 0.077</td> <td>   -0.002</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td>    0.0424</td> <td>    0.008</td> <td>    5.457</td> <td> 0.000</td> <td>    0.027</td> <td>    0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td>    0.0657</td> <td>    0.008</td> <td>    8.671</td> <td> 0.000</td> <td>    0.051</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td>    0.0075</td> <td>    0.007</td> <td>    1.002</td> <td> 0.317</td> <td>   -0.007</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>   -0.0014</td> <td>    0.008</td> <td>   -0.188</td> <td> 0.851</td> <td>   -0.016</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>   -0.0079</td> <td>    0.008</td> <td>   -1.045</td> <td> 0.296</td> <td>   -0.023</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>   -0.0070</td> <td>    0.008</td> <td>   -0.898</td> <td> 0.369</td> <td>   -0.022</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>   -0.0124</td> <td>    0.008</td> <td>   -1.580</td> <td> 0.114</td> <td>   -0.028</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>   -0.0143</td> <td>    0.008</td> <td>   -1.830</td> <td> 0.067</td> <td>   -0.030</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>   -0.0136</td> <td>    0.008</td> <td>   -1.659</td> <td> 0.097</td> <td>   -0.030</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>   -0.0047</td> <td>    0.008</td> <td>   -0.575</td> <td> 0.565</td> <td>   -0.021</td> <td>    0.011</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>1263.108</td> <th>  Durbin-Watson:     </th> <td>   2.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>5617.621</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td>-0.222</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 5.758</td>  <th>  Cond. No.          </th> <td>6.31e+06</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.889\n",
       "Model:                            OLS   Adj. R-squared:                  0.888\n",
       "Method:                 Least Squares   F-statistic:                     1194.\n",
       "Date:                Fri, 16 Jul 2021   Prob (F-statistic):               0.00\n",
       "Time:                        15:17:32   Log-Likelihood:                 5513.8\n",
       "No. Observations:               17276   AIC:                        -1.080e+04\n",
       "Df Residuals:                   17160   BIC:                            -9896.\n",
       "Df Model:                         115                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -145.5581     15.427     -9.435      0.000    -175.796    -115.320\n",
       "bedrooms            -0.0468      0.007     -7.013      0.000      -0.060      -0.034\n",
       "bathrooms            0.0578      0.006      9.346      0.000       0.046       0.070\n",
       "sqft_living          0.2778      0.019     14.391      0.000       0.240       0.316\n",
       "sqft_lot             0.0741      0.004     18.779      0.000       0.066       0.082\n",
       "sqft_above           0.1536      0.017      8.894      0.000       0.120       0.187\n",
       "sqft_basement     9.381e-06   9.04e-06      1.038      0.299   -8.33e-06    2.71e-05\n",
       "lat                 25.7463      3.699      6.960      0.000      18.495      32.997\n",
       "long                -0.4412      0.055     -7.962      0.000      -0.550      -0.333\n",
       "sqft_living15        0.1579      0.007     21.300      0.000       0.143       0.172\n",
       "sqft_lot15          -0.0217      0.004     -4.959      0.000      -0.030      -0.013\n",
       "floors_1.5           0.0061      0.005      1.121      0.262      -0.005       0.017\n",
       "floors_2.0          -0.0088      0.005     -1.869      0.062      -0.018       0.000\n",
       "floors_2.5           0.0046      0.017      0.277      0.782      -0.028       0.037\n",
       "floors_3.0          -0.0839      0.010     -8.328      0.000      -0.104      -0.064\n",
       "floors_3.5          -0.0662      0.067     -0.985      0.325      -0.198       0.066\n",
       "waterfront_1         0.4569      0.020     22.658      0.000       0.417       0.496\n",
       "view_1               0.1251      0.011     10.963      0.000       0.103       0.148\n",
       "view_2               0.1015      0.007     14.622      0.000       0.088       0.115\n",
       "view_3               0.1752      0.009     18.473      0.000       0.157       0.194\n",
       "view_4               0.2847      0.014     20.409      0.000       0.257       0.312\n",
       "condition_2          0.1887      0.042      4.447      0.000       0.106       0.272\n",
       "condition_3          0.3081      0.040      7.703      0.000       0.230       0.387\n",
       "condition_4          0.3500      0.040      8.742      0.000       0.271       0.428\n",
       "condition_5          0.4202      0.040     10.446      0.000       0.341       0.499\n",
       "grade_4             -0.6135      0.182     -3.375      0.001      -0.970      -0.257\n",
       "grade_5             -0.5416      0.178     -3.050      0.002      -0.890      -0.193\n",
       "grade_6             -0.4886      0.177     -2.757      0.006      -0.836      -0.141\n",
       "grade_7             -0.4195      0.177     -2.367      0.018      -0.767      -0.072\n",
       "grade_8             -0.3398      0.177     -1.916      0.055      -0.687       0.008\n",
       "grade_9             -0.2221      0.177     -1.252      0.211      -0.570       0.126\n",
       "grade_10            -0.1338      0.178     -0.754      0.451      -0.482       0.214\n",
       "grade_11            -0.0152      0.178     -0.085      0.932      -0.364       0.333\n",
       "grade_12             0.1104      0.179      0.617      0.537      -0.240       0.461\n",
       "grade_13             0.3994      0.186      2.149      0.032       0.035       0.764\n",
       "if_renovated_1       0.0713      0.008      9.384      0.000       0.056       0.086\n",
       "zipcode_98002        0.0271      0.018      1.483      0.138      -0.009       0.063\n",
       "zipcode_98003        0.0097      0.016      0.603      0.546      -0.022       0.041\n",
       "zipcode_98004        0.9800      0.029     33.933      0.000       0.923       1.037\n",
       "zipcode_98005        0.6090      0.031     19.720      0.000       0.548       0.669\n",
       "zipcode_98006        0.5609      0.025     22.161      0.000       0.511       0.611\n",
       "zipcode_98007        0.5554      0.032     17.420      0.000       0.493       0.618\n",
       "zipcode_98008        0.5676      0.030     18.834      0.000       0.509       0.627\n",
       "zipcode_98010        0.3270      0.027     12.206      0.000       0.274       0.379\n",
       "zipcode_98011        0.2429      0.039      6.170      0.000       0.166       0.320\n",
       "zipcode_98014        0.2746      0.043      6.409      0.000       0.191       0.359\n",
       "zipcode_98019        0.2127      0.042      5.006      0.000       0.129       0.296\n",
       "zipcode_98022        0.2200      0.024      9.303      0.000       0.174       0.266\n",
       "zipcode_98023       -0.0567      0.015     -3.863      0.000      -0.085      -0.028\n",
       "zipcode_98024        0.4545      0.037     12.220      0.000       0.382       0.527\n",
       "zipcode_98027        0.4955      0.026     19.251      0.000       0.445       0.546\n",
       "zipcode_98028        0.1822      0.038      4.767      0.000       0.107       0.257\n",
       "zipcode_98029        0.5909      0.030     20.002      0.000       0.533       0.649\n",
       "zipcode_98030        0.0561      0.018      3.176      0.001       0.021       0.091\n",
       "zipcode_98031        0.0617      0.018      3.389      0.001       0.026       0.097\n",
       "zipcode_98032       -0.0463      0.021     -2.185      0.029      -0.088      -0.005\n",
       "zipcode_98033        0.6330      0.033     19.291      0.000       0.569       0.697\n",
       "zipcode_98034        0.3612      0.035     10.290      0.000       0.292       0.430\n",
       "zipcode_98038        0.2356      0.020     11.983      0.000       0.197       0.274\n",
       "zipcode_98039        1.1320      0.039     29.291      0.000       1.056       1.208\n",
       "zipcode_98040        0.7627      0.026     29.727      0.000       0.712       0.813\n",
       "zipcode_98042        0.0992      0.017      5.911      0.000       0.066       0.132\n",
       "zipcode_98045        0.4588      0.036     12.865      0.000       0.389       0.529\n",
       "zipcode_98052        0.5066      0.033     15.178      0.000       0.441       0.572\n",
       "zipcode_98053        0.4908      0.036     13.715      0.000       0.421       0.561\n",
       "zipcode_98055        0.1052      0.020      5.200      0.000       0.066       0.145\n",
       "zipcode_98056        0.2591      0.022     11.720      0.000       0.216       0.302\n",
       "zipcode_98058        0.1409      0.019      7.327      0.000       0.103       0.179\n",
       "zipcode_98059        0.2999      0.022     13.837      0.000       0.257       0.342\n",
       "zipcode_98065        0.4632      0.033     13.942      0.000       0.398       0.528\n",
       "zipcode_98070        0.1606      0.026      6.186      0.000       0.110       0.211\n",
       "zipcode_98072        0.2896      0.039      7.413      0.000       0.213       0.366\n",
       "zipcode_98074        0.4830      0.032     15.264      0.000       0.421       0.545\n",
       "zipcode_98075        0.5083      0.030     16.761      0.000       0.449       0.568\n",
       "zipcode_98077        0.2856      0.041      7.037      0.000       0.206       0.365\n",
       "zipcode_98092        0.0612      0.016      3.801      0.000       0.030       0.093\n",
       "zipcode_98102        0.8143      0.034     24.065      0.000       0.748       0.881\n",
       "zipcode_98103        0.6574      0.032     20.729      0.000       0.595       0.720\n",
       "zipcode_98105        0.7881      0.032     24.299      0.000       0.725       0.852\n",
       "zipcode_98106        0.2383      0.024     10.071      0.000       0.192       0.285\n",
       "zipcode_98107        0.6729      0.033     20.561      0.000       0.609       0.737\n",
       "zipcode_98108        0.2555      0.026      9.916      0.000       0.205       0.306\n",
       "zipcode_98109        0.8520      0.034     25.291      0.000       0.786       0.918\n",
       "zipcode_98112        0.9203      0.030     31.023      0.000       0.862       0.978\n",
       "zipcode_98115        0.6430      0.032     19.941      0.000       0.580       0.706\n",
       "zipcode_98116        0.6127      0.026     23.280      0.000       0.561       0.664\n",
       "zipcode_98117        0.6127      0.033     18.751      0.000       0.549       0.677\n",
       "zipcode_98118        0.3700      0.023     16.070      0.000       0.325       0.415\n",
       "zipcode_98119        0.8159      0.032     25.671      0.000       0.754       0.878\n",
       "zipcode_98122        0.6868      0.028     24.245      0.000       0.631       0.742\n",
       "zipcode_98125        0.3670      0.035     10.544      0.000       0.299       0.435\n",
       "zipcode_98126        0.4187      0.024     17.234      0.000       0.371       0.466\n",
       "zipcode_98133        0.2297      0.036      6.384      0.000       0.159       0.300\n",
       "zipcode_98136        0.5547      0.025     22.328      0.000       0.506       0.603\n",
       "zipcode_98144        0.5616      0.026     21.198      0.000       0.510       0.614\n",
       "zipcode_98146        0.1673      0.022      7.520      0.000       0.124       0.211\n",
       "zipcode_98148        0.0857      0.029      2.923      0.003       0.028       0.143\n",
       "zipcode_98155        0.1938      0.037      5.183      0.000       0.120       0.267\n",
       "zipcode_98166        0.2049      0.020     10.144      0.000       0.165       0.245\n",
       "zipcode_98168       -0.0006      0.022     -0.029      0.977      -0.043       0.042\n",
       "zipcode_98177        0.3314      0.038      8.805      0.000       0.258       0.405\n",
       "zipcode_98178        0.0838      0.022      3.815      0.000       0.041       0.127\n",
       "zipcode_98188        0.0377      0.022      1.678      0.093      -0.006       0.082\n",
       "zipcode_98198       -0.0021      0.017     -0.123      0.902      -0.036       0.032\n",
       "zipcode_98199        0.6567      0.031     21.168      0.000       0.596       0.717\n",
       "month_of_date_2      0.0150      0.008      1.771      0.077      -0.002       0.032\n",
       "month_of_date_3      0.0424      0.008      5.457      0.000       0.027       0.058\n",
       "month_of_date_4      0.0657      0.008      8.671      0.000       0.051       0.081\n",
       "month_of_date_5      0.0075      0.007      1.002      0.317      -0.007       0.022\n",
       "month_of_date_6     -0.0014      0.008     -0.188      0.851      -0.016       0.014\n",
       "month_of_date_7     -0.0079      0.008     -1.045      0.296      -0.023       0.007\n",
       "month_of_date_8     -0.0070      0.008     -0.898      0.369      -0.022       0.008\n",
       "month_of_date_9     -0.0124      0.008     -1.580      0.114      -0.028       0.003\n",
       "month_of_date_10    -0.0143      0.008     -1.830      0.067      -0.030       0.001\n",
       "month_of_date_11    -0.0136      0.008     -1.659      0.097      -0.030       0.002\n",
       "month_of_date_12    -0.0047      0.008     -0.575      0.565      -0.021       0.011\n",
       "==============================================================================\n",
       "Omnibus:                     1263.108   Durbin-Watson:                   2.025\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5617.621\n",
       "Skew:                          -0.222   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.758   Cond. No.                     6.31e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model3_10_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "75084c69",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "5617.620656346999\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.2216147136327228\n",
      "\n",
      " Kurtosis ----\n",
      "5.758188731970492\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-41-42a69f1a355e>:13: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model3_10_ols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "bf6484a5",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.659959e+03\n",
      "p-value                        5.934956e-272\n",
      "f-value                         1.586156e+01\n",
      "f p-value                      5.234348e-288\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.959992\n",
      "p-value      0.970256\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model3_10_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "360c50a8",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 3: Testing 20 Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "d44c51a0",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create linear regression model for price and setting up cross validation (x3)\n",
    "model3_20 = LinearRegression()\n",
    "model3_20.fit(X_train[key_cols['key_cols_20']], y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "e66d16cc",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.775, the median R-squared values for the test sets were 0.774. These values resulted in a differential of 0.00019'"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way (x3)\n",
    "model3_20_cval = cross_val(model3_20,\n",
    "                           X=X_train[key_cols['key_cols_20']],\n",
    "                           y=y_train,\n",
    "                           random_state=0,)\n",
    "\n",
    "model3_20_cval_summary = cval_summary(model3_20_cval[0],\n",
    "                                      model3_20_cval[1],\n",
    "                                      abs(model3_20_cval[0]-model3_20_cval[1]))\n",
    "\n",
    "model3_20_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "53ae9ed3",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.775, and the R-squared value for the test set was 0.76. These values resulted in a differential of 0.01456. The RMSE of our model predicitons was 176459.25'"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model3_20_scores = score_model(model3_20,\n",
    "                               X_train[key_cols['key_cols_20']],\n",
    "                               X_test[key_cols['key_cols_20']],\n",
    "                               y_train,\n",
    "                               y_test,\n",
    "                               log=True)\n",
    "\n",
    "model3_20_summary = model_summary(model3_20_scores[0],\n",
    "                                  model3_20_scores[1],\n",
    "                                  abs(model3_20_scores[0]-model3_20_scores[1]),\n",
    "                                  model3_20_scores[2])\n",
    "model3_20_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "e61bc7bb",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model3_20, X_test[key_cols['key_cols_20']], y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "eef5c57b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model3_20_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "50bc168c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th>  <td>   0.889</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.888</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1194.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 16 Jul 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:17:47</td>     <th>  Log-Likelihood:    </th>  <td>  5513.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>-1.080e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17160</td>      <th>  BIC:               </th>  <td>  -9896.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   115</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -145.5581</td> <td>   15.427</td> <td>   -9.435</td> <td> 0.000</td> <td> -175.796</td> <td> -115.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>   -0.0468</td> <td>    0.007</td> <td>   -7.013</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td>    0.0578</td> <td>    0.006</td> <td>    9.346</td> <td> 0.000</td> <td>    0.046</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>    0.2778</td> <td>    0.019</td> <td>   14.391</td> <td> 0.000</td> <td>    0.240</td> <td>    0.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td>    0.0741</td> <td>    0.004</td> <td>   18.779</td> <td> 0.000</td> <td>    0.066</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td>    0.1536</td> <td>    0.017</td> <td>    8.894</td> <td> 0.000</td> <td>    0.120</td> <td>    0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td> 9.381e-06</td> <td> 9.04e-06</td> <td>    1.038</td> <td> 0.299</td> <td>-8.33e-06</td> <td> 2.71e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   25.7463</td> <td>    3.699</td> <td>    6.960</td> <td> 0.000</td> <td>   18.495</td> <td>   32.997</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>   -0.4412</td> <td>    0.055</td> <td>   -7.962</td> <td> 0.000</td> <td>   -0.550</td> <td>   -0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>    0.1579</td> <td>    0.007</td> <td>   21.300</td> <td> 0.000</td> <td>    0.143</td> <td>    0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>   -0.0217</td> <td>    0.004</td> <td>   -4.959</td> <td> 0.000</td> <td>   -0.030</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>    0.0061</td> <td>    0.005</td> <td>    1.121</td> <td> 0.262</td> <td>   -0.005</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>   -0.0088</td> <td>    0.005</td> <td>   -1.869</td> <td> 0.062</td> <td>   -0.018</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td>    0.0046</td> <td>    0.017</td> <td>    0.277</td> <td> 0.782</td> <td>   -0.028</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>   -0.0839</td> <td>    0.010</td> <td>   -8.328</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td>   -0.0662</td> <td>    0.067</td> <td>   -0.985</td> <td> 0.325</td> <td>   -0.198</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>    0.4569</td> <td>    0.020</td> <td>   22.658</td> <td> 0.000</td> <td>    0.417</td> <td>    0.496</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td>    0.1251</td> <td>    0.011</td> <td>   10.963</td> <td> 0.000</td> <td>    0.103</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td>    0.1015</td> <td>    0.007</td> <td>   14.622</td> <td> 0.000</td> <td>    0.088</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td>    0.1752</td> <td>    0.009</td> <td>   18.473</td> <td> 0.000</td> <td>    0.157</td> <td>    0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td>    0.2847</td> <td>    0.014</td> <td>   20.409</td> <td> 0.000</td> <td>    0.257</td> <td>    0.312</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td>    0.1887</td> <td>    0.042</td> <td>    4.447</td> <td> 0.000</td> <td>    0.106</td> <td>    0.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td>    0.3081</td> <td>    0.040</td> <td>    7.703</td> <td> 0.000</td> <td>    0.230</td> <td>    0.387</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>    0.3500</td> <td>    0.040</td> <td>    8.742</td> <td> 0.000</td> <td>    0.271</td> <td>    0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td>    0.4202</td> <td>    0.040</td> <td>   10.446</td> <td> 0.000</td> <td>    0.341</td> <td>    0.499</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>   -0.6135</td> <td>    0.182</td> <td>   -3.375</td> <td> 0.001</td> <td>   -0.970</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>   -0.5416</td> <td>    0.178</td> <td>   -3.050</td> <td> 0.002</td> <td>   -0.890</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>   -0.4886</td> <td>    0.177</td> <td>   -2.757</td> <td> 0.006</td> <td>   -0.836</td> <td>   -0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>   -0.4195</td> <td>    0.177</td> <td>   -2.367</td> <td> 0.018</td> <td>   -0.767</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>   -0.3398</td> <td>    0.177</td> <td>   -1.916</td> <td> 0.055</td> <td>   -0.687</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>   -0.2221</td> <td>    0.177</td> <td>   -1.252</td> <td> 0.211</td> <td>   -0.570</td> <td>    0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>   -0.1338</td> <td>    0.178</td> <td>   -0.754</td> <td> 0.451</td> <td>   -0.482</td> <td>    0.214</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>   -0.0152</td> <td>    0.178</td> <td>   -0.085</td> <td> 0.932</td> <td>   -0.364</td> <td>    0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>    0.1104</td> <td>    0.179</td> <td>    0.617</td> <td> 0.537</td> <td>   -0.240</td> <td>    0.461</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td>    0.3994</td> <td>    0.186</td> <td>    2.149</td> <td> 0.032</td> <td>    0.035</td> <td>    0.764</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td>    0.0713</td> <td>    0.008</td> <td>    9.384</td> <td> 0.000</td> <td>    0.056</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td>    0.0271</td> <td>    0.018</td> <td>    1.483</td> <td> 0.138</td> <td>   -0.009</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td>    0.0097</td> <td>    0.016</td> <td>    0.603</td> <td> 0.546</td> <td>   -0.022</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>    0.9800</td> <td>    0.029</td> <td>   33.933</td> <td> 0.000</td> <td>    0.923</td> <td>    1.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td>    0.6090</td> <td>    0.031</td> <td>   19.720</td> <td> 0.000</td> <td>    0.548</td> <td>    0.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td>    0.5609</td> <td>    0.025</td> <td>   22.161</td> <td> 0.000</td> <td>    0.511</td> <td>    0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td>    0.5554</td> <td>    0.032</td> <td>   17.420</td> <td> 0.000</td> <td>    0.493</td> <td>    0.618</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td>    0.5676</td> <td>    0.030</td> <td>   18.834</td> <td> 0.000</td> <td>    0.509</td> <td>    0.627</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td>    0.3270</td> <td>    0.027</td> <td>   12.206</td> <td> 0.000</td> <td>    0.274</td> <td>    0.379</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>    0.2429</td> <td>    0.039</td> <td>    6.170</td> <td> 0.000</td> <td>    0.166</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>    0.2746</td> <td>    0.043</td> <td>    6.409</td> <td> 0.000</td> <td>    0.191</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td>    0.2127</td> <td>    0.042</td> <td>    5.006</td> <td> 0.000</td> <td>    0.129</td> <td>    0.296</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td>    0.2200</td> <td>    0.024</td> <td>    9.303</td> <td> 0.000</td> <td>    0.174</td> <td>    0.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>   -0.0567</td> <td>    0.015</td> <td>   -3.863</td> <td> 0.000</td> <td>   -0.085</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>    0.4545</td> <td>    0.037</td> <td>   12.220</td> <td> 0.000</td> <td>    0.382</td> <td>    0.527</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td>    0.4955</td> <td>    0.026</td> <td>   19.251</td> <td> 0.000</td> <td>    0.445</td> <td>    0.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td>    0.1822</td> <td>    0.038</td> <td>    4.767</td> <td> 0.000</td> <td>    0.107</td> <td>    0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td>    0.5909</td> <td>    0.030</td> <td>   20.002</td> <td> 0.000</td> <td>    0.533</td> <td>    0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td>    0.0561</td> <td>    0.018</td> <td>    3.176</td> <td> 0.001</td> <td>    0.021</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>    0.0617</td> <td>    0.018</td> <td>    3.389</td> <td> 0.001</td> <td>    0.026</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td>   -0.0463</td> <td>    0.021</td> <td>   -2.185</td> <td> 0.029</td> <td>   -0.088</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td>    0.6330</td> <td>    0.033</td> <td>   19.291</td> <td> 0.000</td> <td>    0.569</td> <td>    0.697</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td>    0.3612</td> <td>    0.035</td> <td>   10.290</td> <td> 0.000</td> <td>    0.292</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td>    0.2356</td> <td>    0.020</td> <td>   11.983</td> <td> 0.000</td> <td>    0.197</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td>    1.1320</td> <td>    0.039</td> <td>   29.291</td> <td> 0.000</td> <td>    1.056</td> <td>    1.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td>    0.7627</td> <td>    0.026</td> <td>   29.727</td> <td> 0.000</td> <td>    0.712</td> <td>    0.813</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>    0.0992</td> <td>    0.017</td> <td>    5.911</td> <td> 0.000</td> <td>    0.066</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td>    0.4588</td> <td>    0.036</td> <td>   12.865</td> <td> 0.000</td> <td>    0.389</td> <td>    0.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td>    0.5066</td> <td>    0.033</td> <td>   15.178</td> <td> 0.000</td> <td>    0.441</td> <td>    0.572</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td>    0.4908</td> <td>    0.036</td> <td>   13.715</td> <td> 0.000</td> <td>    0.421</td> <td>    0.561</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td>    0.1052</td> <td>    0.020</td> <td>    5.200</td> <td> 0.000</td> <td>    0.066</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td>    0.2591</td> <td>    0.022</td> <td>   11.720</td> <td> 0.000</td> <td>    0.216</td> <td>    0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td>    0.1409</td> <td>    0.019</td> <td>    7.327</td> <td> 0.000</td> <td>    0.103</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td>    0.2999</td> <td>    0.022</td> <td>   13.837</td> <td> 0.000</td> <td>    0.257</td> <td>    0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td>    0.4632</td> <td>    0.033</td> <td>   13.942</td> <td> 0.000</td> <td>    0.398</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>    0.1606</td> <td>    0.026</td> <td>    6.186</td> <td> 0.000</td> <td>    0.110</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td>    0.2896</td> <td>    0.039</td> <td>    7.413</td> <td> 0.000</td> <td>    0.213</td> <td>    0.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>    0.4830</td> <td>    0.032</td> <td>   15.264</td> <td> 0.000</td> <td>    0.421</td> <td>    0.545</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td>    0.5083</td> <td>    0.030</td> <td>   16.761</td> <td> 0.000</td> <td>    0.449</td> <td>    0.568</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>    0.2856</td> <td>    0.041</td> <td>    7.037</td> <td> 0.000</td> <td>    0.206</td> <td>    0.365</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>    0.0612</td> <td>    0.016</td> <td>    3.801</td> <td> 0.000</td> <td>    0.030</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td>    0.8143</td> <td>    0.034</td> <td>   24.065</td> <td> 0.000</td> <td>    0.748</td> <td>    0.881</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td>    0.6574</td> <td>    0.032</td> <td>   20.729</td> <td> 0.000</td> <td>    0.595</td> <td>    0.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td>    0.7881</td> <td>    0.032</td> <td>   24.299</td> <td> 0.000</td> <td>    0.725</td> <td>    0.852</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>    0.2383</td> <td>    0.024</td> <td>   10.071</td> <td> 0.000</td> <td>    0.192</td> <td>    0.285</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>    0.6729</td> <td>    0.033</td> <td>   20.561</td> <td> 0.000</td> <td>    0.609</td> <td>    0.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td>    0.2555</td> <td>    0.026</td> <td>    9.916</td> <td> 0.000</td> <td>    0.205</td> <td>    0.306</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td>    0.8520</td> <td>    0.034</td> <td>   25.291</td> <td> 0.000</td> <td>    0.786</td> <td>    0.918</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td>    0.9203</td> <td>    0.030</td> <td>   31.023</td> <td> 0.000</td> <td>    0.862</td> <td>    0.978</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td>    0.6430</td> <td>    0.032</td> <td>   19.941</td> <td> 0.000</td> <td>    0.580</td> <td>    0.706</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td>    0.6127</td> <td>    0.026</td> <td>   23.280</td> <td> 0.000</td> <td>    0.561</td> <td>    0.664</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td>    0.6127</td> <td>    0.033</td> <td>   18.751</td> <td> 0.000</td> <td>    0.549</td> <td>    0.677</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>    0.3700</td> <td>    0.023</td> <td>   16.070</td> <td> 0.000</td> <td>    0.325</td> <td>    0.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td>    0.8159</td> <td>    0.032</td> <td>   25.671</td> <td> 0.000</td> <td>    0.754</td> <td>    0.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>    0.6868</td> <td>    0.028</td> <td>   24.245</td> <td> 0.000</td> <td>    0.631</td> <td>    0.742</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>    0.3670</td> <td>    0.035</td> <td>   10.544</td> <td> 0.000</td> <td>    0.299</td> <td>    0.435</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td>    0.4187</td> <td>    0.024</td> <td>   17.234</td> <td> 0.000</td> <td>    0.371</td> <td>    0.466</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td>    0.2297</td> <td>    0.036</td> <td>    6.384</td> <td> 0.000</td> <td>    0.159</td> <td>    0.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td>    0.5547</td> <td>    0.025</td> <td>   22.328</td> <td> 0.000</td> <td>    0.506</td> <td>    0.603</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>    0.5616</td> <td>    0.026</td> <td>   21.198</td> <td> 0.000</td> <td>    0.510</td> <td>    0.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td>    0.1673</td> <td>    0.022</td> <td>    7.520</td> <td> 0.000</td> <td>    0.124</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>    0.0857</td> <td>    0.029</td> <td>    2.923</td> <td> 0.003</td> <td>    0.028</td> <td>    0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>    0.1938</td> <td>    0.037</td> <td>    5.183</td> <td> 0.000</td> <td>    0.120</td> <td>    0.267</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td>    0.2049</td> <td>    0.020</td> <td>   10.144</td> <td> 0.000</td> <td>    0.165</td> <td>    0.245</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td>   -0.0006</td> <td>    0.022</td> <td>   -0.029</td> <td> 0.977</td> <td>   -0.043</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td>    0.3314</td> <td>    0.038</td> <td>    8.805</td> <td> 0.000</td> <td>    0.258</td> <td>    0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td>    0.0838</td> <td>    0.022</td> <td>    3.815</td> <td> 0.000</td> <td>    0.041</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td>    0.0377</td> <td>    0.022</td> <td>    1.678</td> <td> 0.093</td> <td>   -0.006</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>   -0.0021</td> <td>    0.017</td> <td>   -0.123</td> <td> 0.902</td> <td>   -0.036</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td>    0.6567</td> <td>    0.031</td> <td>   21.168</td> <td> 0.000</td> <td>    0.596</td> <td>    0.717</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>    0.0150</td> <td>    0.008</td> <td>    1.771</td> <td> 0.077</td> <td>   -0.002</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td>    0.0424</td> <td>    0.008</td> <td>    5.457</td> <td> 0.000</td> <td>    0.027</td> <td>    0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td>    0.0657</td> <td>    0.008</td> <td>    8.671</td> <td> 0.000</td> <td>    0.051</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td>    0.0075</td> <td>    0.007</td> <td>    1.002</td> <td> 0.317</td> <td>   -0.007</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>   -0.0014</td> <td>    0.008</td> <td>   -0.188</td> <td> 0.851</td> <td>   -0.016</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>   -0.0079</td> <td>    0.008</td> <td>   -1.045</td> <td> 0.296</td> <td>   -0.023</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>   -0.0070</td> <td>    0.008</td> <td>   -0.898</td> <td> 0.369</td> <td>   -0.022</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>   -0.0124</td> <td>    0.008</td> <td>   -1.580</td> <td> 0.114</td> <td>   -0.028</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>   -0.0143</td> <td>    0.008</td> <td>   -1.830</td> <td> 0.067</td> <td>   -0.030</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>   -0.0136</td> <td>    0.008</td> <td>   -1.659</td> <td> 0.097</td> <td>   -0.030</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>   -0.0047</td> <td>    0.008</td> <td>   -0.575</td> <td> 0.565</td> <td>   -0.021</td> <td>    0.011</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>1263.108</td> <th>  Durbin-Watson:     </th> <td>   2.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>5617.621</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td>-0.222</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 5.758</td>  <th>  Cond. No.          </th> <td>6.31e+06</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.889\n",
       "Model:                            OLS   Adj. R-squared:                  0.888\n",
       "Method:                 Least Squares   F-statistic:                     1194.\n",
       "Date:                Fri, 16 Jul 2021   Prob (F-statistic):               0.00\n",
       "Time:                        15:17:47   Log-Likelihood:                 5513.8\n",
       "No. Observations:               17276   AIC:                        -1.080e+04\n",
       "Df Residuals:                   17160   BIC:                            -9896.\n",
       "Df Model:                         115                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -145.5581     15.427     -9.435      0.000    -175.796    -115.320\n",
       "bedrooms            -0.0468      0.007     -7.013      0.000      -0.060      -0.034\n",
       "bathrooms            0.0578      0.006      9.346      0.000       0.046       0.070\n",
       "sqft_living          0.2778      0.019     14.391      0.000       0.240       0.316\n",
       "sqft_lot             0.0741      0.004     18.779      0.000       0.066       0.082\n",
       "sqft_above           0.1536      0.017      8.894      0.000       0.120       0.187\n",
       "sqft_basement     9.381e-06   9.04e-06      1.038      0.299   -8.33e-06    2.71e-05\n",
       "lat                 25.7463      3.699      6.960      0.000      18.495      32.997\n",
       "long                -0.4412      0.055     -7.962      0.000      -0.550      -0.333\n",
       "sqft_living15        0.1579      0.007     21.300      0.000       0.143       0.172\n",
       "sqft_lot15          -0.0217      0.004     -4.959      0.000      -0.030      -0.013\n",
       "floors_1.5           0.0061      0.005      1.121      0.262      -0.005       0.017\n",
       "floors_2.0          -0.0088      0.005     -1.869      0.062      -0.018       0.000\n",
       "floors_2.5           0.0046      0.017      0.277      0.782      -0.028       0.037\n",
       "floors_3.0          -0.0839      0.010     -8.328      0.000      -0.104      -0.064\n",
       "floors_3.5          -0.0662      0.067     -0.985      0.325      -0.198       0.066\n",
       "waterfront_1         0.4569      0.020     22.658      0.000       0.417       0.496\n",
       "view_1               0.1251      0.011     10.963      0.000       0.103       0.148\n",
       "view_2               0.1015      0.007     14.622      0.000       0.088       0.115\n",
       "view_3               0.1752      0.009     18.473      0.000       0.157       0.194\n",
       "view_4               0.2847      0.014     20.409      0.000       0.257       0.312\n",
       "condition_2          0.1887      0.042      4.447      0.000       0.106       0.272\n",
       "condition_3          0.3081      0.040      7.703      0.000       0.230       0.387\n",
       "condition_4          0.3500      0.040      8.742      0.000       0.271       0.428\n",
       "condition_5          0.4202      0.040     10.446      0.000       0.341       0.499\n",
       "grade_4             -0.6135      0.182     -3.375      0.001      -0.970      -0.257\n",
       "grade_5             -0.5416      0.178     -3.050      0.002      -0.890      -0.193\n",
       "grade_6             -0.4886      0.177     -2.757      0.006      -0.836      -0.141\n",
       "grade_7             -0.4195      0.177     -2.367      0.018      -0.767      -0.072\n",
       "grade_8             -0.3398      0.177     -1.916      0.055      -0.687       0.008\n",
       "grade_9             -0.2221      0.177     -1.252      0.211      -0.570       0.126\n",
       "grade_10            -0.1338      0.178     -0.754      0.451      -0.482       0.214\n",
       "grade_11            -0.0152      0.178     -0.085      0.932      -0.364       0.333\n",
       "grade_12             0.1104      0.179      0.617      0.537      -0.240       0.461\n",
       "grade_13             0.3994      0.186      2.149      0.032       0.035       0.764\n",
       "if_renovated_1       0.0713      0.008      9.384      0.000       0.056       0.086\n",
       "zipcode_98002        0.0271      0.018      1.483      0.138      -0.009       0.063\n",
       "zipcode_98003        0.0097      0.016      0.603      0.546      -0.022       0.041\n",
       "zipcode_98004        0.9800      0.029     33.933      0.000       0.923       1.037\n",
       "zipcode_98005        0.6090      0.031     19.720      0.000       0.548       0.669\n",
       "zipcode_98006        0.5609      0.025     22.161      0.000       0.511       0.611\n",
       "zipcode_98007        0.5554      0.032     17.420      0.000       0.493       0.618\n",
       "zipcode_98008        0.5676      0.030     18.834      0.000       0.509       0.627\n",
       "zipcode_98010        0.3270      0.027     12.206      0.000       0.274       0.379\n",
       "zipcode_98011        0.2429      0.039      6.170      0.000       0.166       0.320\n",
       "zipcode_98014        0.2746      0.043      6.409      0.000       0.191       0.359\n",
       "zipcode_98019        0.2127      0.042      5.006      0.000       0.129       0.296\n",
       "zipcode_98022        0.2200      0.024      9.303      0.000       0.174       0.266\n",
       "zipcode_98023       -0.0567      0.015     -3.863      0.000      -0.085      -0.028\n",
       "zipcode_98024        0.4545      0.037     12.220      0.000       0.382       0.527\n",
       "zipcode_98027        0.4955      0.026     19.251      0.000       0.445       0.546\n",
       "zipcode_98028        0.1822      0.038      4.767      0.000       0.107       0.257\n",
       "zipcode_98029        0.5909      0.030     20.002      0.000       0.533       0.649\n",
       "zipcode_98030        0.0561      0.018      3.176      0.001       0.021       0.091\n",
       "zipcode_98031        0.0617      0.018      3.389      0.001       0.026       0.097\n",
       "zipcode_98032       -0.0463      0.021     -2.185      0.029      -0.088      -0.005\n",
       "zipcode_98033        0.6330      0.033     19.291      0.000       0.569       0.697\n",
       "zipcode_98034        0.3612      0.035     10.290      0.000       0.292       0.430\n",
       "zipcode_98038        0.2356      0.020     11.983      0.000       0.197       0.274\n",
       "zipcode_98039        1.1320      0.039     29.291      0.000       1.056       1.208\n",
       "zipcode_98040        0.7627      0.026     29.727      0.000       0.712       0.813\n",
       "zipcode_98042        0.0992      0.017      5.911      0.000       0.066       0.132\n",
       "zipcode_98045        0.4588      0.036     12.865      0.000       0.389       0.529\n",
       "zipcode_98052        0.5066      0.033     15.178      0.000       0.441       0.572\n",
       "zipcode_98053        0.4908      0.036     13.715      0.000       0.421       0.561\n",
       "zipcode_98055        0.1052      0.020      5.200      0.000       0.066       0.145\n",
       "zipcode_98056        0.2591      0.022     11.720      0.000       0.216       0.302\n",
       "zipcode_98058        0.1409      0.019      7.327      0.000       0.103       0.179\n",
       "zipcode_98059        0.2999      0.022     13.837      0.000       0.257       0.342\n",
       "zipcode_98065        0.4632      0.033     13.942      0.000       0.398       0.528\n",
       "zipcode_98070        0.1606      0.026      6.186      0.000       0.110       0.211\n",
       "zipcode_98072        0.2896      0.039      7.413      0.000       0.213       0.366\n",
       "zipcode_98074        0.4830      0.032     15.264      0.000       0.421       0.545\n",
       "zipcode_98075        0.5083      0.030     16.761      0.000       0.449       0.568\n",
       "zipcode_98077        0.2856      0.041      7.037      0.000       0.206       0.365\n",
       "zipcode_98092        0.0612      0.016      3.801      0.000       0.030       0.093\n",
       "zipcode_98102        0.8143      0.034     24.065      0.000       0.748       0.881\n",
       "zipcode_98103        0.6574      0.032     20.729      0.000       0.595       0.720\n",
       "zipcode_98105        0.7881      0.032     24.299      0.000       0.725       0.852\n",
       "zipcode_98106        0.2383      0.024     10.071      0.000       0.192       0.285\n",
       "zipcode_98107        0.6729      0.033     20.561      0.000       0.609       0.737\n",
       "zipcode_98108        0.2555      0.026      9.916      0.000       0.205       0.306\n",
       "zipcode_98109        0.8520      0.034     25.291      0.000       0.786       0.918\n",
       "zipcode_98112        0.9203      0.030     31.023      0.000       0.862       0.978\n",
       "zipcode_98115        0.6430      0.032     19.941      0.000       0.580       0.706\n",
       "zipcode_98116        0.6127      0.026     23.280      0.000       0.561       0.664\n",
       "zipcode_98117        0.6127      0.033     18.751      0.000       0.549       0.677\n",
       "zipcode_98118        0.3700      0.023     16.070      0.000       0.325       0.415\n",
       "zipcode_98119        0.8159      0.032     25.671      0.000       0.754       0.878\n",
       "zipcode_98122        0.6868      0.028     24.245      0.000       0.631       0.742\n",
       "zipcode_98125        0.3670      0.035     10.544      0.000       0.299       0.435\n",
       "zipcode_98126        0.4187      0.024     17.234      0.000       0.371       0.466\n",
       "zipcode_98133        0.2297      0.036      6.384      0.000       0.159       0.300\n",
       "zipcode_98136        0.5547      0.025     22.328      0.000       0.506       0.603\n",
       "zipcode_98144        0.5616      0.026     21.198      0.000       0.510       0.614\n",
       "zipcode_98146        0.1673      0.022      7.520      0.000       0.124       0.211\n",
       "zipcode_98148        0.0857      0.029      2.923      0.003       0.028       0.143\n",
       "zipcode_98155        0.1938      0.037      5.183      0.000       0.120       0.267\n",
       "zipcode_98166        0.2049      0.020     10.144      0.000       0.165       0.245\n",
       "zipcode_98168       -0.0006      0.022     -0.029      0.977      -0.043       0.042\n",
       "zipcode_98177        0.3314      0.038      8.805      0.000       0.258       0.405\n",
       "zipcode_98178        0.0838      0.022      3.815      0.000       0.041       0.127\n",
       "zipcode_98188        0.0377      0.022      1.678      0.093      -0.006       0.082\n",
       "zipcode_98198       -0.0021      0.017     -0.123      0.902      -0.036       0.032\n",
       "zipcode_98199        0.6567      0.031     21.168      0.000       0.596       0.717\n",
       "month_of_date_2      0.0150      0.008      1.771      0.077      -0.002       0.032\n",
       "month_of_date_3      0.0424      0.008      5.457      0.000       0.027       0.058\n",
       "month_of_date_4      0.0657      0.008      8.671      0.000       0.051       0.081\n",
       "month_of_date_5      0.0075      0.007      1.002      0.317      -0.007       0.022\n",
       "month_of_date_6     -0.0014      0.008     -0.188      0.851      -0.016       0.014\n",
       "month_of_date_7     -0.0079      0.008     -1.045      0.296      -0.023       0.007\n",
       "month_of_date_8     -0.0070      0.008     -0.898      0.369      -0.022       0.008\n",
       "month_of_date_9     -0.0124      0.008     -1.580      0.114      -0.028       0.003\n",
       "month_of_date_10    -0.0143      0.008     -1.830      0.067      -0.030       0.001\n",
       "month_of_date_11    -0.0136      0.008     -1.659      0.097      -0.030       0.002\n",
       "month_of_date_12    -0.0047      0.008     -0.575      0.565      -0.021       0.011\n",
       "==============================================================================\n",
       "Omnibus:                     1263.108   Durbin-Watson:                   2.025\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5617.621\n",
       "Skew:                          -0.222   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.758   Cond. No.                     6.31e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model3_20_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "a1b90583",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "5617.620656346999\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.2216147136327228\n",
      "\n",
      " Kurtosis ----\n",
      "5.758188731970492\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-41-42a69f1a355e>:13: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model3_20_ols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "6230b10d",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.659959e+03\n",
      "p-value                        5.934956e-272\n",
      "f-value                         1.586156e+01\n",
      "f p-value                      5.234348e-288\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.959992\n",
      "p-value      0.970256\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model3_20_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1f92340",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 3: Testing 50 Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "01002067",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create linear regression model for price and setting up cross validation (x3)\n",
    "model3_50 = LinearRegression()\n",
    "model3_50.fit(X_train[key_cols['key_cols_50']], y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "bfeac245",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.859, the median R-squared values for the test sets were 0.857. These values resulted in a differential of 0.00137'"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way (x3)\n",
    "model3_50_cval = cross_val(model3_50,\n",
    "                           X=X_train[key_cols['key_cols_50']],\n",
    "                           y=y_train,\n",
    "                           random_state=0,)\n",
    "\n",
    "model3_50_cval_summary = cval_summary(model3_50_cval[0],\n",
    "                                      model3_50_cval[1],\n",
    "                                      abs(model3_50_cval[0]-model3_50_cval[1]))\n",
    "\n",
    "model3_50_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "cddd9ae2",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.858, and the R-squared value for the test set was 0.85. These values resulted in a differential of 0.00847. The RMSE of our model predicitons was 150467.63'"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model3_50_scores = score_model(model3_50,\n",
    "                               X_train[key_cols['key_cols_50']],\n",
    "                               X_test[key_cols['key_cols_50']],\n",
    "                               y_train,\n",
    "                               y_test,\n",
    "                               log=True)\n",
    "\n",
    "model3_50_summary = model_summary(model3_50_scores[0],\n",
    "                                  model3_50_scores[1],\n",
    "                                  abs(model3_50_scores[0]-model3_50_scores[1]),\n",
    "                                  model3_50_scores[2])\n",
    "model3_50_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "8989df45",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model3_50, X_test[key_cols['key_cols_50']], y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "ef420b6d",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model3_50_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "d838baac",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th>  <td>   0.889</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.888</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1194.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 16 Jul 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:18:01</td>     <th>  Log-Likelihood:    </th>  <td>  5513.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>-1.080e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17160</td>      <th>  BIC:               </th>  <td>  -9896.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   115</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -145.5581</td> <td>   15.427</td> <td>   -9.435</td> <td> 0.000</td> <td> -175.796</td> <td> -115.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>   -0.0468</td> <td>    0.007</td> <td>   -7.013</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td>    0.0578</td> <td>    0.006</td> <td>    9.346</td> <td> 0.000</td> <td>    0.046</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>    0.2778</td> <td>    0.019</td> <td>   14.391</td> <td> 0.000</td> <td>    0.240</td> <td>    0.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td>    0.0741</td> <td>    0.004</td> <td>   18.779</td> <td> 0.000</td> <td>    0.066</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td>    0.1536</td> <td>    0.017</td> <td>    8.894</td> <td> 0.000</td> <td>    0.120</td> <td>    0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td> 9.381e-06</td> <td> 9.04e-06</td> <td>    1.038</td> <td> 0.299</td> <td>-8.33e-06</td> <td> 2.71e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   25.7463</td> <td>    3.699</td> <td>    6.960</td> <td> 0.000</td> <td>   18.495</td> <td>   32.997</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>   -0.4412</td> <td>    0.055</td> <td>   -7.962</td> <td> 0.000</td> <td>   -0.550</td> <td>   -0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>    0.1579</td> <td>    0.007</td> <td>   21.300</td> <td> 0.000</td> <td>    0.143</td> <td>    0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>   -0.0217</td> <td>    0.004</td> <td>   -4.959</td> <td> 0.000</td> <td>   -0.030</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>    0.0061</td> <td>    0.005</td> <td>    1.121</td> <td> 0.262</td> <td>   -0.005</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>   -0.0088</td> <td>    0.005</td> <td>   -1.869</td> <td> 0.062</td> <td>   -0.018</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td>    0.0046</td> <td>    0.017</td> <td>    0.277</td> <td> 0.782</td> <td>   -0.028</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>   -0.0839</td> <td>    0.010</td> <td>   -8.328</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td>   -0.0662</td> <td>    0.067</td> <td>   -0.985</td> <td> 0.325</td> <td>   -0.198</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>    0.4569</td> <td>    0.020</td> <td>   22.658</td> <td> 0.000</td> <td>    0.417</td> <td>    0.496</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td>    0.1251</td> <td>    0.011</td> <td>   10.963</td> <td> 0.000</td> <td>    0.103</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td>    0.1015</td> <td>    0.007</td> <td>   14.622</td> <td> 0.000</td> <td>    0.088</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td>    0.1752</td> <td>    0.009</td> <td>   18.473</td> <td> 0.000</td> <td>    0.157</td> <td>    0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td>    0.2847</td> <td>    0.014</td> <td>   20.409</td> <td> 0.000</td> <td>    0.257</td> <td>    0.312</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td>    0.1887</td> <td>    0.042</td> <td>    4.447</td> <td> 0.000</td> <td>    0.106</td> <td>    0.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td>    0.3081</td> <td>    0.040</td> <td>    7.703</td> <td> 0.000</td> <td>    0.230</td> <td>    0.387</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>    0.3500</td> <td>    0.040</td> <td>    8.742</td> <td> 0.000</td> <td>    0.271</td> <td>    0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td>    0.4202</td> <td>    0.040</td> <td>   10.446</td> <td> 0.000</td> <td>    0.341</td> <td>    0.499</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>   -0.6135</td> <td>    0.182</td> <td>   -3.375</td> <td> 0.001</td> <td>   -0.970</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>   -0.5416</td> <td>    0.178</td> <td>   -3.050</td> <td> 0.002</td> <td>   -0.890</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>   -0.4886</td> <td>    0.177</td> <td>   -2.757</td> <td> 0.006</td> <td>   -0.836</td> <td>   -0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>   -0.4195</td> <td>    0.177</td> <td>   -2.367</td> <td> 0.018</td> <td>   -0.767</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>   -0.3398</td> <td>    0.177</td> <td>   -1.916</td> <td> 0.055</td> <td>   -0.687</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>   -0.2221</td> <td>    0.177</td> <td>   -1.252</td> <td> 0.211</td> <td>   -0.570</td> <td>    0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>   -0.1338</td> <td>    0.178</td> <td>   -0.754</td> <td> 0.451</td> <td>   -0.482</td> <td>    0.214</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>   -0.0152</td> <td>    0.178</td> <td>   -0.085</td> <td> 0.932</td> <td>   -0.364</td> <td>    0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>    0.1104</td> <td>    0.179</td> <td>    0.617</td> <td> 0.537</td> <td>   -0.240</td> <td>    0.461</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td>    0.3994</td> <td>    0.186</td> <td>    2.149</td> <td> 0.032</td> <td>    0.035</td> <td>    0.764</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td>    0.0713</td> <td>    0.008</td> <td>    9.384</td> <td> 0.000</td> <td>    0.056</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td>    0.0271</td> <td>    0.018</td> <td>    1.483</td> <td> 0.138</td> <td>   -0.009</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td>    0.0097</td> <td>    0.016</td> <td>    0.603</td> <td> 0.546</td> <td>   -0.022</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>    0.9800</td> <td>    0.029</td> <td>   33.933</td> <td> 0.000</td> <td>    0.923</td> <td>    1.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td>    0.6090</td> <td>    0.031</td> <td>   19.720</td> <td> 0.000</td> <td>    0.548</td> <td>    0.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td>    0.5609</td> <td>    0.025</td> <td>   22.161</td> <td> 0.000</td> <td>    0.511</td> <td>    0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td>    0.5554</td> <td>    0.032</td> <td>   17.420</td> <td> 0.000</td> <td>    0.493</td> <td>    0.618</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td>    0.5676</td> <td>    0.030</td> <td>   18.834</td> <td> 0.000</td> <td>    0.509</td> <td>    0.627</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td>    0.3270</td> <td>    0.027</td> <td>   12.206</td> <td> 0.000</td> <td>    0.274</td> <td>    0.379</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>    0.2429</td> <td>    0.039</td> <td>    6.170</td> <td> 0.000</td> <td>    0.166</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>    0.2746</td> <td>    0.043</td> <td>    6.409</td> <td> 0.000</td> <td>    0.191</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td>    0.2127</td> <td>    0.042</td> <td>    5.006</td> <td> 0.000</td> <td>    0.129</td> <td>    0.296</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td>    0.2200</td> <td>    0.024</td> <td>    9.303</td> <td> 0.000</td> <td>    0.174</td> <td>    0.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>   -0.0567</td> <td>    0.015</td> <td>   -3.863</td> <td> 0.000</td> <td>   -0.085</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>    0.4545</td> <td>    0.037</td> <td>   12.220</td> <td> 0.000</td> <td>    0.382</td> <td>    0.527</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td>    0.4955</td> <td>    0.026</td> <td>   19.251</td> <td> 0.000</td> <td>    0.445</td> <td>    0.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td>    0.1822</td> <td>    0.038</td> <td>    4.767</td> <td> 0.000</td> <td>    0.107</td> <td>    0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td>    0.5909</td> <td>    0.030</td> <td>   20.002</td> <td> 0.000</td> <td>    0.533</td> <td>    0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td>    0.0561</td> <td>    0.018</td> <td>    3.176</td> <td> 0.001</td> <td>    0.021</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>    0.0617</td> <td>    0.018</td> <td>    3.389</td> <td> 0.001</td> <td>    0.026</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td>   -0.0463</td> <td>    0.021</td> <td>   -2.185</td> <td> 0.029</td> <td>   -0.088</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td>    0.6330</td> <td>    0.033</td> <td>   19.291</td> <td> 0.000</td> <td>    0.569</td> <td>    0.697</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td>    0.3612</td> <td>    0.035</td> <td>   10.290</td> <td> 0.000</td> <td>    0.292</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td>    0.2356</td> <td>    0.020</td> <td>   11.983</td> <td> 0.000</td> <td>    0.197</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td>    1.1320</td> <td>    0.039</td> <td>   29.291</td> <td> 0.000</td> <td>    1.056</td> <td>    1.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td>    0.7627</td> <td>    0.026</td> <td>   29.727</td> <td> 0.000</td> <td>    0.712</td> <td>    0.813</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>    0.0992</td> <td>    0.017</td> <td>    5.911</td> <td> 0.000</td> <td>    0.066</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td>    0.4588</td> <td>    0.036</td> <td>   12.865</td> <td> 0.000</td> <td>    0.389</td> <td>    0.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td>    0.5066</td> <td>    0.033</td> <td>   15.178</td> <td> 0.000</td> <td>    0.441</td> <td>    0.572</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td>    0.4908</td> <td>    0.036</td> <td>   13.715</td> <td> 0.000</td> <td>    0.421</td> <td>    0.561</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td>    0.1052</td> <td>    0.020</td> <td>    5.200</td> <td> 0.000</td> <td>    0.066</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td>    0.2591</td> <td>    0.022</td> <td>   11.720</td> <td> 0.000</td> <td>    0.216</td> <td>    0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td>    0.1409</td> <td>    0.019</td> <td>    7.327</td> <td> 0.000</td> <td>    0.103</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td>    0.2999</td> <td>    0.022</td> <td>   13.837</td> <td> 0.000</td> <td>    0.257</td> <td>    0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td>    0.4632</td> <td>    0.033</td> <td>   13.942</td> <td> 0.000</td> <td>    0.398</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>    0.1606</td> <td>    0.026</td> <td>    6.186</td> <td> 0.000</td> <td>    0.110</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td>    0.2896</td> <td>    0.039</td> <td>    7.413</td> <td> 0.000</td> <td>    0.213</td> <td>    0.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>    0.4830</td> <td>    0.032</td> <td>   15.264</td> <td> 0.000</td> <td>    0.421</td> <td>    0.545</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td>    0.5083</td> <td>    0.030</td> <td>   16.761</td> <td> 0.000</td> <td>    0.449</td> <td>    0.568</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>    0.2856</td> <td>    0.041</td> <td>    7.037</td> <td> 0.000</td> <td>    0.206</td> <td>    0.365</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>    0.0612</td> <td>    0.016</td> <td>    3.801</td> <td> 0.000</td> <td>    0.030</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td>    0.8143</td> <td>    0.034</td> <td>   24.065</td> <td> 0.000</td> <td>    0.748</td> <td>    0.881</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td>    0.6574</td> <td>    0.032</td> <td>   20.729</td> <td> 0.000</td> <td>    0.595</td> <td>    0.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td>    0.7881</td> <td>    0.032</td> <td>   24.299</td> <td> 0.000</td> <td>    0.725</td> <td>    0.852</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>    0.2383</td> <td>    0.024</td> <td>   10.071</td> <td> 0.000</td> <td>    0.192</td> <td>    0.285</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>    0.6729</td> <td>    0.033</td> <td>   20.561</td> <td> 0.000</td> <td>    0.609</td> <td>    0.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td>    0.2555</td> <td>    0.026</td> <td>    9.916</td> <td> 0.000</td> <td>    0.205</td> <td>    0.306</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td>    0.8520</td> <td>    0.034</td> <td>   25.291</td> <td> 0.000</td> <td>    0.786</td> <td>    0.918</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td>    0.9203</td> <td>    0.030</td> <td>   31.023</td> <td> 0.000</td> <td>    0.862</td> <td>    0.978</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td>    0.6430</td> <td>    0.032</td> <td>   19.941</td> <td> 0.000</td> <td>    0.580</td> <td>    0.706</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td>    0.6127</td> <td>    0.026</td> <td>   23.280</td> <td> 0.000</td> <td>    0.561</td> <td>    0.664</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td>    0.6127</td> <td>    0.033</td> <td>   18.751</td> <td> 0.000</td> <td>    0.549</td> <td>    0.677</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>    0.3700</td> <td>    0.023</td> <td>   16.070</td> <td> 0.000</td> <td>    0.325</td> <td>    0.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td>    0.8159</td> <td>    0.032</td> <td>   25.671</td> <td> 0.000</td> <td>    0.754</td> <td>    0.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>    0.6868</td> <td>    0.028</td> <td>   24.245</td> <td> 0.000</td> <td>    0.631</td> <td>    0.742</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>    0.3670</td> <td>    0.035</td> <td>   10.544</td> <td> 0.000</td> <td>    0.299</td> <td>    0.435</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td>    0.4187</td> <td>    0.024</td> <td>   17.234</td> <td> 0.000</td> <td>    0.371</td> <td>    0.466</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td>    0.2297</td> <td>    0.036</td> <td>    6.384</td> <td> 0.000</td> <td>    0.159</td> <td>    0.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td>    0.5547</td> <td>    0.025</td> <td>   22.328</td> <td> 0.000</td> <td>    0.506</td> <td>    0.603</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>    0.5616</td> <td>    0.026</td> <td>   21.198</td> <td> 0.000</td> <td>    0.510</td> <td>    0.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td>    0.1673</td> <td>    0.022</td> <td>    7.520</td> <td> 0.000</td> <td>    0.124</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>    0.0857</td> <td>    0.029</td> <td>    2.923</td> <td> 0.003</td> <td>    0.028</td> <td>    0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>    0.1938</td> <td>    0.037</td> <td>    5.183</td> <td> 0.000</td> <td>    0.120</td> <td>    0.267</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td>    0.2049</td> <td>    0.020</td> <td>   10.144</td> <td> 0.000</td> <td>    0.165</td> <td>    0.245</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td>   -0.0006</td> <td>    0.022</td> <td>   -0.029</td> <td> 0.977</td> <td>   -0.043</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td>    0.3314</td> <td>    0.038</td> <td>    8.805</td> <td> 0.000</td> <td>    0.258</td> <td>    0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td>    0.0838</td> <td>    0.022</td> <td>    3.815</td> <td> 0.000</td> <td>    0.041</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td>    0.0377</td> <td>    0.022</td> <td>    1.678</td> <td> 0.093</td> <td>   -0.006</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>   -0.0021</td> <td>    0.017</td> <td>   -0.123</td> <td> 0.902</td> <td>   -0.036</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td>    0.6567</td> <td>    0.031</td> <td>   21.168</td> <td> 0.000</td> <td>    0.596</td> <td>    0.717</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>    0.0150</td> <td>    0.008</td> <td>    1.771</td> <td> 0.077</td> <td>   -0.002</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td>    0.0424</td> <td>    0.008</td> <td>    5.457</td> <td> 0.000</td> <td>    0.027</td> <td>    0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td>    0.0657</td> <td>    0.008</td> <td>    8.671</td> <td> 0.000</td> <td>    0.051</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td>    0.0075</td> <td>    0.007</td> <td>    1.002</td> <td> 0.317</td> <td>   -0.007</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>   -0.0014</td> <td>    0.008</td> <td>   -0.188</td> <td> 0.851</td> <td>   -0.016</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>   -0.0079</td> <td>    0.008</td> <td>   -1.045</td> <td> 0.296</td> <td>   -0.023</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>   -0.0070</td> <td>    0.008</td> <td>   -0.898</td> <td> 0.369</td> <td>   -0.022</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>   -0.0124</td> <td>    0.008</td> <td>   -1.580</td> <td> 0.114</td> <td>   -0.028</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>   -0.0143</td> <td>    0.008</td> <td>   -1.830</td> <td> 0.067</td> <td>   -0.030</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>   -0.0136</td> <td>    0.008</td> <td>   -1.659</td> <td> 0.097</td> <td>   -0.030</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>   -0.0047</td> <td>    0.008</td> <td>   -0.575</td> <td> 0.565</td> <td>   -0.021</td> <td>    0.011</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>1263.108</td> <th>  Durbin-Watson:     </th> <td>   2.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>5617.621</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td>-0.222</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 5.758</td>  <th>  Cond. No.          </th> <td>6.31e+06</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.889\n",
       "Model:                            OLS   Adj. R-squared:                  0.888\n",
       "Method:                 Least Squares   F-statistic:                     1194.\n",
       "Date:                Fri, 16 Jul 2021   Prob (F-statistic):               0.00\n",
       "Time:                        15:18:01   Log-Likelihood:                 5513.8\n",
       "No. Observations:               17276   AIC:                        -1.080e+04\n",
       "Df Residuals:                   17160   BIC:                            -9896.\n",
       "Df Model:                         115                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -145.5581     15.427     -9.435      0.000    -175.796    -115.320\n",
       "bedrooms            -0.0468      0.007     -7.013      0.000      -0.060      -0.034\n",
       "bathrooms            0.0578      0.006      9.346      0.000       0.046       0.070\n",
       "sqft_living          0.2778      0.019     14.391      0.000       0.240       0.316\n",
       "sqft_lot             0.0741      0.004     18.779      0.000       0.066       0.082\n",
       "sqft_above           0.1536      0.017      8.894      0.000       0.120       0.187\n",
       "sqft_basement     9.381e-06   9.04e-06      1.038      0.299   -8.33e-06    2.71e-05\n",
       "lat                 25.7463      3.699      6.960      0.000      18.495      32.997\n",
       "long                -0.4412      0.055     -7.962      0.000      -0.550      -0.333\n",
       "sqft_living15        0.1579      0.007     21.300      0.000       0.143       0.172\n",
       "sqft_lot15          -0.0217      0.004     -4.959      0.000      -0.030      -0.013\n",
       "floors_1.5           0.0061      0.005      1.121      0.262      -0.005       0.017\n",
       "floors_2.0          -0.0088      0.005     -1.869      0.062      -0.018       0.000\n",
       "floors_2.5           0.0046      0.017      0.277      0.782      -0.028       0.037\n",
       "floors_3.0          -0.0839      0.010     -8.328      0.000      -0.104      -0.064\n",
       "floors_3.5          -0.0662      0.067     -0.985      0.325      -0.198       0.066\n",
       "waterfront_1         0.4569      0.020     22.658      0.000       0.417       0.496\n",
       "view_1               0.1251      0.011     10.963      0.000       0.103       0.148\n",
       "view_2               0.1015      0.007     14.622      0.000       0.088       0.115\n",
       "view_3               0.1752      0.009     18.473      0.000       0.157       0.194\n",
       "view_4               0.2847      0.014     20.409      0.000       0.257       0.312\n",
       "condition_2          0.1887      0.042      4.447      0.000       0.106       0.272\n",
       "condition_3          0.3081      0.040      7.703      0.000       0.230       0.387\n",
       "condition_4          0.3500      0.040      8.742      0.000       0.271       0.428\n",
       "condition_5          0.4202      0.040     10.446      0.000       0.341       0.499\n",
       "grade_4             -0.6135      0.182     -3.375      0.001      -0.970      -0.257\n",
       "grade_5             -0.5416      0.178     -3.050      0.002      -0.890      -0.193\n",
       "grade_6             -0.4886      0.177     -2.757      0.006      -0.836      -0.141\n",
       "grade_7             -0.4195      0.177     -2.367      0.018      -0.767      -0.072\n",
       "grade_8             -0.3398      0.177     -1.916      0.055      -0.687       0.008\n",
       "grade_9             -0.2221      0.177     -1.252      0.211      -0.570       0.126\n",
       "grade_10            -0.1338      0.178     -0.754      0.451      -0.482       0.214\n",
       "grade_11            -0.0152      0.178     -0.085      0.932      -0.364       0.333\n",
       "grade_12             0.1104      0.179      0.617      0.537      -0.240       0.461\n",
       "grade_13             0.3994      0.186      2.149      0.032       0.035       0.764\n",
       "if_renovated_1       0.0713      0.008      9.384      0.000       0.056       0.086\n",
       "zipcode_98002        0.0271      0.018      1.483      0.138      -0.009       0.063\n",
       "zipcode_98003        0.0097      0.016      0.603      0.546      -0.022       0.041\n",
       "zipcode_98004        0.9800      0.029     33.933      0.000       0.923       1.037\n",
       "zipcode_98005        0.6090      0.031     19.720      0.000       0.548       0.669\n",
       "zipcode_98006        0.5609      0.025     22.161      0.000       0.511       0.611\n",
       "zipcode_98007        0.5554      0.032     17.420      0.000       0.493       0.618\n",
       "zipcode_98008        0.5676      0.030     18.834      0.000       0.509       0.627\n",
       "zipcode_98010        0.3270      0.027     12.206      0.000       0.274       0.379\n",
       "zipcode_98011        0.2429      0.039      6.170      0.000       0.166       0.320\n",
       "zipcode_98014        0.2746      0.043      6.409      0.000       0.191       0.359\n",
       "zipcode_98019        0.2127      0.042      5.006      0.000       0.129       0.296\n",
       "zipcode_98022        0.2200      0.024      9.303      0.000       0.174       0.266\n",
       "zipcode_98023       -0.0567      0.015     -3.863      0.000      -0.085      -0.028\n",
       "zipcode_98024        0.4545      0.037     12.220      0.000       0.382       0.527\n",
       "zipcode_98027        0.4955      0.026     19.251      0.000       0.445       0.546\n",
       "zipcode_98028        0.1822      0.038      4.767      0.000       0.107       0.257\n",
       "zipcode_98029        0.5909      0.030     20.002      0.000       0.533       0.649\n",
       "zipcode_98030        0.0561      0.018      3.176      0.001       0.021       0.091\n",
       "zipcode_98031        0.0617      0.018      3.389      0.001       0.026       0.097\n",
       "zipcode_98032       -0.0463      0.021     -2.185      0.029      -0.088      -0.005\n",
       "zipcode_98033        0.6330      0.033     19.291      0.000       0.569       0.697\n",
       "zipcode_98034        0.3612      0.035     10.290      0.000       0.292       0.430\n",
       "zipcode_98038        0.2356      0.020     11.983      0.000       0.197       0.274\n",
       "zipcode_98039        1.1320      0.039     29.291      0.000       1.056       1.208\n",
       "zipcode_98040        0.7627      0.026     29.727      0.000       0.712       0.813\n",
       "zipcode_98042        0.0992      0.017      5.911      0.000       0.066       0.132\n",
       "zipcode_98045        0.4588      0.036     12.865      0.000       0.389       0.529\n",
       "zipcode_98052        0.5066      0.033     15.178      0.000       0.441       0.572\n",
       "zipcode_98053        0.4908      0.036     13.715      0.000       0.421       0.561\n",
       "zipcode_98055        0.1052      0.020      5.200      0.000       0.066       0.145\n",
       "zipcode_98056        0.2591      0.022     11.720      0.000       0.216       0.302\n",
       "zipcode_98058        0.1409      0.019      7.327      0.000       0.103       0.179\n",
       "zipcode_98059        0.2999      0.022     13.837      0.000       0.257       0.342\n",
       "zipcode_98065        0.4632      0.033     13.942      0.000       0.398       0.528\n",
       "zipcode_98070        0.1606      0.026      6.186      0.000       0.110       0.211\n",
       "zipcode_98072        0.2896      0.039      7.413      0.000       0.213       0.366\n",
       "zipcode_98074        0.4830      0.032     15.264      0.000       0.421       0.545\n",
       "zipcode_98075        0.5083      0.030     16.761      0.000       0.449       0.568\n",
       "zipcode_98077        0.2856      0.041      7.037      0.000       0.206       0.365\n",
       "zipcode_98092        0.0612      0.016      3.801      0.000       0.030       0.093\n",
       "zipcode_98102        0.8143      0.034     24.065      0.000       0.748       0.881\n",
       "zipcode_98103        0.6574      0.032     20.729      0.000       0.595       0.720\n",
       "zipcode_98105        0.7881      0.032     24.299      0.000       0.725       0.852\n",
       "zipcode_98106        0.2383      0.024     10.071      0.000       0.192       0.285\n",
       "zipcode_98107        0.6729      0.033     20.561      0.000       0.609       0.737\n",
       "zipcode_98108        0.2555      0.026      9.916      0.000       0.205       0.306\n",
       "zipcode_98109        0.8520      0.034     25.291      0.000       0.786       0.918\n",
       "zipcode_98112        0.9203      0.030     31.023      0.000       0.862       0.978\n",
       "zipcode_98115        0.6430      0.032     19.941      0.000       0.580       0.706\n",
       "zipcode_98116        0.6127      0.026     23.280      0.000       0.561       0.664\n",
       "zipcode_98117        0.6127      0.033     18.751      0.000       0.549       0.677\n",
       "zipcode_98118        0.3700      0.023     16.070      0.000       0.325       0.415\n",
       "zipcode_98119        0.8159      0.032     25.671      0.000       0.754       0.878\n",
       "zipcode_98122        0.6868      0.028     24.245      0.000       0.631       0.742\n",
       "zipcode_98125        0.3670      0.035     10.544      0.000       0.299       0.435\n",
       "zipcode_98126        0.4187      0.024     17.234      0.000       0.371       0.466\n",
       "zipcode_98133        0.2297      0.036      6.384      0.000       0.159       0.300\n",
       "zipcode_98136        0.5547      0.025     22.328      0.000       0.506       0.603\n",
       "zipcode_98144        0.5616      0.026     21.198      0.000       0.510       0.614\n",
       "zipcode_98146        0.1673      0.022      7.520      0.000       0.124       0.211\n",
       "zipcode_98148        0.0857      0.029      2.923      0.003       0.028       0.143\n",
       "zipcode_98155        0.1938      0.037      5.183      0.000       0.120       0.267\n",
       "zipcode_98166        0.2049      0.020     10.144      0.000       0.165       0.245\n",
       "zipcode_98168       -0.0006      0.022     -0.029      0.977      -0.043       0.042\n",
       "zipcode_98177        0.3314      0.038      8.805      0.000       0.258       0.405\n",
       "zipcode_98178        0.0838      0.022      3.815      0.000       0.041       0.127\n",
       "zipcode_98188        0.0377      0.022      1.678      0.093      -0.006       0.082\n",
       "zipcode_98198       -0.0021      0.017     -0.123      0.902      -0.036       0.032\n",
       "zipcode_98199        0.6567      0.031     21.168      0.000       0.596       0.717\n",
       "month_of_date_2      0.0150      0.008      1.771      0.077      -0.002       0.032\n",
       "month_of_date_3      0.0424      0.008      5.457      0.000       0.027       0.058\n",
       "month_of_date_4      0.0657      0.008      8.671      0.000       0.051       0.081\n",
       "month_of_date_5      0.0075      0.007      1.002      0.317      -0.007       0.022\n",
       "month_of_date_6     -0.0014      0.008     -0.188      0.851      -0.016       0.014\n",
       "month_of_date_7     -0.0079      0.008     -1.045      0.296      -0.023       0.007\n",
       "month_of_date_8     -0.0070      0.008     -0.898      0.369      -0.022       0.008\n",
       "month_of_date_9     -0.0124      0.008     -1.580      0.114      -0.028       0.003\n",
       "month_of_date_10    -0.0143      0.008     -1.830      0.067      -0.030       0.001\n",
       "month_of_date_11    -0.0136      0.008     -1.659      0.097      -0.030       0.002\n",
       "month_of_date_12    -0.0047      0.008     -0.575      0.565      -0.021       0.011\n",
       "==============================================================================\n",
       "Omnibus:                     1263.108   Durbin-Watson:                   2.025\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5617.621\n",
       "Skew:                          -0.222   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.758   Cond. No.                     6.31e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model3_50_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "bf281bfc",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "5617.620656346999\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.2216147136327228\n",
      "\n",
      " Kurtosis ----\n",
      "5.758188731970492\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-41-42a69f1a355e>:13: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model3_50_ols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "8b0d293d",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.659959e+03\n",
      "p-value                        5.934956e-272\n",
      "f-value                         1.586156e+01\n",
      "f p-value                      5.234348e-288\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.959992\n",
      "p-value      0.970256\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYoAAAEbCAYAAADERMP2AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/d3fzzAAAACXBIWXMAAAsTAAALEwEAmpwYAAB+OElEQVR4nO29eZxUxbn//6mz9N4z07OyqhFlESEoKCoJKkQIAURxF6NGjEpurub+IokCidcNo0GjKBI1iXqjUVEnkoTgEgwxXzUKGAUUFDAKMjDMPr33Wer3R51zpvfu2bp7oN68hpnus9WpPl1P1bMSSikFh8PhcDgZEIrdAA6Hw+GUNlxQcDgcDicrXFBwOBwOJytcUHA4HA4nK1xQcDgcDicrXFBwOJy0JDtEcgfJIxcuKDj9zne/+12MGjUq4eeEE07AaaedhkWLFmHPnj19er1bbrkFc+bMybrPtGnTcMcdd/Tpdevr6zFq1Ci0trb26Xl7w8MPP5zS9/E/e/bswVdffYVRo0bh1VdfBQAcPHgQCxcuRFtbm3WeNWvW4MEHH+yT9px00km9Pg+nsEjFbgDnyODkk0/GT3/6U+t1LBbDzp07sWrVKixcuBCvvfYa7HZ7n1zrBz/4AUKhUJ+c63DA4XDg6aefTrtt2LBhIITghRdewDHHHAMAeOedd/D//t//S9jv17/+Nc4666x+bimnVOGCglMQysrKMGHChIT3Tj31VDgcDvzsZz/Dv/71L5x55pl9cq2jjjqqT85zuCAIQkrfJ5NrO+fIhqueOEXF4/GkvPfll1/iBz/4AU466SRMmjQJixcvTlDnhEIhLF26FN/4xjcwfvx4nH/++Xj99det7cmqp6amJtx4442YOHEivvnNb+KVV15JuN57772HUaNGYdu2bQnvT5o0CQ8//LD1euvWrfj+97+PSZMm4cQTT8TMmTPx/PPPZ7y3pqYm3HTTTZg8eTK+/vWv4/LLL8f777+fcf/p06fj5z//ecJ7HR0dOPHEE/HSSy8BAP74xz9i9uzZGDduHKZOnYrly5cjGo1mPGc+xKue6uvrceuttwIATj/9dDz88MOYNm0a9u/fj2effRajRo2yjtu+fTuuuuoqfP3rX8dpp52GO++8E+FwOOHcv/3tb3H22WdjwoQJWLx4MSKRSK/ayikOXFBwCgKlFKqqWj/BYBDvvfcefvWrX2HIkCGYNGkSAKC5uRmXX345GhoacN999+H222/Hhx9+iIULFyIWiwEA7r33XvzrX//C0qVL8dhjj2HEiBG46aab0to6NE3DwoULsX37dtx555245ZZbsHLlSjQ2Nnar/Q0NDbjyyivhcrnw0EMPYdWqVfja176G2267DTt37kx7zK233oq9e/finnvuwaOPPgqn04nrr78e7e3tafefPXs2Xn/9dWiaZr33xhtvAABmzJiBf//731iyZAnmzJmD3/72t7jhhhvw/PPP45FHHsnZ/vi+N3/SGafPOussLFq0CADwm9/8BhdddBEeeeQR1NTUYObMmXjhhRcAALt378YVV1wBQggefPBB3HzzzfjrX/+KH/3oR9a5fvvb3+L+++/H+eefj5UrV0JRlIwqME5pw1VPnILwj3/8A2PHjk14z+Fw4PTTT8ett94Kt9sNAHj66acRjUbxu9/9DpWVlQCA8ePHY+bMmfjrX/+K8847D5s3b8aUKVMwa9YsAMDEiRNRXV0NVVVTrrtx40Z8+umneOGFFyz1yjHHHIP58+d3q/27du3ChAkTsGLFCsiyDAD4+te/jsmTJ2Pz5s0YPXp0yjGbN2/GokWLMG3aNADA8ccfjyeffBLhcBgVFRUp+8+dOxePPfYY3n//fZx++ukAgPXr12Pq1KkoKyvDli1b4HQ6sXDhQthsNpx66qmQZdlqTyZCoVBK3wPAQw89hG9/+9sJ71VWVlqqu7Fjx6KyshKDBg2CzWZDdXW11YePPvooqqqq8Pjjj8NmswFg/bpgwQJs2rQJEydOxBNPPIGLLroIN954IwDgm9/8JubNm4d9+/ZlbS+n9OCCglMQJk6caKk0du3ahXvvvRenn3467rvvPmugAZgaaMKECSgrK7MG/sGDB2PEiBF49913cd555+Gkk07CmjVrcOjQIZx99tk466yzcMstt6S97gcffIDy8vIEHfzYsWMxdOjQbrX/zDPPxJlnnoloNIqdO3fiiy++sFRV5konmZNOOgkrV67Ep59+ah0fb9BP5vjjj8fIkSOxfv16nH766Whvb8d7772H++67DwCzI4RCIZx77rmYNWsWzj77bFx44YUghGRtu8PhwDPPPJPyfm9sOe+99x6mT58OQRCsz2nChAnweDx49913UVlZiba2NkydOtU6hhCCGTNm4Le//W2Pr8sp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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model3_50_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8048f71b",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 3: Testing 100 Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "55002d0f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#create linear regression model for price and setting up cross validation (x3)\n",
    "model3_100 = LinearRegression()\n",
    "model3_100.fit(X_train[key_cols['key_cols_100']], y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "cdc30139",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.889, the median R-squared values for the test sets were 0.888. These values resulted in a differential of 0.00068'"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#setting up cross validation for price in a different way (x3)\n",
    "model3_100_cval = cross_val(model3_100,\n",
    "                            X=X_train[key_cols['key_cols_100']],\n",
    "                            y=y_train,\n",
    "                            random_state=0,)\n",
    "\n",
    "model3_100_cval_summary = cval_summary(model3_100_cval[0],\n",
    "                                       model3_100_cval[1],\n",
    "                                       abs(model3_100_cval[0]-model3_100_cval[1]))\n",
    "\n",
    "model3_100_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "24093413",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00688. The RMSE of our model predicitons was 122840.97'"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#find the test score using the linear model\n",
    "model3_100_scores = score_model(model3_100,\n",
    "                                X_train[key_cols['key_cols_100']],\n",
    "                                X_test[key_cols['key_cols_100']],\n",
    "                                y_train,\n",
    "                                y_test,\n",
    "                                log=True)\n",
    "\n",
    "model3_100_summary = model_summary(model3_100_scores[0],\n",
    "                                   model3_100_scores[1],\n",
    "                                   abs(model3_100_scores[0]-model3_100_scores[1]),\n",
    "                                   model3_100_scores[2])\n",
    "model3_100_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "a6058421",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model3_100, X_test[key_cols['key_cols_100']], y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "9e3afa2f",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#add constant to X_train\n",
    "X_train = sm.add_constant(X_train)\n",
    "\n",
    "#find OLS for train data set\n",
    "model3_100_ols = sm.OLS(y_train, X_train).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "8b52ab4d",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th>  <td>   0.889</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.888</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   1194.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 16 Jul 2021</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:18:19</td>     <th>  Log-Likelihood:    </th>  <td>  5513.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>-1.080e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 17160</td>      <th>  BIC:               </th>  <td>  -9896.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   115</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>            <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>            <td> -145.5581</td> <td>   15.427</td> <td>   -9.435</td> <td> 0.000</td> <td> -175.796</td> <td> -115.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bedrooms</th>         <td>   -0.0468</td> <td>    0.007</td> <td>   -7.013</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>bathrooms</th>        <td>    0.0578</td> <td>    0.006</td> <td>    9.346</td> <td> 0.000</td> <td>    0.046</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living</th>      <td>    0.2778</td> <td>    0.019</td> <td>   14.391</td> <td> 0.000</td> <td>    0.240</td> <td>    0.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot</th>         <td>    0.0741</td> <td>    0.004</td> <td>   18.779</td> <td> 0.000</td> <td>    0.066</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_above</th>       <td>    0.1536</td> <td>    0.017</td> <td>    8.894</td> <td> 0.000</td> <td>    0.120</td> <td>    0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_basement</th>    <td> 9.381e-06</td> <td> 9.04e-06</td> <td>    1.038</td> <td> 0.299</td> <td>-8.33e-06</td> <td> 2.71e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lat</th>              <td>   25.7463</td> <td>    3.699</td> <td>    6.960</td> <td> 0.000</td> <td>   18.495</td> <td>   32.997</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>long</th>             <td>   -0.4412</td> <td>    0.055</td> <td>   -7.962</td> <td> 0.000</td> <td>   -0.550</td> <td>   -0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_living15</th>    <td>    0.1579</td> <td>    0.007</td> <td>   21.300</td> <td> 0.000</td> <td>    0.143</td> <td>    0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sqft_lot15</th>       <td>   -0.0217</td> <td>    0.004</td> <td>   -4.959</td> <td> 0.000</td> <td>   -0.030</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_1.5</th>       <td>    0.0061</td> <td>    0.005</td> <td>    1.121</td> <td> 0.262</td> <td>   -0.005</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.0</th>       <td>   -0.0088</td> <td>    0.005</td> <td>   -1.869</td> <td> 0.062</td> <td>   -0.018</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_2.5</th>       <td>    0.0046</td> <td>    0.017</td> <td>    0.277</td> <td> 0.782</td> <td>   -0.028</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.0</th>       <td>   -0.0839</td> <td>    0.010</td> <td>   -8.328</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>floors_3.5</th>       <td>   -0.0662</td> <td>    0.067</td> <td>   -0.985</td> <td> 0.325</td> <td>   -0.198</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>waterfront_1</th>     <td>    0.4569</td> <td>    0.020</td> <td>   22.658</td> <td> 0.000</td> <td>    0.417</td> <td>    0.496</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_1</th>           <td>    0.1251</td> <td>    0.011</td> <td>   10.963</td> <td> 0.000</td> <td>    0.103</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_2</th>           <td>    0.1015</td> <td>    0.007</td> <td>   14.622</td> <td> 0.000</td> <td>    0.088</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_3</th>           <td>    0.1752</td> <td>    0.009</td> <td>   18.473</td> <td> 0.000</td> <td>    0.157</td> <td>    0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>view_4</th>           <td>    0.2847</td> <td>    0.014</td> <td>   20.409</td> <td> 0.000</td> <td>    0.257</td> <td>    0.312</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_2</th>      <td>    0.1887</td> <td>    0.042</td> <td>    4.447</td> <td> 0.000</td> <td>    0.106</td> <td>    0.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_3</th>      <td>    0.3081</td> <td>    0.040</td> <td>    7.703</td> <td> 0.000</td> <td>    0.230</td> <td>    0.387</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_4</th>      <td>    0.3500</td> <td>    0.040</td> <td>    8.742</td> <td> 0.000</td> <td>    0.271</td> <td>    0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>condition_5</th>      <td>    0.4202</td> <td>    0.040</td> <td>   10.446</td> <td> 0.000</td> <td>    0.341</td> <td>    0.499</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_4</th>          <td>   -0.6135</td> <td>    0.182</td> <td>   -3.375</td> <td> 0.001</td> <td>   -0.970</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_5</th>          <td>   -0.5416</td> <td>    0.178</td> <td>   -3.050</td> <td> 0.002</td> <td>   -0.890</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_6</th>          <td>   -0.4886</td> <td>    0.177</td> <td>   -2.757</td> <td> 0.006</td> <td>   -0.836</td> <td>   -0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_7</th>          <td>   -0.4195</td> <td>    0.177</td> <td>   -2.367</td> <td> 0.018</td> <td>   -0.767</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_8</th>          <td>   -0.3398</td> <td>    0.177</td> <td>   -1.916</td> <td> 0.055</td> <td>   -0.687</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_9</th>          <td>   -0.2221</td> <td>    0.177</td> <td>   -1.252</td> <td> 0.211</td> <td>   -0.570</td> <td>    0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_10</th>         <td>   -0.1338</td> <td>    0.178</td> <td>   -0.754</td> <td> 0.451</td> <td>   -0.482</td> <td>    0.214</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_11</th>         <td>   -0.0152</td> <td>    0.178</td> <td>   -0.085</td> <td> 0.932</td> <td>   -0.364</td> <td>    0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_12</th>         <td>    0.1104</td> <td>    0.179</td> <td>    0.617</td> <td> 0.537</td> <td>   -0.240</td> <td>    0.461</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>grade_13</th>         <td>    0.3994</td> <td>    0.186</td> <td>    2.149</td> <td> 0.032</td> <td>    0.035</td> <td>    0.764</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>if_renovated_1</th>   <td>    0.0713</td> <td>    0.008</td> <td>    9.384</td> <td> 0.000</td> <td>    0.056</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98002</th>    <td>    0.0271</td> <td>    0.018</td> <td>    1.483</td> <td> 0.138</td> <td>   -0.009</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98003</th>    <td>    0.0097</td> <td>    0.016</td> <td>    0.603</td> <td> 0.546</td> <td>   -0.022</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98004</th>    <td>    0.9800</td> <td>    0.029</td> <td>   33.933</td> <td> 0.000</td> <td>    0.923</td> <td>    1.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98005</th>    <td>    0.6090</td> <td>    0.031</td> <td>   19.720</td> <td> 0.000</td> <td>    0.548</td> <td>    0.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98006</th>    <td>    0.5609</td> <td>    0.025</td> <td>   22.161</td> <td> 0.000</td> <td>    0.511</td> <td>    0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98007</th>    <td>    0.5554</td> <td>    0.032</td> <td>   17.420</td> <td> 0.000</td> <td>    0.493</td> <td>    0.618</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98008</th>    <td>    0.5676</td> <td>    0.030</td> <td>   18.834</td> <td> 0.000</td> <td>    0.509</td> <td>    0.627</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98010</th>    <td>    0.3270</td> <td>    0.027</td> <td>   12.206</td> <td> 0.000</td> <td>    0.274</td> <td>    0.379</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98011</th>    <td>    0.2429</td> <td>    0.039</td> <td>    6.170</td> <td> 0.000</td> <td>    0.166</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98014</th>    <td>    0.2746</td> <td>    0.043</td> <td>    6.409</td> <td> 0.000</td> <td>    0.191</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98019</th>    <td>    0.2127</td> <td>    0.042</td> <td>    5.006</td> <td> 0.000</td> <td>    0.129</td> <td>    0.296</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98022</th>    <td>    0.2200</td> <td>    0.024</td> <td>    9.303</td> <td> 0.000</td> <td>    0.174</td> <td>    0.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98023</th>    <td>   -0.0567</td> <td>    0.015</td> <td>   -3.863</td> <td> 0.000</td> <td>   -0.085</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98024</th>    <td>    0.4545</td> <td>    0.037</td> <td>   12.220</td> <td> 0.000</td> <td>    0.382</td> <td>    0.527</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98027</th>    <td>    0.4955</td> <td>    0.026</td> <td>   19.251</td> <td> 0.000</td> <td>    0.445</td> <td>    0.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98028</th>    <td>    0.1822</td> <td>    0.038</td> <td>    4.767</td> <td> 0.000</td> <td>    0.107</td> <td>    0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98029</th>    <td>    0.5909</td> <td>    0.030</td> <td>   20.002</td> <td> 0.000</td> <td>    0.533</td> <td>    0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98030</th>    <td>    0.0561</td> <td>    0.018</td> <td>    3.176</td> <td> 0.001</td> <td>    0.021</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98031</th>    <td>    0.0617</td> <td>    0.018</td> <td>    3.389</td> <td> 0.001</td> <td>    0.026</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98032</th>    <td>   -0.0463</td> <td>    0.021</td> <td>   -2.185</td> <td> 0.029</td> <td>   -0.088</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98033</th>    <td>    0.6330</td> <td>    0.033</td> <td>   19.291</td> <td> 0.000</td> <td>    0.569</td> <td>    0.697</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98034</th>    <td>    0.3612</td> <td>    0.035</td> <td>   10.290</td> <td> 0.000</td> <td>    0.292</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98038</th>    <td>    0.2356</td> <td>    0.020</td> <td>   11.983</td> <td> 0.000</td> <td>    0.197</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98039</th>    <td>    1.1320</td> <td>    0.039</td> <td>   29.291</td> <td> 0.000</td> <td>    1.056</td> <td>    1.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98040</th>    <td>    0.7627</td> <td>    0.026</td> <td>   29.727</td> <td> 0.000</td> <td>    0.712</td> <td>    0.813</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98042</th>    <td>    0.0992</td> <td>    0.017</td> <td>    5.911</td> <td> 0.000</td> <td>    0.066</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98045</th>    <td>    0.4588</td> <td>    0.036</td> <td>   12.865</td> <td> 0.000</td> <td>    0.389</td> <td>    0.529</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98052</th>    <td>    0.5066</td> <td>    0.033</td> <td>   15.178</td> <td> 0.000</td> <td>    0.441</td> <td>    0.572</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98053</th>    <td>    0.4908</td> <td>    0.036</td> <td>   13.715</td> <td> 0.000</td> <td>    0.421</td> <td>    0.561</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98055</th>    <td>    0.1052</td> <td>    0.020</td> <td>    5.200</td> <td> 0.000</td> <td>    0.066</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98056</th>    <td>    0.2591</td> <td>    0.022</td> <td>   11.720</td> <td> 0.000</td> <td>    0.216</td> <td>    0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98058</th>    <td>    0.1409</td> <td>    0.019</td> <td>    7.327</td> <td> 0.000</td> <td>    0.103</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98059</th>    <td>    0.2999</td> <td>    0.022</td> <td>   13.837</td> <td> 0.000</td> <td>    0.257</td> <td>    0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98065</th>    <td>    0.4632</td> <td>    0.033</td> <td>   13.942</td> <td> 0.000</td> <td>    0.398</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98070</th>    <td>    0.1606</td> <td>    0.026</td> <td>    6.186</td> <td> 0.000</td> <td>    0.110</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98072</th>    <td>    0.2896</td> <td>    0.039</td> <td>    7.413</td> <td> 0.000</td> <td>    0.213</td> <td>    0.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98074</th>    <td>    0.4830</td> <td>    0.032</td> <td>   15.264</td> <td> 0.000</td> <td>    0.421</td> <td>    0.545</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98075</th>    <td>    0.5083</td> <td>    0.030</td> <td>   16.761</td> <td> 0.000</td> <td>    0.449</td> <td>    0.568</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98077</th>    <td>    0.2856</td> <td>    0.041</td> <td>    7.037</td> <td> 0.000</td> <td>    0.206</td> <td>    0.365</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98092</th>    <td>    0.0612</td> <td>    0.016</td> <td>    3.801</td> <td> 0.000</td> <td>    0.030</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98102</th>    <td>    0.8143</td> <td>    0.034</td> <td>   24.065</td> <td> 0.000</td> <td>    0.748</td> <td>    0.881</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98103</th>    <td>    0.6574</td> <td>    0.032</td> <td>   20.729</td> <td> 0.000</td> <td>    0.595</td> <td>    0.720</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98105</th>    <td>    0.7881</td> <td>    0.032</td> <td>   24.299</td> <td> 0.000</td> <td>    0.725</td> <td>    0.852</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98106</th>    <td>    0.2383</td> <td>    0.024</td> <td>   10.071</td> <td> 0.000</td> <td>    0.192</td> <td>    0.285</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98107</th>    <td>    0.6729</td> <td>    0.033</td> <td>   20.561</td> <td> 0.000</td> <td>    0.609</td> <td>    0.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98108</th>    <td>    0.2555</td> <td>    0.026</td> <td>    9.916</td> <td> 0.000</td> <td>    0.205</td> <td>    0.306</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98109</th>    <td>    0.8520</td> <td>    0.034</td> <td>   25.291</td> <td> 0.000</td> <td>    0.786</td> <td>    0.918</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98112</th>    <td>    0.9203</td> <td>    0.030</td> <td>   31.023</td> <td> 0.000</td> <td>    0.862</td> <td>    0.978</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98115</th>    <td>    0.6430</td> <td>    0.032</td> <td>   19.941</td> <td> 0.000</td> <td>    0.580</td> <td>    0.706</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98116</th>    <td>    0.6127</td> <td>    0.026</td> <td>   23.280</td> <td> 0.000</td> <td>    0.561</td> <td>    0.664</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98117</th>    <td>    0.6127</td> <td>    0.033</td> <td>   18.751</td> <td> 0.000</td> <td>    0.549</td> <td>    0.677</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98118</th>    <td>    0.3700</td> <td>    0.023</td> <td>   16.070</td> <td> 0.000</td> <td>    0.325</td> <td>    0.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98119</th>    <td>    0.8159</td> <td>    0.032</td> <td>   25.671</td> <td> 0.000</td> <td>    0.754</td> <td>    0.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98122</th>    <td>    0.6868</td> <td>    0.028</td> <td>   24.245</td> <td> 0.000</td> <td>    0.631</td> <td>    0.742</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98125</th>    <td>    0.3670</td> <td>    0.035</td> <td>   10.544</td> <td> 0.000</td> <td>    0.299</td> <td>    0.435</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98126</th>    <td>    0.4187</td> <td>    0.024</td> <td>   17.234</td> <td> 0.000</td> <td>    0.371</td> <td>    0.466</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98133</th>    <td>    0.2297</td> <td>    0.036</td> <td>    6.384</td> <td> 0.000</td> <td>    0.159</td> <td>    0.300</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98136</th>    <td>    0.5547</td> <td>    0.025</td> <td>   22.328</td> <td> 0.000</td> <td>    0.506</td> <td>    0.603</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98144</th>    <td>    0.5616</td> <td>    0.026</td> <td>   21.198</td> <td> 0.000</td> <td>    0.510</td> <td>    0.614</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98146</th>    <td>    0.1673</td> <td>    0.022</td> <td>    7.520</td> <td> 0.000</td> <td>    0.124</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98148</th>    <td>    0.0857</td> <td>    0.029</td> <td>    2.923</td> <td> 0.003</td> <td>    0.028</td> <td>    0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98155</th>    <td>    0.1938</td> <td>    0.037</td> <td>    5.183</td> <td> 0.000</td> <td>    0.120</td> <td>    0.267</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98166</th>    <td>    0.2049</td> <td>    0.020</td> <td>   10.144</td> <td> 0.000</td> <td>    0.165</td> <td>    0.245</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98168</th>    <td>   -0.0006</td> <td>    0.022</td> <td>   -0.029</td> <td> 0.977</td> <td>   -0.043</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98177</th>    <td>    0.3314</td> <td>    0.038</td> <td>    8.805</td> <td> 0.000</td> <td>    0.258</td> <td>    0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98178</th>    <td>    0.0838</td> <td>    0.022</td> <td>    3.815</td> <td> 0.000</td> <td>    0.041</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98188</th>    <td>    0.0377</td> <td>    0.022</td> <td>    1.678</td> <td> 0.093</td> <td>   -0.006</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98198</th>    <td>   -0.0021</td> <td>    0.017</td> <td>   -0.123</td> <td> 0.902</td> <td>   -0.036</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>zipcode_98199</th>    <td>    0.6567</td> <td>    0.031</td> <td>   21.168</td> <td> 0.000</td> <td>    0.596</td> <td>    0.717</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_2</th>  <td>    0.0150</td> <td>    0.008</td> <td>    1.771</td> <td> 0.077</td> <td>   -0.002</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_3</th>  <td>    0.0424</td> <td>    0.008</td> <td>    5.457</td> <td> 0.000</td> <td>    0.027</td> <td>    0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_4</th>  <td>    0.0657</td> <td>    0.008</td> <td>    8.671</td> <td> 0.000</td> <td>    0.051</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_5</th>  <td>    0.0075</td> <td>    0.007</td> <td>    1.002</td> <td> 0.317</td> <td>   -0.007</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_6</th>  <td>   -0.0014</td> <td>    0.008</td> <td>   -0.188</td> <td> 0.851</td> <td>   -0.016</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_7</th>  <td>   -0.0079</td> <td>    0.008</td> <td>   -1.045</td> <td> 0.296</td> <td>   -0.023</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_8</th>  <td>   -0.0070</td> <td>    0.008</td> <td>   -0.898</td> <td> 0.369</td> <td>   -0.022</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_9</th>  <td>   -0.0124</td> <td>    0.008</td> <td>   -1.580</td> <td> 0.114</td> <td>   -0.028</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_10</th> <td>   -0.0143</td> <td>    0.008</td> <td>   -1.830</td> <td> 0.067</td> <td>   -0.030</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_11</th> <td>   -0.0136</td> <td>    0.008</td> <td>   -1.659</td> <td> 0.097</td> <td>   -0.030</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>month_of_date_12</th> <td>   -0.0047</td> <td>    0.008</td> <td>   -0.575</td> <td> 0.565</td> <td>   -0.021</td> <td>    0.011</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>1263.108</td> <th>  Durbin-Watson:     </th> <td>   2.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>5617.621</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td>-0.222</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td> 5.758</td>  <th>  Cond. No.          </th> <td>6.31e+06</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+06. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.889\n",
       "Model:                            OLS   Adj. R-squared:                  0.888\n",
       "Method:                 Least Squares   F-statistic:                     1194.\n",
       "Date:                Fri, 16 Jul 2021   Prob (F-statistic):               0.00\n",
       "Time:                        15:18:19   Log-Likelihood:                 5513.8\n",
       "No. Observations:               17276   AIC:                        -1.080e+04\n",
       "Df Residuals:                   17160   BIC:                            -9896.\n",
       "Df Model:                         115                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "====================================================================================\n",
       "                       coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------\n",
       "const             -145.5581     15.427     -9.435      0.000    -175.796    -115.320\n",
       "bedrooms            -0.0468      0.007     -7.013      0.000      -0.060      -0.034\n",
       "bathrooms            0.0578      0.006      9.346      0.000       0.046       0.070\n",
       "sqft_living          0.2778      0.019     14.391      0.000       0.240       0.316\n",
       "sqft_lot             0.0741      0.004     18.779      0.000       0.066       0.082\n",
       "sqft_above           0.1536      0.017      8.894      0.000       0.120       0.187\n",
       "sqft_basement     9.381e-06   9.04e-06      1.038      0.299   -8.33e-06    2.71e-05\n",
       "lat                 25.7463      3.699      6.960      0.000      18.495      32.997\n",
       "long                -0.4412      0.055     -7.962      0.000      -0.550      -0.333\n",
       "sqft_living15        0.1579      0.007     21.300      0.000       0.143       0.172\n",
       "sqft_lot15          -0.0217      0.004     -4.959      0.000      -0.030      -0.013\n",
       "floors_1.5           0.0061      0.005      1.121      0.262      -0.005       0.017\n",
       "floors_2.0          -0.0088      0.005     -1.869      0.062      -0.018       0.000\n",
       "floors_2.5           0.0046      0.017      0.277      0.782      -0.028       0.037\n",
       "floors_3.0          -0.0839      0.010     -8.328      0.000      -0.104      -0.064\n",
       "floors_3.5          -0.0662      0.067     -0.985      0.325      -0.198       0.066\n",
       "waterfront_1         0.4569      0.020     22.658      0.000       0.417       0.496\n",
       "view_1               0.1251      0.011     10.963      0.000       0.103       0.148\n",
       "view_2               0.1015      0.007     14.622      0.000       0.088       0.115\n",
       "view_3               0.1752      0.009     18.473      0.000       0.157       0.194\n",
       "view_4               0.2847      0.014     20.409      0.000       0.257       0.312\n",
       "condition_2          0.1887      0.042      4.447      0.000       0.106       0.272\n",
       "condition_3          0.3081      0.040      7.703      0.000       0.230       0.387\n",
       "condition_4          0.3500      0.040      8.742      0.000       0.271       0.428\n",
       "condition_5          0.4202      0.040     10.446      0.000       0.341       0.499\n",
       "grade_4             -0.6135      0.182     -3.375      0.001      -0.970      -0.257\n",
       "grade_5             -0.5416      0.178     -3.050      0.002      -0.890      -0.193\n",
       "grade_6             -0.4886      0.177     -2.757      0.006      -0.836      -0.141\n",
       "grade_7             -0.4195      0.177     -2.367      0.018      -0.767      -0.072\n",
       "grade_8             -0.3398      0.177     -1.916      0.055      -0.687       0.008\n",
       "grade_9             -0.2221      0.177     -1.252      0.211      -0.570       0.126\n",
       "grade_10            -0.1338      0.178     -0.754      0.451      -0.482       0.214\n",
       "grade_11            -0.0152      0.178     -0.085      0.932      -0.364       0.333\n",
       "grade_12             0.1104      0.179      0.617      0.537      -0.240       0.461\n",
       "grade_13             0.3994      0.186      2.149      0.032       0.035       0.764\n",
       "if_renovated_1       0.0713      0.008      9.384      0.000       0.056       0.086\n",
       "zipcode_98002        0.0271      0.018      1.483      0.138      -0.009       0.063\n",
       "zipcode_98003        0.0097      0.016      0.603      0.546      -0.022       0.041\n",
       "zipcode_98004        0.9800      0.029     33.933      0.000       0.923       1.037\n",
       "zipcode_98005        0.6090      0.031     19.720      0.000       0.548       0.669\n",
       "zipcode_98006        0.5609      0.025     22.161      0.000       0.511       0.611\n",
       "zipcode_98007        0.5554      0.032     17.420      0.000       0.493       0.618\n",
       "zipcode_98008        0.5676      0.030     18.834      0.000       0.509       0.627\n",
       "zipcode_98010        0.3270      0.027     12.206      0.000       0.274       0.379\n",
       "zipcode_98011        0.2429      0.039      6.170      0.000       0.166       0.320\n",
       "zipcode_98014        0.2746      0.043      6.409      0.000       0.191       0.359\n",
       "zipcode_98019        0.2127      0.042      5.006      0.000       0.129       0.296\n",
       "zipcode_98022        0.2200      0.024      9.303      0.000       0.174       0.266\n",
       "zipcode_98023       -0.0567      0.015     -3.863      0.000      -0.085      -0.028\n",
       "zipcode_98024        0.4545      0.037     12.220      0.000       0.382       0.527\n",
       "zipcode_98027        0.4955      0.026     19.251      0.000       0.445       0.546\n",
       "zipcode_98028        0.1822      0.038      4.767      0.000       0.107       0.257\n",
       "zipcode_98029        0.5909      0.030     20.002      0.000       0.533       0.649\n",
       "zipcode_98030        0.0561      0.018      3.176      0.001       0.021       0.091\n",
       "zipcode_98031        0.0617      0.018      3.389      0.001       0.026       0.097\n",
       "zipcode_98032       -0.0463      0.021     -2.185      0.029      -0.088      -0.005\n",
       "zipcode_98033        0.6330      0.033     19.291      0.000       0.569       0.697\n",
       "zipcode_98034        0.3612      0.035     10.290      0.000       0.292       0.430\n",
       "zipcode_98038        0.2356      0.020     11.983      0.000       0.197       0.274\n",
       "zipcode_98039        1.1320      0.039     29.291      0.000       1.056       1.208\n",
       "zipcode_98040        0.7627      0.026     29.727      0.000       0.712       0.813\n",
       "zipcode_98042        0.0992      0.017      5.911      0.000       0.066       0.132\n",
       "zipcode_98045        0.4588      0.036     12.865      0.000       0.389       0.529\n",
       "zipcode_98052        0.5066      0.033     15.178      0.000       0.441       0.572\n",
       "zipcode_98053        0.4908      0.036     13.715      0.000       0.421       0.561\n",
       "zipcode_98055        0.1052      0.020      5.200      0.000       0.066       0.145\n",
       "zipcode_98056        0.2591      0.022     11.720      0.000       0.216       0.302\n",
       "zipcode_98058        0.1409      0.019      7.327      0.000       0.103       0.179\n",
       "zipcode_98059        0.2999      0.022     13.837      0.000       0.257       0.342\n",
       "zipcode_98065        0.4632      0.033     13.942      0.000       0.398       0.528\n",
       "zipcode_98070        0.1606      0.026      6.186      0.000       0.110       0.211\n",
       "zipcode_98072        0.2896      0.039      7.413      0.000       0.213       0.366\n",
       "zipcode_98074        0.4830      0.032     15.264      0.000       0.421       0.545\n",
       "zipcode_98075        0.5083      0.030     16.761      0.000       0.449       0.568\n",
       "zipcode_98077        0.2856      0.041      7.037      0.000       0.206       0.365\n",
       "zipcode_98092        0.0612      0.016      3.801      0.000       0.030       0.093\n",
       "zipcode_98102        0.8143      0.034     24.065      0.000       0.748       0.881\n",
       "zipcode_98103        0.6574      0.032     20.729      0.000       0.595       0.720\n",
       "zipcode_98105        0.7881      0.032     24.299      0.000       0.725       0.852\n",
       "zipcode_98106        0.2383      0.024     10.071      0.000       0.192       0.285\n",
       "zipcode_98107        0.6729      0.033     20.561      0.000       0.609       0.737\n",
       "zipcode_98108        0.2555      0.026      9.916      0.000       0.205       0.306\n",
       "zipcode_98109        0.8520      0.034     25.291      0.000       0.786       0.918\n",
       "zipcode_98112        0.9203      0.030     31.023      0.000       0.862       0.978\n",
       "zipcode_98115        0.6430      0.032     19.941      0.000       0.580       0.706\n",
       "zipcode_98116        0.6127      0.026     23.280      0.000       0.561       0.664\n",
       "zipcode_98117        0.6127      0.033     18.751      0.000       0.549       0.677\n",
       "zipcode_98118        0.3700      0.023     16.070      0.000       0.325       0.415\n",
       "zipcode_98119        0.8159      0.032     25.671      0.000       0.754       0.878\n",
       "zipcode_98122        0.6868      0.028     24.245      0.000       0.631       0.742\n",
       "zipcode_98125        0.3670      0.035     10.544      0.000       0.299       0.435\n",
       "zipcode_98126        0.4187      0.024     17.234      0.000       0.371       0.466\n",
       "zipcode_98133        0.2297      0.036      6.384      0.000       0.159       0.300\n",
       "zipcode_98136        0.5547      0.025     22.328      0.000       0.506       0.603\n",
       "zipcode_98144        0.5616      0.026     21.198      0.000       0.510       0.614\n",
       "zipcode_98146        0.1673      0.022      7.520      0.000       0.124       0.211\n",
       "zipcode_98148        0.0857      0.029      2.923      0.003       0.028       0.143\n",
       "zipcode_98155        0.1938      0.037      5.183      0.000       0.120       0.267\n",
       "zipcode_98166        0.2049      0.020     10.144      0.000       0.165       0.245\n",
       "zipcode_98168       -0.0006      0.022     -0.029      0.977      -0.043       0.042\n",
       "zipcode_98177        0.3314      0.038      8.805      0.000       0.258       0.405\n",
       "zipcode_98178        0.0838      0.022      3.815      0.000       0.041       0.127\n",
       "zipcode_98188        0.0377      0.022      1.678      0.093      -0.006       0.082\n",
       "zipcode_98198       -0.0021      0.017     -0.123      0.902      -0.036       0.032\n",
       "zipcode_98199        0.6567      0.031     21.168      0.000       0.596       0.717\n",
       "month_of_date_2      0.0150      0.008      1.771      0.077      -0.002       0.032\n",
       "month_of_date_3      0.0424      0.008      5.457      0.000       0.027       0.058\n",
       "month_of_date_4      0.0657      0.008      8.671      0.000       0.051       0.081\n",
       "month_of_date_5      0.0075      0.007      1.002      0.317      -0.007       0.022\n",
       "month_of_date_6     -0.0014      0.008     -0.188      0.851      -0.016       0.014\n",
       "month_of_date_7     -0.0079      0.008     -1.045      0.296      -0.023       0.007\n",
       "month_of_date_8     -0.0070      0.008     -0.898      0.369      -0.022       0.008\n",
       "month_of_date_9     -0.0124      0.008     -1.580      0.114      -0.028       0.003\n",
       "month_of_date_10    -0.0143      0.008     -1.830      0.067      -0.030       0.001\n",
       "month_of_date_11    -0.0136      0.008     -1.659      0.097      -0.030       0.002\n",
       "month_of_date_12    -0.0047      0.008     -0.575      0.565      -0.021       0.011\n",
       "==============================================================================\n",
       "Omnibus:                     1263.108   Durbin-Watson:                   2.025\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5617.621\n",
       "Skew:                          -0.222   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.758   Cond. No.                     6.31e+06\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+06. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model3_100_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "f021203c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "5617.620656346999\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.2216147136327228\n",
      "\n",
      " Kurtosis ----\n",
      "5.758188731970492\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-41-42a69f1a355e>:13: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model3_100_ols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "322b32c8",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.659959e+03\n",
      "p-value                        5.934956e-272\n",
      "f-value                         1.586156e+01\n",
      "f p-value                      5.234348e-288\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.959992\n",
      "p-value      0.970256\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model3_100_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f610c483",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 3: Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "f754c78c",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Model 3: Testing 10 Features ----\n",
      "The R-squared value for the train set was 0.712, and the R-squared value for the test set was 0.708. These values resulted in a differential of 0.00439. The RMSE of our model predicitons was 192278.25\n",
      "\n",
      " Model 3: Testing 20 Features ----\n",
      "The R-squared value for the train set was 0.775, and the R-squared value for the test set was 0.76. These values resulted in a differential of 0.01456. The RMSE of our model predicitons was 176459.25\n",
      "\n",
      " Model 3: Testing 50 Features ----\n",
      "The R-squared value for the train set was 0.858, and the R-squared value for the test set was 0.85. These values resulted in a differential of 0.00847. The RMSE of our model predicitons was 150467.63\n",
      "\n",
      " Model 3: Testing 100 Features ----\n",
      "The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00688. The RMSE of our model predicitons was 122840.97\n",
      "\n",
      " Model 1: ----\n",
      "The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00697. The RMSE of our model predicitons was 122550.02\n"
     ]
    }
   ],
   "source": [
    "print('\\n Model 3: Testing 10 Features ----')\n",
    "print(model3_10_summary)\n",
    "print('\\n Model 3: Testing 20 Features ----')\n",
    "print(model3_20_summary)\n",
    "print('\\n Model 3: Testing 50 Features ----')\n",
    "print(model3_50_summary)\n",
    "print('\\n Model 3: Testing 100 Features ----')\n",
    "print(model3_100_summary)\n",
    "print('\\n Model 1: ----')\n",
    "print(best_model1_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe3b5a58",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Looking at the score results above it becomes apparent that the trade off for removing features from our original model is a reduced R-squared statistic. It is interesting to note however, that although the 100 feature model's r-squared statistic is the same as that of Model 1, the differential between train and test was also more narrow. This trend continues down to 50 features and then the differential begins to rise again signaling that there may be some \"best\" number of features for balance between r-squared and the spread between test and train.\n",
    "\n",
    "However, Model 1 still has a higher or similar R-squared score and a lower RMSE than those of the different versions of Model 3. Therefore, Model 1 is still our best model."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c600c46f",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## Model 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0a56562",
   "metadata": {
    "hidden": true
   },
   "source": [
    "In Model 4, we utilized Binomial Feature Engineering."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0255e2e6",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 4: Binomial Feature Engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "221fa9b5",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#split data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test(output_ln, 'ln_price')\n",
    "\n",
    "#setting up binomial features from Train/Test split that uses ln_price as a y value\n",
    "pf = PolynomialFeatures(degree=2)\n",
    "pf.fit(X_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "011e7d27",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Training/tranforming the data using the fit pf object. Formatting as DataFrame for ease of use\n",
    "pdf_train = pd.DataFrame(pf.transform(X_train), columns = pf.get_feature_names())\n",
    "pdf_test = pd.DataFrame(pf.transform(X_test), columns = pf.get_feature_names())\n",
    "pdf_train.index = y_train.index\n",
    "pdf_test.index = y_test.index"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d37a1cc6",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 4: Pearson Correlation Coefficient Filtering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "4772bf9b",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>x0</th>\n",
       "      <td>0.340720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>x1</th>\n",
       "      <td>0.522192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>x2</th>\n",
       "      <td>0.675572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>x3</th>\n",
       "      <td>0.138240</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           0\n",
       "1        NaN\n",
       "x0  0.340720\n",
       "x1  0.522192\n",
       "x2  0.675572\n",
       "x3  0.138240"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#calculating corr to the df with polynomial features to the train y values \n",
    "correlations = pdf_train.corrwith(y_train)\n",
    "correlations_df = pd.DataFrame(correlations)\n",
    "correlations_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "9b146893",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#NaN values represent columns containing 0 values, we wont need to consider these\n",
    "correlations_df.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "baae0dda",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Mapping absolute value over the correlations_df to allow us to find the most impactful coefs\n",
    "correlations_df[0].map(abs)\n",
    "#Sorting them so that we can skim the best ones off the top\n",
    "correlations_df.sort_values(by=0,ascending=False,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "15291cf7",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Column names of the top x number of features from our polynomial df, adding 1 to represent the intercept\n",
    "features = list(correlations_df.index[:500]) + ['1']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f65c5031",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 4: Model Validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "b2d56943",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#instantiating a linear regression object\n",
    "model4 = LinearRegression()\n",
    "model4.fit(X = pdf_train[features], y = y_train);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "ef8d55fc",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The median R-squared values for the train sets were 0.867, the median R-squared values for the test sets were 0.847. These values resulted in a differential of 0.01937'"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model4_cval = cross_val(model4,\n",
    "                        X=pdf_train[features],\n",
    "                        y=y_train,\n",
    "                        random_state=0)\n",
    "\n",
    "model4_cval_summary = cval_summary(model4_cval[0],\n",
    "                                   model4_cval[1],\n",
    "                                   abs(model4_cval[0]-model4_cval[1]))\n",
    "\n",
    "model4_cval_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "fd0b0c79",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The R-squared value for the train set was 0.865, and the R-squared value for the test set was 0.645. These values resulted in a differential of 0.22049. The RMSE of our model predicitons was 596698921.69'"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model4_scores = score_model(model4,\n",
    "                            pdf_train[features],\n",
    "                            pdf_test[features],\n",
    "                            y_train,\n",
    "                            y_test,\n",
    "                            log=True)\n",
    "\n",
    "model4_summary = model_summary(model4_scores[0],\n",
    "                               model4_scores[1],\n",
    "                               abs(model4_scores[0]-model4_scores[1]),\n",
    "                               model4_scores[2])\n",
    "model4_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "95bd77f3",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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JalatWp65513zI7lEipWrKjXX39dvXr1kqenp8qXL6+xY8eaHcvpTJ8+XUlJSZo0aVL6tq5du2rSpEl69dVXlZSUpIceeoj5uZtk9L498cQTfEZkQ2Z/57p162ZiquyxGIZhmB0CAAAgP2EGDAAAwMEoYAAAAA5GAQMAAHAwChgAAICDUcAAAAAcjAIGIFdSUlLUtGlT9evXL1uP79u3ry5cuHDH+/v0008zXAJi8eLFqlevnjp06KCOHTuqQ4cO6tq1q7Zt25bh83z88cdaunTpHedIs2TJkgyXVYiNjVXt2rUVGxub4c+dPHlSderUyfX+AbgmChiAXFm9erWqVq2qXbt26dChQ1k+PiIiwm5Z6tevr2XLlmnp0qVatmyZ+vfvr1dffVWpqam3PPb1119Xx44dc73PJ554QnFxcdqyZcsN27///ns9/PDDKl68eK73AcD9UMAA5Mr8+fP18MMP64knntDMmTPTty9atEht2rRRu3bt1KtXL0VHR2vo0KGSpN69eys6OlotW7bUzp0703/m+q/Dw8PVpUsXtWvXTo888ohWr16d42xNmjRRTEyMLl++rCFDhmjAgAFq06aN3n//fQ0ZMkTTp0+XJG3fvl1dunRR27Zt1alTJ0VFRUn691Ywffv21ZNPPqkOHTpo0aJFt+zD19dXnTt31vfff5++zTAMfffdd+revbv+/vtvde/eXV26dFHz5s01bNiwW57j5qN613995coVDRkyRE8++aTatWuniRMnphfKTz75RO3atdOTTz6p559/XufOncvxewTAHBQwAHfs4MGD2rZtm1q1aqWOHTtq2bJliouL0969e/XBBx9o2rRpWr58uVq2bKkpU6ak38B65syZKl26dKbPe+rUKUVGRmr27Nlavny5/vOf/+iTTz7JUTbDMLRw4UJVrlxZxYoVkyQlJiZq5cqVevvtt9Mfl5KSopdfflkvv/yyVqxYoXHjxmnixIlKTk7Wa6+9pjfffFOLFy/WnDlz9PXXX+vvv/++ZV/dunXTzz//rKtXr0qSIiMjFRgYqLp162rWrFl67bXX9N1332nlypVau3atdu3ale3XMXHiRFWvXl2LFy/W0qVLFRcXpxkzZig6OlozZ87U999/r8WLFys0NJR7ewIuhFsRAbhj8+fPV4sWLVS0aFEVLVpUZcuW1bfffisfHx81bdo0vWT16dMnR89bpkwZvffee1q+fLmOHTum7du3p5eb29m8ebM6dOggi8Wi5ORk3XvvvTcUt3r16t3yM/v375eHh4eaN28uSapRo4aWL1+ugwcP6vjx4zccsUpMTNQ///yj2rVr3/AcwcHBqlevnlatWqWnnnpKCxcuVPfu3SVJkyZN0h9//KHw8HAdPnxYSUlJSkhIUJEiRbL1Xqxbt047d+5MP/qWmJgoSSpZsqSqVq2qTp06qVmzZmrWrJmaNGmSrecEYD4KGIA7kpCQoGXLlsnHx0ctW7aUJMXHx2vOnDnq16+fLBZL+mMTExN16tQpVaxY8Zbnuf5uaMnJyZKk3bt366WXXlKfPn0UGhqqBg0aaMyYMVlmql+/vr788stMvx8QEHDLNk9PzxuySv+WMsMwVLBgQS1btix9e2xsrAoWLJjhcz/77LMKDw9Xy5YttWXLFr333nuSpB49eqhKlSp68MEH1bp1a23fvl033wHOYrHcsC0lJSX9zzabTR9//HH6e3f58mVZLBZ5eHhozpw52rlzp6KiojRx4kQ9+OCDGjx4cKavH4Dz4BQkgDuyfPlyFSlSRH/++afWrl2rtWvX6tdff1VCQoKuXLmiqKio9JmkBQsW6P3335f0b+FJm2EqVqxY+um4jRs3KiYmRpK0adMm1ahRQ88995waNmyoNWvWyGq12uV13HvvvbJYLOkXB+zevVu9e/fWPffcIz8/v/QCFh0drbZt22Z6+rBZs2aKjY3VlClT1L59e/n5+eny5cvauXOn3nrrLT322GM6c+aMjh8/LpvNdsPPFi1aVLt375ZhGIqPj9dvv/2W/r2mTZvqm2++kWEYSk5O1sCBAzVnzhzt3btXbdu2VcWKFfXiiy+qT58+N8zTAXBuHAEDcEfmz5+v5557Tp6enunbChUqpJ49e+q3337T22+/nb40RVBQkCZOnChJatWqlXr27KlPP/1Ub731lkaPHq2FCxeqevXqql69uiSpbdu2+uWXX9S6dWvZbDa1aNFCly5dUnx8fJ6/Dh8fH3366aeaOHGi3nvvPXl7e+vTTz+Vj4+PvvjiC02YMEHTpk1TamqqXn/99QxPY0qSh4eHunbtqv/+97/66aef0t+P/v37q1OnTgoICFDJkiVVt25dHTt2TMHBwek/2759e/3555967LHHVLJkSTVs2DD9iNjw4cM1YcIEtWvXTikpKQoJCVG/fv3k7e2t1q1bq3PnzgoICJCfn5/CwsLy/P0BYB8W4+Zj4QAAALArTkECAAA4GAUMAADAwShgAAAADkYBAwAAcDAKGAAAgINRwAAAAByMAgYAAOBgFDAAAAAH+38++y/DHG2aPAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "actual_vs_predicted(model4, pdf_test[features], y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9927f4b9",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 4: OLS and Assumption Testing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "3a685262",
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "pdf_train_wconst = sm.add_constant(pdf_train[features])\n",
    "model4_ols = sm.OLS(y_train,pdf_train_wconst).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "cc4d34b1",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>ln_price</td>     <th>  R-squared:         </th> <td>   0.865</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.861</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   228.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 16 Jul 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:18:52</td>     <th>  Log-Likelihood:    </th> <td>  3842.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td> 17276</td>      <th>  AIC:               </th> <td>  -6739.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td> 16803</td>      <th>  BIC:               </th> <td>  -3070.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   472</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "      <td></td>        <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x8</th>    <td>   -0.2859</td> <td>    0.110</td> <td>   -2.600</td> <td> 0.009</td> <td>   -0.501</td> <td>   -0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2^2</th>     <td>   -0.9686</td> <td>    0.339</td> <td>   -2.856</td> <td> 0.004</td> <td>   -1.633</td> <td>   -0.304</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x6</th>    <td>   25.2040</td> <td>    9.582</td> <td>    2.630</td> <td> 0.009</td> <td>    6.421</td> <td>   43.987</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2</th>       <td>  -93.4344</td> <td>   37.313</td> <td>   -2.504</td> <td> 0.012</td> <td> -166.571</td> <td>  -20.298</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x4</th>    <td>    1.8061</td> <td>    0.500</td> <td>    3.615</td> <td> 0.000</td> <td>    0.827</td> <td>    2.785</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x8</th>    <td>    0.2626</td> <td>    0.100</td> <td>    2.621</td> <td> 0.009</td> <td>    0.066</td> <td>    0.459</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x8</th>    <td>    0.8822</td> <td>    3.145</td> <td>    0.281</td> <td> 0.779</td> <td>   -5.282</td> <td>    7.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8^2</th>     <td>    0.0846</td> <td>    0.024</td> <td>    3.479</td> <td> 0.001</td> <td>    0.037</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8</th>       <td>   -4.0797</td> <td>   12.157</td> <td>   -0.336</td> <td> 0.737</td> <td>  -27.908</td> <td>   19.749</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x6</th>    <td>  -20.4891</td> <td>    8.691</td> <td>   -2.358</td> <td> 0.018</td> <td>  -37.524</td> <td>   -3.454</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4^2</th>     <td>   -0.8035</td> <td>    0.379</td> <td>   -2.122</td> <td> 0.034</td> <td>   -1.546</td> <td>   -0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4</th>       <td>   75.6064</td> <td>   33.884</td> <td>    2.231</td> <td> 0.026</td> <td>    9.191</td> <td>  142.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x2</th>    <td>    0.2314</td> <td>    0.101</td> <td>    2.291</td> <td> 0.022</td> <td>    0.033</td> <td>    0.429</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1^2</th>     <td>    0.0532</td> <td>    0.020</td> <td>    2.636</td> <td> 0.008</td> <td>    0.014</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x4</th>    <td>   -0.2200</td> <td>    0.088</td> <td>   -2.494</td> <td> 0.013</td> <td>   -0.393</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x8</th>    <td>   -0.1451</td> <td>    0.036</td> <td>   -4.031</td> <td> 0.000</td> <td>   -0.216</td> <td>   -0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x3</th>    <td>    0.0429</td> <td>    0.018</td> <td>    2.395</td> <td> 0.017</td> <td>    0.008</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x9</th>    <td>    0.0639</td> <td>    0.020</td> <td>    3.262</td> <td> 0.001</td> <td>    0.025</td> <td>    0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x1</th>    <td>   -0.0743</td> <td>    0.030</td> <td>   -2.472</td> <td> 0.013</td> <td>   -0.133</td> <td>   -0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x6</th>    <td>  -14.0245</td> <td>    2.577</td> <td>   -5.443</td> <td> 0.000</td> <td>  -19.075</td> <td>   -8.974</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1</th>       <td>   54.2245</td> <td>    9.953</td> <td>    5.448</td> <td> 0.000</td> <td>   34.716</td> <td>   73.733</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6</th>       <td> 8.762e+04</td> <td> 2238.559</td> <td>   39.141</td> <td> 0.000</td> <td> 8.32e+04</td> <td>  9.2e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6^2</th>     <td>-1.132e+04</td> <td>  289.806</td> <td>  -39.072</td> <td> 0.000</td> <td>-1.19e+04</td> <td>-1.08e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x2</th>    <td>    0.0145</td> <td>    0.103</td> <td>    0.141</td> <td> 0.888</td> <td>   -0.187</td> <td>    0.216</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x4</th>    <td>   -0.0007</td> <td>    0.092</td> <td>   -0.008</td> <td> 0.994</td> <td>   -0.180</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x8</th>    <td>   -0.0153</td> <td>    0.039</td> <td>   -0.395</td> <td> 0.693</td> <td>   -0.091</td> <td>    0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x9</th>    <td>    0.0837</td> <td>    0.068</td> <td>    1.233</td> <td> 0.218</td> <td>   -0.049</td> <td>    0.217</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x3</th>    <td>   -0.1241</td> <td>    0.063</td> <td>   -1.982</td> <td> 0.047</td> <td>   -0.247</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x5</th>    <td>-3.664e-05</td> <td>  5.3e-05</td> <td>   -0.692</td> <td> 0.489</td> <td>   -0.000</td> <td> 6.72e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x9</th>    <td>   -0.1065</td> <td>    0.062</td> <td>   -1.711</td> <td> 0.087</td> <td>   -0.229</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x4</th>    <td>    0.1035</td> <td>    0.058</td> <td>    1.793</td> <td> 0.073</td> <td>   -0.010</td> <td>    0.217</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x3</th>    <td>    0.0054</td> <td>    0.019</td> <td>    0.285</td> <td> 0.776</td> <td>   -0.032</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0^2</th>     <td>   -0.0152</td> <td>    0.020</td> <td>   -0.757</td> <td> 0.449</td> <td>   -0.055</td> <td>    0.024</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x9</th>    <td>   -0.0454</td> <td>    0.021</td> <td>   -2.148</td> <td> 0.032</td> <td>   -0.087</td> <td>   -0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x11</th>   <td>    0.0023</td> <td>    0.021</td> <td>    0.112</td> <td> 0.911</td> <td>   -0.038</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x5</th>    <td>   -0.0005</td> <td>    0.000</td> <td>   -2.304</td> <td> 0.021</td> <td>   -0.001</td> <td>-6.78e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x6</th>    <td>    4.2839</td> <td>    2.884</td> <td>    1.485</td> <td> 0.137</td> <td>   -1.369</td> <td>    9.937</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x30</th>   <td>    0.1446</td> <td>    0.053</td> <td>    2.735</td> <td> 0.006</td> <td>    0.041</td> <td>    0.248</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0</th>       <td>  -16.1599</td> <td>   11.138</td> <td>   -1.451</td> <td> 0.147</td> <td>  -37.991</td> <td>    5.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x30</th>   <td>   -0.0117</td> <td>    0.050</td> <td>   -0.232</td> <td> 0.816</td> <td>   -0.110</td> <td>    0.087</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x30</th>   <td>    0.2866</td> <td>    0.264</td> <td>    1.084</td> <td> 0.278</td> <td>   -0.231</td> <td>    0.805</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x27</th>   <td>   -0.0024</td> <td>    0.000</td> <td>   -6.360</td> <td> 0.000</td> <td>   -0.003</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x30</th>   <td>   -0.0729</td> <td>    0.231</td> <td>   -0.315</td> <td> 0.753</td> <td>   -0.526</td> <td>    0.381</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x5</th>    <td>    0.0005</td> <td>    0.000</td> <td>    1.408</td> <td> 0.159</td> <td>   -0.000</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x30</th>   <td>   -0.1390</td> <td>    0.045</td> <td>   -3.068</td> <td> 0.002</td> <td>   -0.228</td> <td>   -0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x30</th>   <td>   14.4196</td> <td>    3.991</td> <td>    3.613</td> <td> 0.000</td> <td>    6.596</td> <td>   22.243</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30^2</th>    <td>  -27.6357</td> <td>    7.725</td> <td>   -3.577</td> <td> 0.000</td> <td>  -42.778</td> <td>  -12.493</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30</th>      <td>  -27.8122</td> <td>    7.726</td> <td>   -3.600</td> <td> 0.000</td> <td>  -42.955</td> <td>  -12.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x9</th>    <td>    0.0133</td> <td>    0.021</td> <td>    0.648</td> <td> 0.517</td> <td>   -0.027</td> <td>    0.054</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x8</th>    <td>    0.0001</td> <td> 5.17e-05</td> <td>    2.735</td> <td> 0.006</td> <td> 4.01e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x8</th>    <td>   -0.0254</td> <td>    0.019</td> <td>   -1.313</td> <td> 0.189</td> <td>   -0.063</td> <td>    0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x30</th>   <td>    0.0285</td> <td>    0.025</td> <td>    1.152</td> <td> 0.249</td> <td>   -0.020</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x30</th>   <td>   -0.0465</td> <td>    0.022</td> <td>   -2.080</td> <td> 0.038</td> <td>   -0.090</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x5</th>    <td>-3.354e-05</td> <td> 5.22e-05</td> <td>   -0.643</td> <td> 0.520</td> <td>   -0.000</td> <td> 6.88e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x11</th>   <td> 3.766e-05</td> <td> 3.78e-05</td> <td>    0.996</td> <td> 0.319</td> <td>-3.64e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5^2</th>     <td>-5.065e-08</td> <td> 4.99e-08</td> <td>   -1.015</td> <td> 0.310</td> <td>-1.48e-07</td> <td> 4.72e-08</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x6</th>    <td>   -0.0066</td> <td>    0.005</td> <td>   -1.372</td> <td> 0.170</td> <td>   -0.016</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5</th>       <td>    0.0243</td> <td>    0.018</td> <td>    1.321</td> <td> 0.187</td> <td>   -0.012</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x5</th>    <td> 1.909e-05</td> <td> 2.91e-05</td> <td>    0.656</td> <td> 0.512</td> <td> -3.8e-05</td> <td> 7.62e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x9</th>    <td>-4.807e-05</td> <td> 3.13e-05</td> <td>   -1.536</td> <td> 0.125</td> <td>   -0.000</td> <td> 1.33e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x11</th>   <td>    0.1454</td> <td>    0.022</td> <td>    6.471</td> <td> 0.000</td> <td>    0.101</td> <td>    0.189</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x29</th>   <td>    0.0235</td> <td>    0.036</td> <td>    0.646</td> <td> 0.518</td> <td>   -0.048</td> <td>    0.095</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x29</th>   <td>    0.0379</td> <td>    0.035</td> <td>    1.098</td> <td> 0.272</td> <td>   -0.030</td> <td>    0.106</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x29</th>   <td>    0.1619</td> <td>    0.164</td> <td>    0.987</td> <td> 0.324</td> <td>   -0.160</td> <td>    0.484</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x29</th>   <td>   -0.1668</td> <td>    0.032</td> <td>   -5.168</td> <td> 0.000</td> <td>   -0.230</td> <td>   -0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x29</th>   <td>    0.0166</td> <td>    0.143</td> <td>    0.116</td> <td> 0.908</td> <td>   -0.264</td> <td>    0.297</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x29</th>   <td>    9.3890</td> <td>    2.469</td> <td>    3.803</td> <td> 0.000</td> <td>    4.549</td> <td>   14.229</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29^2</th>    <td>  -17.8351</td> <td>    4.781</td> <td>   -3.730</td> <td> 0.000</td> <td>  -27.206</td> <td>   -8.464</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29</th>      <td>  -17.8771</td> <td>    4.781</td> <td>   -3.739</td> <td> 0.000</td> <td>  -27.249</td> <td>   -8.506</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x26</th>   <td>   -0.0015</td> <td>    0.000</td> <td>   -4.035</td> <td> 0.000</td> <td>   -0.002</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x29</th>   <td>    0.0375</td> <td>    0.020</td> <td>    1.874</td> <td> 0.061</td> <td>   -0.002</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x29</th>   <td>   -0.0559</td> <td>    0.018</td> <td>   -3.026</td> <td> 0.002</td> <td>   -0.092</td> <td>   -0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x11</th>   <td>   -0.0030</td> <td>    0.012</td> <td>   -0.245</td> <td> 0.807</td> <td>   -0.027</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x11</th>   <td>   -0.0132</td> <td>    0.091</td> <td>   -0.145</td> <td> 0.885</td> <td>   -0.192</td> <td>    0.165</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x11</th>   <td>    0.0154</td> <td>    0.013</td> <td>    1.152</td> <td> 0.249</td> <td>   -0.011</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x11</th>   <td>    0.0497</td> <td>    0.083</td> <td>    0.596</td> <td> 0.551</td> <td>   -0.114</td> <td>    0.213</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x11</th>   <td>   -0.0480</td> <td>    0.024</td> <td>   -1.962</td> <td> 0.050</td> <td>   -0.096</td> <td>-5.13e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x21</th>   <td>   -0.0128</td> <td>    0.053</td> <td>   -0.241</td> <td> 0.810</td> <td>   -0.117</td> <td>    0.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x30</th>  <td>   -0.0507</td> <td>    0.024</td> <td>   -2.121</td> <td> 0.034</td> <td>   -0.098</td> <td>   -0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x31</th>   <td>    0.0954</td> <td>    0.083</td> <td>    1.154</td> <td> 0.248</td> <td>   -0.067</td> <td>    0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x31</th>   <td>    0.9104</td> <td>    0.450</td> <td>    2.023</td> <td> 0.043</td> <td>    0.028</td> <td>    1.792</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x31</th>   <td>   -0.5730</td> <td>    0.393</td> <td>   -1.459</td> <td> 0.145</td> <td>   -1.343</td> <td>    0.197</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x31</th>   <td>   10.5032</td> <td>    7.302</td> <td>    1.438</td> <td> 0.150</td> <td>   -3.810</td> <td>   24.816</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31</th>      <td>  -20.3674</td> <td>   14.196</td> <td>   -1.435</td> <td> 0.151</td> <td>  -48.194</td> <td>    7.459</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31^2</th>    <td>  -20.3244</td> <td>   14.196</td> <td>   -1.432</td> <td> 0.152</td> <td>  -48.151</td> <td>    7.502</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x31</th>   <td>   -0.1436</td> <td>    0.070</td> <td>   -2.061</td> <td> 0.039</td> <td>   -0.280</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x30</th>  <td>   -0.0950</td> <td>    0.165</td> <td>   -0.577</td> <td> 0.564</td> <td>   -0.418</td> <td>    0.228</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x11</th>   <td>   -6.9629</td> <td>    1.762</td> <td>   -3.953</td> <td> 0.000</td> <td>  -10.416</td> <td>   -3.510</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x31</th>   <td>   -0.2939</td> <td>    0.083</td> <td>   -3.527</td> <td> 0.000</td> <td>   -0.457</td> <td>   -0.131</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11^2</th>    <td>   13.3292</td> <td>    3.398</td> <td>    3.922</td> <td> 0.000</td> <td>    6.668</td> <td>   19.991</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11</th>      <td>   13.3406</td> <td>    3.399</td> <td>    3.925</td> <td> 0.000</td> <td>    6.679</td> <td>   20.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x31</th>   <td>   -0.0240</td> <td>    0.037</td> <td>   -0.649</td> <td> 0.516</td> <td>   -0.097</td> <td>    0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x31</th>   <td>   -0.0160</td> <td>    0.032</td> <td>   -0.505</td> <td> 0.613</td> <td>   -0.078</td> <td>    0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x19</th>   <td>    0.0761</td> <td>    0.073</td> <td>    1.042</td> <td> 0.297</td> <td>   -0.067</td> <td>    0.219</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x31</th>  <td>    0.0283</td> <td>    0.080</td> <td>    0.353</td> <td> 0.724</td> <td>   -0.129</td> <td>    0.186</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x29</th>  <td>   -0.0483</td> <td>    0.016</td> <td>   -3.014</td> <td> 0.003</td> <td>   -0.080</td> <td>   -0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x31</th>  <td>   -0.0251</td> <td>    0.038</td> <td>   -0.663</td> <td> 0.507</td> <td>   -0.099</td> <td>    0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x29</th>  <td>    0.0422</td> <td>    0.166</td> <td>    0.254</td> <td> 0.800</td> <td>   -0.284</td> <td>    0.368</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x19</th>   <td>    0.2726</td> <td>    0.256</td> <td>    1.064</td> <td> 0.287</td> <td>   -0.230</td> <td>    0.775</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x19</th>   <td>   -0.2949</td> <td>    0.193</td> <td>   -1.530</td> <td> 0.126</td> <td>   -0.673</td> <td>    0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x30</th>   <td>   -0.0001</td> <td> 9.18e-05</td> <td>   -1.198</td> <td> 0.231</td> <td>   -0.000</td> <td> 6.99e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x19</th>   <td>   -0.1059</td> <td>    0.073</td> <td>   -1.451</td> <td> 0.147</td> <td>   -0.249</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x19</th>   <td>    0.0088</td> <td>    0.082</td> <td>    0.107</td> <td> 0.915</td> <td>   -0.153</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x29</th>   <td>-6.093e-05</td> <td> 6.82e-05</td> <td>   -0.894</td> <td> 0.371</td> <td>   -0.000</td> <td> 7.27e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x19</th>   <td>    0.0418</td> <td>    0.042</td> <td>    1.003</td> <td> 0.316</td> <td>   -0.040</td> <td>    0.124</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x19</th>   <td>   19.8225</td> <td>    7.606</td> <td>    2.606</td> <td> 0.009</td> <td>    4.915</td> <td>   34.730</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19^2</th>    <td>  -32.5666</td> <td>   12.507</td> <td>   -2.604</td> <td> 0.009</td> <td>  -57.082</td> <td>   -8.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19</th>      <td>  -32.5626</td> <td>   12.507</td> <td>   -2.604</td> <td> 0.009</td> <td>  -57.078</td> <td>   -8.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x19</th>   <td>   -0.0444</td> <td>    0.047</td> <td>   -0.936</td> <td> 0.349</td> <td>   -0.137</td> <td>    0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x37</th>   <td>    0.0378</td> <td>    0.077</td> <td>    0.493</td> <td> 0.622</td> <td>   -0.112</td> <td>    0.188</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x37</th>   <td>    0.0159</td> <td>    0.071</td> <td>    0.225</td> <td> 0.822</td> <td>   -0.123</td> <td>    0.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x37</th>   <td>   -0.0596</td> <td>    0.196</td> <td>   -0.305</td> <td> 0.761</td> <td>   -0.443</td> <td>    0.324</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x37</th>   <td>    0.1600</td> <td>    0.166</td> <td>    0.963</td> <td> 0.336</td> <td>   -0.166</td> <td>    0.486</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x37</th>   <td>   -0.0356</td> <td>    0.071</td> <td>   -0.504</td> <td> 0.614</td> <td>   -0.174</td> <td>    0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x37</th>   <td>   -0.1079</td> <td>    0.063</td> <td>   -1.713</td> <td> 0.087</td> <td>   -0.231</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x37</th>   <td>    0.2301</td> <td>    0.068</td> <td>    3.378</td> <td> 0.001</td> <td>    0.097</td> <td>    0.364</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x21</th>   <td>   -0.0001</td> <td> 6.05e-05</td> <td>   -2.308</td> <td> 0.021</td> <td>   -0.000</td> <td>-2.11e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x37</th>   <td>   98.1601</td> <td>   32.433</td> <td>    3.027</td> <td> 0.002</td> <td>   34.589</td> <td>  161.732</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x37</th>      <td> -190.1420</td> <td>   62.592</td> <td>   -3.038</td> <td> 0.002</td> <td> -312.828</td> <td>  -67.456</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x37^2</th>    <td> -190.1407</td> <td>   62.592</td> <td>   -3.038</td> <td> 0.002</td> <td> -312.827</td> <td>  -67.455</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x21</th>  <td>    0.0193</td> <td>    0.063</td> <td>    0.308</td> <td> 0.758</td> <td>   -0.103</td> <td>    0.142</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x31</th>   <td>   -0.0002</td> <td>    0.000</td> <td>   -1.759</td> <td> 0.079</td> <td>   -0.000</td> <td> 2.51e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x19</th>   <td>   -0.0001</td> <td> 7.89e-05</td> <td>   -1.584</td> <td> 0.113</td> <td>   -0.000</td> <td> 2.97e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x59</th>   <td>   -0.0029</td> <td>    0.081</td> <td>   -0.035</td> <td> 0.972</td> <td>   -0.162</td> <td>    0.156</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x18</th>   <td>   -0.0313</td> <td>    0.051</td> <td>   -0.617</td> <td> 0.537</td> <td>   -0.131</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x17</th>   <td>   -0.0751</td> <td>    0.035</td> <td>   -2.142</td> <td> 0.032</td> <td>   -0.144</td> <td>   -0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x59</th>   <td>    0.1539</td> <td>    0.086</td> <td>    1.799</td> <td> 0.072</td> <td>   -0.014</td> <td>    0.322</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x59</th>   <td>   -0.2247</td> <td>    0.212</td> <td>   -1.059</td> <td> 0.290</td> <td>   -0.641</td> <td>    0.191</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x59</th>   <td>    0.1512</td> <td>    0.161</td> <td>    0.940</td> <td> 0.347</td> <td>   -0.164</td> <td>    0.466</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x59</th>   <td>    0.0533</td> <td>    0.055</td> <td>    0.962</td> <td> 0.336</td> <td>   -0.055</td> <td>    0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x59</th>   <td>   -0.1709</td> <td>    0.105</td> <td>   -1.633</td> <td> 0.102</td> <td>   -0.376</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x59</th>   <td>    0.0939</td> <td>    0.072</td> <td>    1.295</td> <td> 0.195</td> <td>   -0.048</td> <td>    0.236</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x15</th>   <td>   -0.0918</td> <td>    0.105</td> <td>   -0.875</td> <td> 0.382</td> <td>   -0.298</td> <td>    0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x59^2</th>    <td>   68.1220</td> <td>   75.252</td> <td>    0.905</td> <td> 0.365</td> <td>  -79.380</td> <td>  215.624</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x59</th>      <td>   68.1213</td> <td>   75.252</td> <td>    0.905</td> <td> 0.365</td> <td>  -79.381</td> <td>  215.623</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x59</th>   <td>  -35.0858</td> <td>   38.903</td> <td>   -0.902</td> <td> 0.367</td> <td> -111.340</td> <td>   41.168</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x82</th>   <td>    0.1092</td> <td>    0.057</td> <td>    1.905</td> <td> 0.057</td> <td>   -0.003</td> <td>    0.222</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x15</th>   <td>    0.1148</td> <td>    0.099</td> <td>    1.156</td> <td> 0.248</td> <td>   -0.080</td> <td>    0.309</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x15</th>   <td>    0.0505</td> <td>    0.296</td> <td>    0.171</td> <td> 0.865</td> <td>   -0.530</td> <td>    0.631</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x15</th>   <td>    0.0793</td> <td>    0.244</td> <td>    0.325</td> <td> 0.745</td> <td>   -0.398</td> <td>    0.557</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x18</th>   <td>   -0.0434</td> <td>    0.051</td> <td>   -0.847</td> <td> 0.397</td> <td>   -0.144</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x82</th>   <td>    0.0045</td> <td>    0.060</td> <td>    0.075</td> <td> 0.940</td> <td>   -0.113</td> <td>    0.122</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x15</th>   <td>   -0.0276</td> <td>    0.110</td> <td>   -0.252</td> <td> 0.801</td> <td>   -0.243</td> <td>    0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x18</th>   <td>    0.1433</td> <td>    0.157</td> <td>    0.914</td> <td> 0.361</td> <td>   -0.164</td> <td>    0.451</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x32</th>   <td>    0.2085</td> <td>    0.780</td> <td>    0.267</td> <td> 0.789</td> <td>   -1.321</td> <td>    1.738</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x18</th>   <td>   -0.1798</td> <td>    0.124</td> <td>   -1.455</td> <td> 0.146</td> <td>   -0.422</td> <td>    0.062</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x32</th>   <td>    0.2991</td> <td>    0.667</td> <td>    0.448</td> <td> 0.654</td> <td>   -1.009</td> <td>    1.607</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x32</th>   <td>   -0.0492</td> <td>    0.183</td> <td>   -0.269</td> <td> 0.788</td> <td>   -0.407</td> <td>    0.309</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x32</th>   <td>   47.7563</td> <td>   16.669</td> <td>    2.865</td> <td> 0.004</td> <td>   15.083</td> <td>   80.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x32</th>      <td>  -93.4848</td> <td>   32.354</td> <td>   -2.889</td> <td> 0.004</td> <td> -156.902</td> <td>  -30.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x32^2</th>    <td>  -93.4863</td> <td>   32.354</td> <td>   -2.889</td> <td> 0.004</td> <td> -156.903</td> <td>  -30.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x32</th>   <td>   -0.0961</td> <td>    0.175</td> <td>   -0.550</td> <td> 0.582</td> <td>   -0.439</td> <td>    0.246</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x32</th>   <td>   -0.0381</td> <td>    0.145</td> <td>   -0.263</td> <td> 0.792</td> <td>   -0.322</td> <td>    0.246</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x18</th>   <td>    0.0479</td> <td>    0.052</td> <td>    0.915</td> <td> 0.360</td> <td>   -0.055</td> <td>    0.151</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x15</th>   <td>    6.4711</td> <td>   12.030</td> <td>    0.538</td> <td> 0.591</td> <td>  -17.109</td> <td>   30.052</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15^2</th>    <td>  -12.6467</td> <td>   23.144</td> <td>   -0.546</td> <td> 0.585</td> <td>  -58.011</td> <td>   32.718</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15</th>      <td>  -12.6476</td> <td>   23.144</td> <td>   -0.546</td> <td> 0.585</td> <td>  -58.012</td> <td>   32.717</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x32</th>   <td>   -0.0680</td> <td>    0.065</td> <td>   -1.044</td> <td> 0.296</td> <td>   -0.196</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x32</th>   <td>    0.0371</td> <td>    0.064</td> <td>    0.580</td> <td> 0.562</td> <td>   -0.088</td> <td>    0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x82</th>   <td>    0.0224</td> <td>    0.170</td> <td>    0.132</td> <td> 0.895</td> <td>   -0.310</td> <td>    0.355</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x82</th>   <td>   -0.1847</td> <td>    0.213</td> <td>   -0.866</td> <td> 0.387</td> <td>   -0.603</td> <td>    0.233</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x15</th>   <td>   -0.0043</td> <td>    0.047</td> <td>   -0.091</td> <td> 0.927</td> <td>   -0.096</td> <td>    0.087</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x82</th>   <td>    0.0992</td> <td>    0.048</td> <td>    2.065</td> <td> 0.039</td> <td>    0.005</td> <td>    0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x15</th>   <td>   -0.0134</td> <td>    0.053</td> <td>   -0.252</td> <td> 0.801</td> <td>   -0.117</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x82</th>   <td>    0.0421</td> <td>    0.062</td> <td>    0.683</td> <td> 0.495</td> <td>   -0.079</td> <td>    0.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x21</th>  <td>  -10.8564</td> <td>    4.171</td> <td>   -2.603</td> <td> 0.009</td> <td>  -19.032</td> <td>   -2.681</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x82</th>   <td>    0.1909</td> <td>    0.069</td> <td>    2.778</td> <td> 0.005</td> <td>    0.056</td> <td>    0.326</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x18</th>   <td>   -1.6137</td> <td>    4.533</td> <td>   -0.356</td> <td> 0.722</td> <td>  -10.498</td> <td>    7.271</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18</th>      <td>    3.3537</td> <td>    8.746</td> <td>    0.383</td> <td> 0.701</td> <td>  -13.790</td> <td>   20.497</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18^2</th>    <td>    3.3492</td> <td>    8.746</td> <td>    0.383</td> <td> 0.702</td> <td>  -13.794</td> <td>   20.493</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x18</th>   <td>-2.975e-05</td> <td> 5.57e-05</td> <td>   -0.534</td> <td> 0.593</td> <td>   -0.000</td> <td> 7.94e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x18</th>   <td>    0.0121</td> <td>    0.026</td> <td>    0.463</td> <td> 0.643</td> <td>   -0.039</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x37</th>  <td>    0.0927</td> <td>    0.060</td> <td>    1.542</td> <td> 0.123</td> <td>   -0.025</td> <td>    0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x18</th>   <td>   -0.0543</td> <td>    0.029</td> <td>   -1.873</td> <td> 0.061</td> <td>   -0.111</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x82</th>   <td>  254.3900</td> <td>   99.661</td> <td>    2.553</td> <td> 0.011</td> <td>   59.043</td> <td>  449.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x82</th>      <td> -492.0269</td> <td>  192.441</td> <td>   -2.557</td> <td> 0.011</td> <td> -869.231</td> <td> -114.823</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x82^2</th>    <td> -492.0261</td> <td>  192.441</td> <td>   -2.557</td> <td> 0.011</td> <td> -869.230</td> <td> -114.822</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x17</th>   <td>    0.0599</td> <td>    0.036</td> <td>    1.667</td> <td> 0.095</td> <td>   -0.011</td> <td>    0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15 x19</th>  <td>    0.1038</td> <td>    0.070</td> <td>    1.490</td> <td> 0.136</td> <td>   -0.033</td> <td>    0.240</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x19</th>  <td>   -0.0430</td> <td>    0.040</td> <td>   -1.086</td> <td> 0.277</td> <td>   -0.121</td> <td>    0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x17</th>   <td>   -0.0063</td> <td>    0.105</td> <td>   -0.060</td> <td> 0.952</td> <td>   -0.212</td> <td>    0.199</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x17</th>   <td>    0.0165</td> <td>    0.088</td> <td>    0.187</td> <td> 0.852</td> <td>   -0.156</td> <td>    0.190</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x39</th>   <td>    0.0277</td> <td>    0.059</td> <td>    0.469</td> <td> 0.639</td> <td>   -0.088</td> <td>    0.144</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x17</th>   <td>    0.0058</td> <td>    0.037</td> <td>    0.157</td> <td> 0.876</td> <td>   -0.067</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x47</th>   <td>   -0.0003</td> <td>    0.000</td> <td>   -2.316</td> <td> 0.021</td> <td>   -0.000</td> <td>-3.97e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x34</th>   <td>    0.0455</td> <td>    0.037</td> <td>    1.244</td> <td> 0.214</td> <td>   -0.026</td> <td>    0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x22 x29</th>  <td>    0.0498</td> <td>    0.166</td> <td>    0.299</td> <td> 0.765</td> <td>   -0.276</td> <td>    0.376</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x37</th>  <td>   -0.0813</td> <td>    0.040</td> <td>   -2.048</td> <td> 0.041</td> <td>   -0.159</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x17</th>   <td>    5.4479</td> <td>    3.324</td> <td>    1.639</td> <td> 0.101</td> <td>   -1.068</td> <td>   11.964</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x17^2</th>    <td>  -10.4429</td> <td>    6.417</td> <td>   -1.627</td> <td> 0.104</td> <td>  -23.020</td> <td>    2.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x17</th>      <td>  -10.4466</td> <td>    6.417</td> <td>   -1.628</td> <td> 0.104</td> <td>  -23.024</td> <td>    2.131</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x17</th>   <td>   -0.0497</td> <td>    0.022</td> <td>   -2.275</td> <td> 0.023</td> <td>   -0.092</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x37</th>   <td>-4.101e-05</td> <td> 7.01e-05</td> <td>   -0.585</td> <td> 0.558</td> <td>   -0.000</td> <td> 9.63e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x17</th>   <td>    0.0336</td> <td>    0.024</td> <td>    1.382</td> <td> 0.167</td> <td>   -0.014</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x17</th>   <td>-9.733e-06</td> <td> 4.16e-05</td> <td>   -0.234</td> <td> 0.815</td> <td>-9.14e-05</td> <td> 7.19e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x23</th>   <td>   -0.0779</td> <td>    0.057</td> <td>   -1.377</td> <td> 0.169</td> <td>   -0.189</td> <td>    0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x32</th>  <td>   -0.0170</td> <td>    0.085</td> <td>   -0.200</td> <td> 0.842</td> <td>   -0.183</td> <td>    0.149</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x23</th>   <td>-9.932e-05</td> <td> 6.16e-05</td> <td>   -1.612</td> <td> 0.107</td> <td>   -0.000</td> <td> 2.15e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x82</th>   <td>-5.215e-05</td> <td> 8.42e-05</td> <td>   -0.620</td> <td> 0.536</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x32</th>  <td>    0.0592</td> <td>    0.080</td> <td>    0.740</td> <td> 0.459</td> <td>   -0.098</td> <td>    0.216</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x59</th>   <td> 1.251e-05</td> <td> 7.01e-05</td> <td>    0.179</td> <td> 0.858</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x15</th>   <td> 2.948e-05</td> <td> 9.39e-05</td> <td>    0.314</td> <td> 0.754</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x17</th>  <td>    0.0006</td> <td>    0.022</td> <td>    0.027</td> <td> 0.979</td> <td>   -0.042</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x28</th>   <td>   -0.0001</td> <td> 4.76e-05</td> <td>   -2.382</td> <td> 0.017</td> <td>   -0.000</td> <td>-2.01e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x39</th>   <td>    0.0568</td> <td>    0.114</td> <td>    0.498</td> <td> 0.619</td> <td>   -0.167</td> <td>    0.281</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x39</th>   <td>   -0.0808</td> <td>    0.144</td> <td>   -0.561</td> <td> 0.575</td> <td>   -0.363</td> <td>    0.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x34</th>   <td> 5.956e-05</td> <td> 5.09e-05</td> <td>    1.170</td> <td> 0.242</td> <td>-4.03e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x18</th>  <td>   -0.0227</td> <td>    0.029</td> <td>   -0.779</td> <td> 0.436</td> <td>   -0.080</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x39</th>   <td>    0.0402</td> <td>    0.060</td> <td>    0.675</td> <td> 0.500</td> <td>   -0.077</td> <td>    0.157</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x98</th>   <td>    0.0025</td> <td>    0.000</td> <td>   21.367</td> <td> 0.000</td> <td>    0.002</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x39</th>   <td>    0.0912</td> <td>    0.068</td> <td>    1.344</td> <td> 0.179</td> <td>   -0.042</td> <td>    0.224</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x59</th>  <td>   -0.0444</td> <td>    0.040</td> <td>   -1.100</td> <td> 0.271</td> <td>   -0.124</td> <td>    0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x25</th>   <td>   -0.0007</td> <td>    0.000</td> <td>   -1.811</td> <td> 0.070</td> <td>   -0.001</td> <td> 5.78e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x39</th>   <td>    0.0787</td> <td>    0.049</td> <td>    1.606</td> <td> 0.108</td> <td>   -0.017</td> <td>    0.175</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x39</th>   <td>   -0.0535</td> <td>    0.038</td> <td>   -1.395</td> <td> 0.163</td> <td>   -0.129</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x39</th>      <td> -324.2200</td> <td>  112.580</td> <td>   -2.880</td> <td> 0.004</td> <td> -544.889</td> <td> -103.551</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x39^2</th>    <td> -324.2186</td> <td>  112.580</td> <td>   -2.880</td> <td> 0.004</td> <td> -544.887</td> <td> -103.550</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x39</th>   <td>  167.7229</td> <td>   58.291</td> <td>    2.877</td> <td> 0.004</td> <td>   53.466</td> <td>  281.980</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3^2</th>     <td>    0.0080</td> <td>    0.004</td> <td>    2.211</td> <td> 0.027</td> <td>    0.001</td> <td>    0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x6</th>    <td>   -2.6266</td> <td>    1.699</td> <td>   -1.546</td> <td> 0.122</td> <td>   -5.957</td> <td>    0.704</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x58</th>   <td>   -0.2394</td> <td>    0.207</td> <td>   -1.156</td> <td> 0.248</td> <td>   -0.645</td> <td>    0.167</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x58</th>   <td>    0.3045</td> <td>    0.213</td> <td>    1.428</td> <td> 0.153</td> <td>   -0.113</td> <td>    0.722</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x58</th>   <td>   -0.0616</td> <td>    0.522</td> <td>   -0.118</td> <td> 0.906</td> <td>   -1.086</td> <td>    0.962</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x55</th>   <td>    0.0625</td> <td>    0.055</td> <td>    1.135</td> <td> 0.256</td> <td>   -0.045</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x58</th>   <td>    0.2873</td> <td>    0.694</td> <td>    0.414</td> <td> 0.679</td> <td>   -1.072</td> <td>    1.647</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x60</th>   <td>    0.0007</td> <td> 9.26e-05</td> <td>    7.204</td> <td> 0.000</td> <td>    0.000</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x15</th>  <td>   -0.0023</td> <td>    0.058</td> <td>   -0.040</td> <td> 0.968</td> <td>   -0.117</td> <td>    0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x58</th>   <td>   -0.1554</td> <td>    0.186</td> <td>   -0.835</td> <td> 0.404</td> <td>   -0.520</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x58</th>   <td>    0.4189</td> <td>    0.236</td> <td>    1.773</td> <td> 0.076</td> <td>   -0.044</td> <td>    0.882</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x9</th>    <td>    0.0113</td> <td>    0.007</td> <td>    1.563</td> <td> 0.118</td> <td>   -0.003</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x58</th>   <td>   -0.3680</td> <td>    0.226</td> <td>   -1.631</td> <td> 0.103</td> <td>   -0.810</td> <td>    0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3</th>       <td>   10.2705</td> <td>    6.575</td> <td>    1.562</td> <td> 0.118</td> <td>   -2.618</td> <td>   23.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x58</th>   <td> -283.0322</td> <td>  225.364</td> <td>   -1.256</td> <td> 0.209</td> <td> -724.769</td> <td>  158.705</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x58^2</th>    <td>  546.2917</td> <td>  435.480</td> <td>    1.254</td> <td> 0.210</td> <td> -307.294</td> <td> 1399.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x58</th>      <td>  546.2919</td> <td>  435.480</td> <td>    1.254</td> <td> 0.210</td> <td> -307.294</td> <td> 1399.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x22 x30</th>  <td>   -0.1347</td> <td>    0.166</td> <td>   -0.812</td> <td> 0.417</td> <td>   -0.460</td> <td>    0.190</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18 x21</th>  <td>    0.0282</td> <td>    0.039</td> <td>    0.723</td> <td> 0.470</td> <td>   -0.048</td> <td>    0.105</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x22</th>   <td>   -0.0001</td> <td> 6.05e-05</td> <td>   -1.941</td> <td> 0.052</td> <td>   -0.000</td> <td> 1.18e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x39</th>  <td>   -0.0588</td> <td>    0.039</td> <td>   -1.519</td> <td> 0.129</td> <td>   -0.135</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x82</th>  <td>    0.0940</td> <td>    0.031</td> <td>    3.062</td> <td> 0.002</td> <td>    0.034</td> <td>    0.154</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15 x21</th>  <td>   -0.0019</td> <td>    0.072</td> <td>   -0.027</td> <td> 0.979</td> <td>   -0.143</td> <td>    0.139</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x30</th>  <td>    0.0362</td> <td>    0.069</td> <td>    0.525</td> <td> 0.600</td> <td>   -0.099</td> <td>    0.171</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x23 x30</th>  <td>   -0.0305</td> <td>    0.168</td> <td>   -0.182</td> <td> 0.856</td> <td>   -0.359</td> <td>    0.298</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x59</th>  <td>    0.0628</td> <td>    0.043</td> <td>    1.460</td> <td> 0.144</td> <td>   -0.022</td> <td>    0.147</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x72</th>   <td>    0.1153</td> <td>    0.078</td> <td>    1.472</td> <td> 0.141</td> <td>   -0.038</td> <td>    0.269</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x9</th>    <td>  -14.0478</td> <td>    1.872</td> <td>   -7.506</td> <td> 0.000</td> <td>  -17.716</td> <td>  -10.379</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9^2</th>     <td>   -0.0025</td> <td>    0.005</td> <td>   -0.523</td> <td> 0.601</td> <td>   -0.012</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x23</th>  <td>    0.0823</td> <td>    0.065</td> <td>    1.274</td> <td> 0.203</td> <td>   -0.044</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x34</th>   <td>    0.0021</td> <td>    0.036</td> <td>    0.060</td> <td> 0.952</td> <td>   -0.067</td> <td>    0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x35</th>   <td>   -0.0005</td> <td>    0.000</td> <td>   -3.097</td> <td> 0.002</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x55</th>   <td>    0.0341</td> <td>    0.065</td> <td>    0.526</td> <td> 0.599</td> <td>   -0.093</td> <td>    0.161</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x39</th>  <td>    0.0234</td> <td>    0.025</td> <td>    0.940</td> <td> 0.347</td> <td>   -0.025</td> <td>    0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x39</th>   <td>-2.665e-05</td> <td> 5.31e-05</td> <td>   -0.502</td> <td> 0.615</td> <td>   -0.000</td> <td> 7.74e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x72</th>   <td>   -0.1568</td> <td>    0.113</td> <td>   -1.394</td> <td> 0.163</td> <td>   -0.377</td> <td>    0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x72</th>   <td>   -0.1411</td> <td>    0.096</td> <td>   -1.474</td> <td> 0.141</td> <td>   -0.329</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x72</th>   <td>    0.0182</td> <td>    0.081</td> <td>    0.224</td> <td> 0.823</td> <td>   -0.141</td> <td>    0.178</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9</th>       <td>   54.1857</td> <td>    7.243</td> <td>    7.481</td> <td> 0.000</td> <td>   39.988</td> <td>   68.383</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x72</th>   <td>   -0.0372</td> <td>    0.081</td> <td>   -0.460</td> <td> 0.645</td> <td>   -0.196</td> <td>    0.121</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x32</th>   <td>-1.473e-05</td> <td>    0.000</td> <td>   -0.080</td> <td> 0.936</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x72</th>      <td>   69.0715</td> <td>  121.440</td> <td>    0.569</td> <td> 0.570</td> <td> -168.963</td> <td>  307.106</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x72^2</th>    <td>   69.0714</td> <td>  121.440</td> <td>    0.569</td> <td> 0.570</td> <td> -168.963</td> <td>  307.106</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x72</th>   <td>  -35.2788</td> <td>   62.865</td> <td>   -0.561</td> <td> 0.575</td> <td> -158.501</td> <td>   87.944</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x22 x31</th>  <td>    0.0118</td> <td>    0.085</td> <td>    0.138</td> <td> 0.890</td> <td>   -0.156</td> <td>    0.179</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x55</th>   <td>   -0.2259</td> <td>    0.165</td> <td>   -1.367</td> <td> 0.172</td> <td>   -0.550</td> <td>    0.098</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x72</th>   <td>    0.0199</td> <td>    0.028</td> <td>    0.710</td> <td> 0.477</td> <td>   -0.035</td> <td>    0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x58</th>  <td>   -0.0001</td> <td>    0.110</td> <td>   -0.001</td> <td> 0.999</td> <td>   -0.216</td> <td>    0.216</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x55</th>   <td>    0.2248</td> <td>    0.151</td> <td>    1.493</td> <td> 0.135</td> <td>   -0.070</td> <td>    0.520</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x72</th>   <td>    0.0089</td> <td>    0.031</td> <td>    0.284</td> <td> 0.776</td> <td>   -0.052</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x34</th>  <td>    0.0570</td> <td>    0.022</td> <td>    2.567</td> <td> 0.010</td> <td>    0.013</td> <td>    0.101</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x22</th>   <td>   -0.0559</td> <td>    0.053</td> <td>   -1.050</td> <td> 0.294</td> <td>   -0.160</td> <td>    0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x23 x29</th>  <td>    0.0766</td> <td>    0.168</td> <td>    0.456</td> <td> 0.648</td> <td>   -0.252</td> <td>    0.406</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x55</th>  <td>   -0.0375</td> <td>    0.038</td> <td>   -0.989</td> <td> 0.323</td> <td>   -0.112</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x16</th>   <td>   -0.1708</td> <td>    0.066</td> <td>   -2.592</td> <td> 0.010</td> <td>   -0.300</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x55</th>   <td>   -0.0897</td> <td>    0.055</td> <td>   -1.645</td> <td> 0.100</td> <td>   -0.197</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x22 x37</th>  <td>    0.0515</td> <td>    0.060</td> <td>    0.856</td> <td> 0.392</td> <td>   -0.066</td> <td>    0.169</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x21</th>   <td>   -0.0637</td> <td>    0.007</td> <td>   -9.302</td> <td> 0.000</td> <td>   -0.077</td> <td>   -0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x37</th>  <td>   -0.1539</td> <td>    0.057</td> <td>   -2.711</td> <td> 0.007</td> <td>   -0.265</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x17 x21</th>  <td>   -0.0157</td> <td>    0.017</td> <td>   -0.934</td> <td> 0.350</td> <td>   -0.049</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x10</th>   <td>    0.0873</td> <td>    0.015</td> <td>    5.990</td> <td> 0.000</td> <td>    0.059</td> <td>    0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x103</th>  <td>    0.1406</td> <td>    0.054</td> <td>    2.584</td> <td> 0.010</td> <td>    0.034</td> <td>    0.247</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x22</th>  <td>  -10.8030</td> <td>    4.168</td> <td>   -2.592</td> <td> 0.010</td> <td>  -18.972</td> <td>   -2.634</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x31</th>  <td>   -0.1156</td> <td>    0.091</td> <td>   -1.267</td> <td> 0.205</td> <td>   -0.294</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x17 x31</th>  <td>    0.0007</td> <td>    0.044</td> <td>    0.015</td> <td> 0.988</td> <td>   -0.085</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x55</th>   <td>    0.0668</td> <td>    0.037</td> <td>    1.801</td> <td> 0.072</td> <td>   -0.006</td> <td>    0.139</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x107</th> <td>   -0.0567</td> <td>    0.025</td> <td>   -2.258</td> <td> 0.024</td> <td>   -0.106</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x28</th>   <td>    0.0289</td> <td>    0.022</td> <td>    1.330</td> <td> 0.183</td> <td>   -0.014</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x55</th>   <td>   -0.0266</td> <td>    0.044</td> <td>   -0.607</td> <td> 0.544</td> <td>   -0.113</td> <td>    0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18 x30</th>  <td>    0.0718</td> <td>    0.041</td> <td>    1.730</td> <td> 0.084</td> <td>   -0.010</td> <td>    0.153</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x34</th>   <td>   -0.0689</td> <td>    0.116</td> <td>   -0.596</td> <td> 0.551</td> <td>   -0.296</td> <td>    0.158</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x55^2</th>    <td>  104.5410</td> <td>   70.354</td> <td>    1.486</td> <td> 0.137</td> <td>  -33.361</td> <td>  242.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x55</th>      <td>  104.5404</td> <td>   70.354</td> <td>    1.486</td> <td> 0.137</td> <td>  -33.361</td> <td>  242.442</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x55</th>   <td>  -53.9860</td> <td>   36.376</td> <td>   -1.484</td> <td> 0.138</td> <td> -125.288</td> <td>   17.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x22</th>  <td>    0.0455</td> <td>    0.063</td> <td>    0.723</td> <td> 0.469</td> <td>   -0.078</td> <td>    0.169</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x12</th>   <td>   -0.0482</td> <td>    0.081</td> <td>   -0.594</td> <td> 0.553</td> <td>   -0.207</td> <td>    0.111</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x102</th>  <td>    0.0013</td> <td>    0.000</td> <td>   10.689</td> <td> 0.000</td> <td>    0.001</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x77</th>   <td>    0.0061</td> <td>    0.062</td> <td>    0.098</td> <td> 0.922</td> <td>   -0.116</td> <td>    0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x34</th>   <td>   -0.0313</td> <td>    0.094</td> <td>   -0.333</td> <td> 0.739</td> <td>   -0.215</td> <td>    0.153</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x10</th>   <td>-1.167e-05</td> <td> 1.71e-05</td> <td>   -0.681</td> <td> 0.496</td> <td>-4.52e-05</td> <td> 2.19e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x22 x59</th>  <td>    0.0009</td> <td>    0.041</td> <td>    0.021</td> <td> 0.983</td> <td>   -0.079</td> <td>    0.080</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x34</th>   <td>    0.0474</td> <td>    0.039</td> <td>    1.212</td> <td> 0.225</td> <td>   -0.029</td> <td>    0.124</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x109</th> <td>    0.0173</td> <td>    0.026</td> <td>    0.668</td> <td> 0.504</td> <td>   -0.033</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x55</th>  <td>    0.0192</td> <td>    0.025</td> <td>    0.764</td> <td> 0.445</td> <td>   -0.030</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x108</th> <td>   -0.0169</td> <td>    0.025</td> <td>   -0.680</td> <td> 0.497</td> <td>   -0.066</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x103</th>  <td>    0.0438</td> <td>    0.061</td> <td>    0.721</td> <td> 0.471</td> <td>   -0.075</td> <td>    0.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x82</th>  <td>    0.0783</td> <td>    0.036</td> <td>    2.147</td> <td> 0.032</td> <td>    0.007</td> <td>    0.150</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x72</th>  <td>    0.0435</td> <td>    0.046</td> <td>    0.949</td> <td> 0.343</td> <td>   -0.046</td> <td>    0.133</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x12</th>   <td>    0.2386</td> <td>    0.081</td> <td>    2.963</td> <td> 0.003</td> <td>    0.081</td> <td>    0.396</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x72</th>  <td>    0.0089</td> <td>    0.037</td> <td>    0.241</td> <td> 0.810</td> <td>   -0.064</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x28</th>   <td>    0.2213</td> <td>    0.097</td> <td>    2.281</td> <td> 0.023</td> <td>    0.031</td> <td>    0.411</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x82</th>  <td>    0.0729</td> <td>    0.122</td> <td>    0.599</td> <td> 0.549</td> <td>   -0.166</td> <td>    0.312</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x36</th>   <td>   -0.0004</td> <td>    0.000</td> <td>   -3.304</td> <td> 0.001</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x28</th>   <td>   -0.0446</td> <td>    0.013</td> <td>   -3.533</td> <td> 0.000</td> <td>   -0.069</td> <td>   -0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x34</th>  <td>    0.0433</td> <td>    0.031</td> <td>    1.412</td> <td> 0.158</td> <td>   -0.017</td> <td>    0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x58</th>  <td>    0.0008</td> <td>    0.089</td> <td>    0.008</td> <td> 0.993</td> <td>   -0.174</td> <td>    0.175</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x16</th>   <td>    0.1064</td> <td>    0.063</td> <td>    1.689</td> <td> 0.091</td> <td>   -0.017</td> <td>    0.230</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x103</th>  <td>-7.442e-05</td> <td> 9.17e-05</td> <td>   -0.812</td> <td> 0.417</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x82</th>  <td>   -0.0113</td> <td>    0.053</td> <td>   -0.215</td> <td> 0.830</td> <td>   -0.115</td> <td>    0.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x28</th>   <td>    0.0468</td> <td>    0.014</td> <td>    3.379</td> <td> 0.001</td> <td>    0.020</td> <td>    0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x28</th>   <td>   -0.0089</td> <td>    0.024</td> <td>   -0.375</td> <td> 0.708</td> <td>   -0.056</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x28</th>   <td>   -0.0192</td> <td>    0.019</td> <td>   -0.996</td> <td> 0.319</td> <td>   -0.057</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x12</th>   <td>    0.0003</td> <td>    0.000</td> <td>    1.644</td> <td> 0.100</td> <td>-4.92e-05</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x77</th>   <td>   -0.0148</td> <td>    0.059</td> <td>   -0.252</td> <td> 0.801</td> <td>   -0.130</td> <td>    0.101</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x12</th>   <td>   -0.6724</td> <td>    0.558</td> <td>   -1.205</td> <td> 0.228</td> <td>   -1.766</td> <td>    0.422</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x28</th>   <td>   -0.1109</td> <td>    0.084</td> <td>   -1.318</td> <td> 0.188</td> <td>   -0.276</td> <td>    0.054</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x34</th>   <td>   -0.0241</td> <td>    0.024</td> <td>   -0.985</td> <td> 0.325</td> <td>   -0.072</td> <td>    0.024</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x106</th>  <td>    0.0805</td> <td>    0.010</td> <td>    8.406</td> <td> 0.000</td> <td>    0.062</td> <td>    0.099</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x12</th>   <td>    0.4672</td> <td>    0.498</td> <td>    0.938</td> <td> 0.348</td> <td>   -0.509</td> <td>    1.444</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x103</th>  <td>   -0.1702</td> <td>    0.192</td> <td>   -0.886</td> <td> 0.376</td> <td>   -0.547</td> <td>    0.207</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x34</th>   <td>   -0.0088</td> <td>    0.027</td> <td>   -0.332</td> <td> 0.740</td> <td>   -0.061</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x103</th>  <td>   -0.0264</td> <td>    0.147</td> <td>   -0.180</td> <td> 0.857</td> <td>   -0.314</td> <td>    0.261</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x34</th>   <td>   -9.5860</td> <td>    3.616</td> <td>   -2.651</td> <td> 0.008</td> <td>  -16.674</td> <td>   -2.498</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x34</th>      <td>   18.8361</td> <td>    6.972</td> <td>    2.702</td> <td> 0.007</td> <td>    5.171</td> <td>   32.501</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x34^2</th>    <td>   18.8390</td> <td>    6.972</td> <td>    2.702</td> <td> 0.007</td> <td>    5.174</td> <td>   32.504</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x23 x28</th>  <td>    0.0253</td> <td>    0.015</td> <td>    1.638</td> <td> 0.101</td> <td>   -0.005</td> <td>    0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x12</th>   <td>    0.1472</td> <td>    0.091</td> <td>    1.618</td> <td> 0.106</td> <td>   -0.031</td> <td>    0.326</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x12</th>   <td>    0.1405</td> <td>    0.058</td> <td>    2.428</td> <td> 0.015</td> <td>    0.027</td> <td>    0.254</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x107</th>  <td> 3.116e-06</td> <td> 1.16e-05</td> <td>    0.269</td> <td> 0.788</td> <td>-1.96e-05</td> <td> 2.58e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x103</th>  <td>    0.1717</td> <td>    0.042</td> <td>    4.109</td> <td> 0.000</td> <td>    0.090</td> <td>    0.254</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x77</th>   <td>   -0.1023</td> <td>    0.211</td> <td>   -0.485</td> <td> 0.628</td> <td>   -0.516</td> <td>    0.311</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x77</th>   <td>    0.0910</td> <td>    0.163</td> <td>    0.558</td> <td> 0.577</td> <td>   -0.229</td> <td>    0.411</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x28</th>   <td>    2.6384</td> <td>    1.546</td> <td>    1.707</td> <td> 0.088</td> <td>   -0.391</td> <td>    5.668</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x103</th>  <td>   -0.0963</td> <td>    0.068</td> <td>   -1.424</td> <td> 0.154</td> <td>   -0.229</td> <td>    0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x108</th> <td>   -0.0068</td> <td>    0.017</td> <td>   -0.391</td> <td> 0.695</td> <td>   -0.041</td> <td>    0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x77</th>   <td>    0.1448</td> <td>    0.068</td> <td>    2.121</td> <td> 0.034</td> <td>    0.011</td> <td>    0.279</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x103</th>  <td>    0.1167</td> <td>    0.047</td> <td>    2.491</td> <td> 0.013</td> <td>    0.025</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x28</th>      <td>   -5.2847</td> <td>    2.998</td> <td>   -1.763</td> <td> 0.078</td> <td>  -11.161</td> <td>    0.591</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x28^2</th>    <td>   -5.3057</td> <td>    2.998</td> <td>   -1.770</td> <td> 0.077</td> <td>  -11.182</td> <td>    0.570</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x108</th>  <td>    0.0114</td> <td>    0.014</td> <td>    0.831</td> <td> 0.406</td> <td>   -0.016</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x77</th>   <td>   -0.0265</td> <td>    0.079</td> <td>   -0.335</td> <td> 0.738</td> <td>   -0.181</td> <td>    0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x77</th>   <td>    0.0364</td> <td>    0.083</td> <td>    0.438</td> <td> 0.661</td> <td>   -0.127</td> <td>    0.199</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x77</th>   <td> -6.16e-06</td> <td>    0.000</td> <td>   -0.060</td> <td> 0.952</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x12</th>   <td>   -0.1280</td> <td>    0.056</td> <td>   -2.275</td> <td> 0.023</td> <td>   -0.238</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x16</th>   <td> 8.504e-05</td> <td> 7.37e-05</td> <td>    1.154</td> <td> 0.248</td> <td>-5.94e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x12</th>   <td>   -0.4780</td> <td>   10.018</td> <td>   -0.048</td> <td> 0.962</td> <td>  -20.115</td> <td>   19.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x12</th>      <td>    0.9953</td> <td>   19.372</td> <td>    0.051</td> <td> 0.959</td> <td>  -36.976</td> <td>   38.966</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x12^2</th>    <td>    0.9982</td> <td>   19.372</td> <td>    0.052</td> <td> 0.959</td> <td>  -36.973</td> <td>   38.969</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x16</th>   <td>    0.2824</td> <td>    0.145</td> <td>    1.946</td> <td> 0.052</td> <td>   -0.002</td> <td>    0.567</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x16</th>   <td>   -0.2406</td> <td>    0.182</td> <td>   -1.321</td> <td> 0.187</td> <td>   -0.598</td> <td>    0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x100</th>  <td>    0.0024</td> <td>    0.000</td> <td>   21.118</td> <td> 0.000</td> <td>    0.002</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x37</th>  <td>   -0.1994</td> <td>    0.073</td> <td>   -2.716</td> <td> 0.007</td> <td>   -0.343</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x103^2</th>   <td>  144.2343</td> <td>  158.674</td> <td>    0.909</td> <td> 0.363</td> <td> -166.783</td> <td>  455.252</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x103</th>     <td>  144.2323</td> <td>  158.674</td> <td>    0.909</td> <td> 0.363</td> <td> -166.785</td> <td>  455.250</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x103</th>  <td>  -74.7000</td> <td>   82.117</td> <td>   -0.910</td> <td> 0.363</td> <td> -235.659</td> <td>   86.259</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x108</th>  <td>-4.005e-06</td> <td> 1.39e-05</td> <td>   -0.289</td> <td> 0.773</td> <td>-3.12e-05</td> <td> 2.32e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15 x31</th>  <td>   -0.1649</td> <td>    0.092</td> <td>   -1.790</td> <td> 0.074</td> <td>   -0.346</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x107</th>  <td>    0.0191</td> <td>    0.009</td> <td>    2.062</td> <td> 0.039</td> <td>    0.001</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x77^2</th>    <td>  441.6238</td> <td>  304.532</td> <td>    1.450</td> <td> 0.147</td> <td> -155.290</td> <td> 1038.538</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x77</th>      <td>  441.6208</td> <td>  304.532</td> <td>    1.450</td> <td> 0.147</td> <td> -155.293</td> <td> 1038.535</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x77</th>   <td> -228.8016</td> <td>  157.569</td> <td>   -1.452</td> <td> 0.147</td> <td> -537.654</td> <td>   80.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x106</th> <td>   -0.0353</td> <td>    0.026</td> <td>   -1.347</td> <td> 0.178</td> <td>   -0.087</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x16</th>   <td>   -0.0245</td> <td>    0.065</td> <td>   -0.379</td> <td> 0.705</td> <td>   -0.151</td> <td>    0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x59</th>  <td>   -0.0659</td> <td>    0.049</td> <td>   -1.339</td> <td> 0.181</td> <td>   -0.162</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18 x31</th>  <td>    0.0615</td> <td>    0.055</td> <td>    1.127</td> <td> 0.260</td> <td>   -0.045</td> <td>    0.168</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x17 x30</th>  <td>   -0.0613</td> <td>    0.032</td> <td>   -1.914</td> <td> 0.056</td> <td>   -0.124</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x110</th> <td>   -0.0343</td> <td>    0.024</td> <td>   -1.399</td> <td> 0.162</td> <td>   -0.082</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x34</th>  <td>    0.0671</td> <td>    0.023</td> <td>    2.945</td> <td> 0.003</td> <td>    0.022</td> <td>    0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x109</th> <td>    0.0037</td> <td>    0.017</td> <td>    0.220</td> <td> 0.826</td> <td>   -0.029</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x16</th>   <td>    0.0452</td> <td>    0.039</td> <td>    1.152</td> <td> 0.249</td> <td>   -0.032</td> <td>    0.122</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x16</th>   <td>   -0.0905</td> <td>    0.049</td> <td>   -1.859</td> <td> 0.063</td> <td>   -0.186</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x106</th> <td>   -0.0117</td> <td>    0.018</td> <td>   -0.665</td> <td> 0.506</td> <td>   -0.046</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x107</th> <td>   -0.0156</td> <td>    0.039</td> <td>   -0.397</td> <td> 0.692</td> <td>   -0.093</td> <td>    0.062</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x62</th>   <td>    0.0836</td> <td>    0.056</td> <td>    1.501</td> <td> 0.133</td> <td>   -0.026</td> <td>    0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x87</th>   <td>    0.1494</td> <td>    0.082</td> <td>    1.828</td> <td> 0.068</td> <td>   -0.011</td> <td>    0.310</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x107</th> <td>   -0.0303</td> <td>    0.017</td> <td>   -1.820</td> <td> 0.069</td> <td>   -0.063</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x33</th>   <td>   -1.9821</td> <td>    3.592</td> <td>   -0.552</td> <td> 0.581</td> <td>   -9.024</td> <td>    5.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x16</th>   <td>    7.1497</td> <td>    6.110</td> <td>    1.170</td> <td> 0.242</td> <td>   -4.826</td> <td>   19.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x16^2</th>    <td>  -13.5798</td> <td>   11.772</td> <td>   -1.154</td> <td> 0.249</td> <td>  -36.654</td> <td>    9.495</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x16</th>      <td>  -13.5800</td> <td>   11.772</td> <td>   -1.154</td> <td> 0.249</td> <td>  -36.655</td> <td>    9.495</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x17 x29</th>  <td>   -0.0146</td> <td>    0.024</td> <td>   -0.618</td> <td> 0.537</td> <td>   -0.061</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x33</th>   <td>    3.1435</td> <td>   16.023</td> <td>    0.196</td> <td> 0.844</td> <td>  -28.264</td> <td>   34.551</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x33</th>   <td>   -0.1757</td> <td>    8.330</td> <td>   -0.021</td> <td> 0.983</td> <td>  -16.503</td> <td>   16.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x53</th>   <td>    0.0014</td> <td>    0.000</td> <td>   11.970</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x33</th>   <td>   -1.4655</td> <td>    2.504</td> <td>   -0.585</td> <td> 0.558</td> <td>   -6.373</td> <td>    3.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x59</th>  <td>   -0.0695</td> <td>    0.067</td> <td>   -1.041</td> <td> 0.298</td> <td>   -0.201</td> <td>    0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x33</th>   <td>   -0.0583</td> <td>    1.185</td> <td>   -0.049</td> <td> 0.961</td> <td>   -2.380</td> <td>    2.264</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x33</th>   <td>    1.7575</td> <td>    1.842</td> <td>    0.954</td> <td> 0.340</td> <td>   -1.853</td> <td>    5.368</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x64</th>   <td>    0.0019</td> <td>    0.000</td> <td>   16.525</td> <td> 0.000</td> <td>    0.002</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x33</th>   <td>  285.5643</td> <td>  208.975</td> <td>    1.366</td> <td> 0.172</td> <td> -124.049</td> <td>  695.178</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x33</th>      <td> -566.8396</td> <td>  430.890</td> <td>   -1.316</td> <td> 0.188</td> <td>-1411.429</td> <td>  277.749</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x33^2</th>    <td> -566.8398</td> <td>  430.890</td> <td>   -1.316</td> <td> 0.188</td> <td>-1411.429</td> <td>  277.749</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x33</th>   <td>   -0.3282</td> <td>    1.079</td> <td>   -0.304</td> <td> 0.761</td> <td>   -2.444</td> <td>    1.787</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x34</th>  <td>    0.0759</td> <td>    0.045</td> <td>    1.676</td> <td> 0.094</td> <td>   -0.013</td> <td>    0.165</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x78</th>   <td>    0.0014</td> <td>    0.000</td> <td>   13.020</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x55</th>   <td> 7.481e-05</td> <td> 7.09e-05</td> <td>    1.056</td> <td> 0.291</td> <td>-6.41e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x63</th>   <td>    0.0845</td> <td>    0.047</td> <td>    1.794</td> <td> 0.073</td> <td>   -0.008</td> <td>    0.177</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x105</th> <td>   -0.0275</td> <td>    0.028</td> <td>   -0.973</td> <td> 0.330</td> <td>   -0.083</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15 x30</th>  <td>   -0.1352</td> <td>    0.071</td> <td>   -1.915</td> <td> 0.056</td> <td>   -0.274</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x52</th>   <td>    0.0007</td> <td>    0.000</td> <td>    6.006</td> <td> 0.000</td> <td>    0.001</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x87</th>   <td>    0.0045</td> <td>    0.063</td> <td>    0.072</td> <td> 0.942</td> <td>   -0.118</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x71</th>   <td>    0.0429</td> <td>    0.066</td> <td>    0.649</td> <td> 0.516</td> <td>   -0.087</td> <td>    0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x37</th>  <td>   -0.0941</td> <td>    0.049</td> <td>   -1.909</td> <td> 0.056</td> <td>   -0.191</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x106</th>  <td> 1.225e-05</td> <td> 1.27e-05</td> <td>    0.961</td> <td> 0.336</td> <td>-1.27e-05</td> <td> 3.72e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18 x29</th>  <td>    0.0059</td> <td>    0.030</td> <td>    0.197</td> <td> 0.843</td> <td>   -0.052</td> <td>    0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x32</th>  <td>   -0.2370</td> <td>    0.105</td> <td>   -2.261</td> <td> 0.024</td> <td>   -0.442</td> <td>   -0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x74</th>   <td>   -0.0005</td> <td>    0.000</td> <td>   -4.298</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x23</th>  <td>  -10.9024</td> <td>    4.169</td> <td>   -2.615</td> <td> 0.009</td> <td>  -19.074</td> <td>   -2.731</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x87</th>   <td>   -0.0212</td> <td>    0.257</td> <td>   -0.082</td> <td> 0.934</td> <td>   -0.526</td> <td>    0.484</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x87</th>   <td>   -0.0996</td> <td>    0.205</td> <td>   -0.486</td> <td> 0.627</td> <td>   -0.501</td> <td>    0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x87</th>   <td>    0.1058</td> <td>    0.052</td> <td>    2.015</td> <td> 0.044</td> <td>    0.003</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x23 x82</th>  <td>    0.0259</td> <td>    0.127</td> <td>    0.204</td> <td> 0.838</td> <td>   -0.223</td> <td>    0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x54</th>   <td>    0.0014</td> <td>    0.000</td> <td>    8.505</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x29</th>  <td>   -0.1016</td> <td>    0.055</td> <td>   -1.847</td> <td> 0.065</td> <td>   -0.210</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x83</th>   <td>    0.1720</td> <td>    0.023</td> <td>    7.451</td> <td> 0.000</td> <td>    0.127</td> <td>    0.217</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x106</th> <td>   -0.0499</td> <td>    0.041</td> <td>   -1.211</td> <td> 0.226</td> <td>   -0.131</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x87</th>   <td>    0.1991</td> <td>    0.062</td> <td>    3.236</td> <td> 0.001</td> <td>    0.079</td> <td>    0.320</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x38</th>   <td>    0.0656</td> <td>    0.101</td> <td>    0.652</td> <td> 0.514</td> <td>   -0.132</td> <td>    0.263</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x109</th>  <td>    0.0124</td> <td>    0.010</td> <td>    1.298</td> <td> 0.194</td> <td>   -0.006</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x87</th>   <td>   -0.0651</td> <td>    0.094</td> <td>   -0.694</td> <td> 0.488</td> <td>   -0.249</td> <td>    0.119</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x15 x22</th>  <td>    0.0595</td> <td>    0.077</td> <td>    0.772</td> <td> 0.440</td> <td>   -0.092</td> <td>    0.210</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x87^2</th>    <td> 1051.9037</td> <td>  266.281</td> <td>    3.950</td> <td> 0.000</td> <td>  529.964</td> <td> 1573.843</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x87</th>      <td> 1051.9047</td> <td>  266.281</td> <td>    3.950</td> <td> 0.000</td> <td>  529.965</td> <td> 1573.844</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x87</th>   <td> -544.7495</td> <td>  137.799</td> <td>   -3.953</td> <td> 0.000</td> <td> -814.849</td> <td> -274.650</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x62</th>   <td>    0.0395</td> <td>    0.055</td> <td>    0.717</td> <td> 0.473</td> <td>   -0.069</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x39</th>  <td>    0.0283</td> <td>    0.038</td> <td>    0.748</td> <td> 0.455</td> <td>   -0.046</td> <td>    0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x55</th>  <td>    0.0410</td> <td>    0.041</td> <td>    0.990</td> <td> 0.322</td> <td>   -0.040</td> <td>    0.122</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x59</th>  <td>   -0.0536</td> <td>    0.039</td> <td>   -1.371</td> <td> 0.170</td> <td>   -0.130</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x66</th>   <td>    0.0015</td> <td> 9.18e-05</td> <td>   16.354</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x22 x82</th>  <td>    0.0815</td> <td>    0.124</td> <td>    0.660</td> <td> 0.509</td> <td>   -0.161</td> <td>    0.324</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x10 x28</th>  <td>    0.0232</td> <td>    0.015</td> <td>    1.593</td> <td> 0.111</td> <td>   -0.005</td> <td>    0.052</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x71</th>   <td>    0.0781</td> <td>    0.071</td> <td>    1.094</td> <td> 0.274</td> <td>   -0.062</td> <td>    0.218</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x109</th>  <td>-1.751e-05</td> <td> 1.23e-05</td> <td>   -1.427</td> <td> 0.154</td> <td>-4.16e-05</td> <td> 6.55e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x62</th>   <td>    0.0429</td> <td>    0.062</td> <td>    0.696</td> <td> 0.486</td> <td>   -0.078</td> <td>    0.164</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18 x22</th>  <td>    0.0716</td> <td>    0.040</td> <td>    1.768</td> <td> 0.077</td> <td>   -0.008</td> <td>    0.151</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x62</th>   <td>   -0.0857</td> <td>    0.077</td> <td>   -1.110</td> <td> 0.267</td> <td>   -0.237</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x23</th>   <td>    0.0582</td> <td>    0.012</td> <td>    4.976</td> <td> 0.000</td> <td>    0.035</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x57</th>   <td>   -0.0001</td> <td> 9.18e-05</td> <td>   -1.094</td> <td> 0.274</td> <td>   -0.000</td> <td> 7.95e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x38</th>   <td>    0.0614</td> <td>    0.084</td> <td>    0.731</td> <td> 0.465</td> <td>   -0.103</td> <td>    0.226</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x38</th>   <td>    0.0761</td> <td>    0.058</td> <td>    1.319</td> <td> 0.187</td> <td>   -0.037</td> <td>    0.189</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x38</th>   <td>   -0.1305</td> <td>    0.110</td> <td>   -1.190</td> <td> 0.234</td> <td>   -0.345</td> <td>    0.084</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x38</th>   <td>   -0.0548</td> <td>    0.065</td> <td>   -0.844</td> <td> 0.399</td> <td>   -0.182</td> <td>    0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x38</th>   <td>-6.422e-05</td> <td>    0.107</td> <td>   -0.001</td> <td> 1.000</td> <td>   -0.209</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x62</th>   <td>   -0.0230</td> <td>    0.060</td> <td>   -0.384</td> <td> 0.701</td> <td>   -0.140</td> <td>    0.094</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x72</th>  <td>   -0.0222</td> <td>    0.031</td> <td>   -0.724</td> <td> 0.469</td> <td>   -0.082</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x58</th>   <td>-2.723e-05</td> <td>    0.000</td> <td>   -0.144</td> <td> 0.885</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x38</th>   <td>   -0.3281</td> <td>    0.112</td> <td>   -2.919</td> <td> 0.004</td> <td>   -0.548</td> <td>   -0.108</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x4 x71</th>   <td>   -0.0630</td> <td>    0.079</td> <td>   -0.797</td> <td> 0.426</td> <td>   -0.218</td> <td>    0.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x33</th>   <td>   -0.0001</td> <td>    0.002</td> <td>   -0.072</td> <td> 0.942</td> <td>   -0.004</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2 x71</th>   <td>   -0.0607</td> <td>    0.091</td> <td>   -0.670</td> <td> 0.503</td> <td>   -0.238</td> <td>    0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x46</th>   <td>   -0.0037</td> <td>    0.000</td> <td>  -19.681</td> <td> 0.000</td> <td>   -0.004</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0 x63</th>   <td>   -0.0689</td> <td>    0.052</td> <td>   -1.318</td> <td> 0.187</td> <td>   -0.171</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x105</th> <td>   -0.0159</td> <td>    0.018</td> <td>   -0.867</td> <td> 0.386</td> <td>   -0.052</td> <td>    0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x114</th> <td>    0.0458</td> <td>    0.045</td> <td>    1.020</td> <td> 0.308</td> <td>   -0.042</td> <td>    0.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x62</th>   <td>    0.0823</td> <td>    0.035</td> <td>    2.385</td> <td> 0.017</td> <td>    0.015</td> <td>    0.150</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x28 x37</th>  <td>   -0.0875</td> <td>    0.038</td> <td>   -2.297</td> <td> 0.022</td> <td>   -0.162</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1 x105</th>  <td>    0.0548</td> <td>    0.010</td> <td>    5.361</td> <td> 0.000</td> <td>    0.035</td> <td>    0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x8 x71</th>   <td>   -0.0433</td> <td>    0.080</td> <td>   -0.540</td> <td> 0.589</td> <td>   -0.201</td> <td>    0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x62</th>  <td>   -0.0297</td> <td>    0.029</td> <td>   -1.008</td> <td> 0.313</td> <td>   -0.087</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x38</th>   <td>  111.2663</td> <td>   59.489</td> <td>    1.870</td> <td> 0.061</td> <td>   -5.339</td> <td>  227.872</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x38</th>      <td> -213.3833</td> <td>  114.665</td> <td>   -1.861</td> <td> 0.063</td> <td> -438.138</td> <td>   11.372</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x38^2</th>    <td> -213.3830</td> <td>  114.665</td> <td>   -1.861</td> <td> 0.063</td> <td> -438.138</td> <td>   11.372</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x62</th>   <td>   -0.0515</td> <td>    0.040</td> <td>   -1.272</td> <td> 0.203</td> <td>   -0.131</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x10 x29</th>  <td>   -0.0210</td> <td>    0.026</td> <td>   -0.793</td> <td> 0.428</td> <td>   -0.073</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x30 x112</th> <td>    0.0061</td> <td>    0.028</td> <td>    0.220</td> <td> 0.826</td> <td>   -0.048</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x62</th>   <td>   -7.3584</td> <td>   17.827</td> <td>   -0.413</td> <td> 0.680</td> <td>  -42.302</td> <td>   27.585</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x62^2</th>    <td>   14.3153</td> <td>   34.419</td> <td>    0.416</td> <td> 0.677</td> <td>  -53.149</td> <td>   81.780</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x62</th>      <td>   14.3153</td> <td>   34.419</td> <td>    0.416</td> <td> 0.677</td> <td>  -53.149</td> <td>   81.780</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x16</th>  <td>   -0.0418</td> <td>    0.037</td> <td>   -1.138</td> <td> 0.255</td> <td>   -0.114</td> <td>    0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x108</th> <td>    0.0043</td> <td>    0.014</td> <td>    0.305</td> <td> 0.760</td> <td>   -0.023</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x7 x20</th>   <td>    0.0017</td> <td>    0.000</td> <td>    9.496</td> <td> 0.000</td> <td>    0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x109</th> <td>   -0.0636</td> <td>    0.043</td> <td>   -1.462</td> <td> 0.144</td> <td>   -0.149</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x112</th> <td>   -0.0045</td> <td>    0.017</td> <td>   -0.270</td> <td> 0.787</td> <td>   -0.037</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x71</th>   <td>    0.0022</td> <td>    0.041</td> <td>    0.054</td> <td> 0.957</td> <td>   -0.079</td> <td>    0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x28</th>  <td>   -0.0728</td> <td>    0.051</td> <td>   -1.419</td> <td> 0.156</td> <td>   -0.173</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x71</th>   <td>    0.0491</td> <td>    0.046</td> <td>    1.077</td> <td> 0.281</td> <td>   -0.040</td> <td>    0.138</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x18 x59</th>  <td>    0.0638</td> <td>    0.054</td> <td>    1.177</td> <td> 0.239</td> <td>   -0.042</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x11 x71</th>  <td>    0.0239</td> <td>    0.035</td> <td>    0.681</td> <td> 0.496</td> <td>   -0.045</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x29 x39</th>  <td>    0.0769</td> <td>    0.029</td> <td>    2.633</td> <td> 0.008</td> <td>    0.020</td> <td>    0.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x71</th>  <td>    0.0445</td> <td>    0.035</td> <td>    1.258</td> <td> 0.208</td> <td>   -0.025</td> <td>    0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x71</th>      <td>  190.3687</td> <td>   76.764</td> <td>    2.480</td> <td> 0.013</td> <td>   39.904</td> <td>  340.834</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x71^2</th>    <td>  190.3687</td> <td>   76.764</td> <td>    2.480</td> <td> 0.013</td> <td>   39.904</td> <td>  340.834</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x6 x71</th>   <td>  -98.3878</td> <td>   39.743</td> <td>   -2.476</td> <td> 0.013</td> <td> -176.289</td> <td>  -20.486</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x21 x33</th>  <td>    0.2482</td> <td>    0.655</td> <td>    0.379</td> <td> 0.705</td> <td>   -1.037</td> <td>    1.533</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x3 x63</th>   <td>   -0.0846</td> <td>    0.034</td> <td>   -2.466</td> <td> 0.014</td> <td>   -0.152</td> <td>   -0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x28 x34</th>  <td>    0.0732</td> <td>    0.022</td> <td>    3.302</td> <td> 0.001</td> <td>    0.030</td> <td>    0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x9 x63</th>   <td>    0.0928</td> <td>    0.035</td> <td>    2.678</td> <td> 0.007</td> <td>    0.025</td> <td>    0.161</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x83</th>   <td> 2.458e-05</td> <td> 2.53e-05</td> <td>    0.973</td> <td> 0.331</td> <td> -2.5e-05</td> <td> 7.41e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x105</th>  <td> 2.045e-05</td> <td> 1.35e-05</td> <td>    1.515</td> <td> 0.130</td> <td>   -6e-06</td> <td> 4.69e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x31 x110</th> <td>    0.0152</td> <td>    0.039</td> <td>    0.391</td> <td> 0.696</td> <td>   -0.061</td> <td>    0.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x5 x87</th>   <td>   -0.0002</td> <td>    0.000</td> <td>   -1.277</td> <td> 0.202</td> <td>   -0.000</td> <td> 8.97e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x19 x34</th>  <td>   -0.0779</td> <td>    0.042</td> <td>   -1.878</td> <td> 0.060</td> <td>   -0.159</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>1</th>        <td>-1.695e+05</td> <td> 4323.454</td> <td>  -39.203</td> <td> 0.000</td> <td>-1.78e+05</td> <td>-1.61e+05</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>985.141</td> <th>  Durbin-Watson:     </th> <td>   2.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>3519.551</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.193</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 5.177</td>  <th>  Cond. No.          </th> <td>1.11e+16</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 7.02e-17. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:               ln_price   R-squared:                       0.865\n",
       "Model:                            OLS   Adj. R-squared:                  0.861\n",
       "Method:                 Least Squares   F-statistic:                     228.4\n",
       "Date:                Fri, 16 Jul 2021   Prob (F-statistic):               0.00\n",
       "Time:                        15:18:52   Log-Likelihood:                 3842.4\n",
       "No. Observations:               17276   AIC:                            -6739.\n",
       "Df Residuals:                   16803   BIC:                            -3070.\n",
       "Df Model:                         472                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "x2 x8         -0.2859      0.110     -2.600      0.009      -0.501      -0.070\n",
       "x2^2          -0.9686      0.339     -2.856      0.004      -1.633      -0.304\n",
       "x2 x6         25.2040      9.582      2.630      0.009       6.421      43.987\n",
       "x2           -93.4344     37.313     -2.504      0.012    -166.571     -20.298\n",
       "x2 x4          1.8061      0.500      3.615      0.000       0.827       2.785\n",
       "x4 x8          0.2626      0.100      2.621      0.009       0.066       0.459\n",
       "x6 x8          0.8822      3.145      0.281      0.779      -5.282       7.046\n",
       "x8^2           0.0846      0.024      3.479      0.001       0.037       0.132\n",
       "x8            -4.0797     12.157     -0.336      0.737     -27.908      19.749\n",
       "x4 x6        -20.4891      8.691     -2.358      0.018     -37.524      -3.454\n",
       "x4^2          -0.8035      0.379     -2.122      0.034      -1.546      -0.061\n",
       "x4            75.6064     33.884      2.231      0.026       9.191     142.022\n",
       "x1 x2          0.2314      0.101      2.291      0.022       0.033       0.429\n",
       "x1^2           0.0532      0.020      2.636      0.008       0.014       0.093\n",
       "x1 x4         -0.2200      0.088     -2.494      0.013      -0.393      -0.047\n",
       "x1 x8         -0.1451      0.036     -4.031      0.000      -0.216      -0.075\n",
       "x1 x3          0.0429      0.018      2.395      0.017       0.008       0.078\n",
       "x1 x9          0.0639      0.020      3.262      0.001       0.025       0.102\n",
       "x0 x1         -0.0743      0.030     -2.472      0.013      -0.133      -0.015\n",
       "x1 x6        -14.0245      2.577     -5.443      0.000     -19.075      -8.974\n",
       "x1            54.2245      9.953      5.448      0.000      34.716      73.733\n",
       "x6          8.762e+04   2238.559     39.141      0.000    8.32e+04     9.2e+04\n",
       "x6^2       -1.132e+04    289.806    -39.072      0.000   -1.19e+04   -1.08e+04\n",
       "x0 x2          0.0145      0.103      0.141      0.888      -0.187       0.216\n",
       "x0 x4         -0.0007      0.092     -0.008      0.994      -0.180       0.179\n",
       "x0 x8         -0.0153      0.039     -0.395      0.693      -0.091       0.061\n",
       "x2 x9          0.0837      0.068      1.233      0.218      -0.049       0.217\n",
       "x2 x3         -0.1241      0.063     -1.982      0.047      -0.247      -0.001\n",
       "x1 x5      -3.664e-05    5.3e-05     -0.692      0.489      -0.000    6.72e-05\n",
       "x4 x9         -0.1065      0.062     -1.711      0.087      -0.229       0.016\n",
       "x3 x4          0.1035      0.058      1.793      0.073      -0.010       0.217\n",
       "x0 x3          0.0054      0.019      0.285      0.776      -0.032       0.042\n",
       "x0^2          -0.0152      0.020     -0.757      0.449      -0.055       0.024\n",
       "x0 x9         -0.0454      0.021     -2.148      0.032      -0.087      -0.004\n",
       "x1 x11         0.0023      0.021      0.112      0.911      -0.038       0.043\n",
       "x4 x5         -0.0005      0.000     -2.304      0.021      -0.001   -6.78e-05\n",
       "x0 x6          4.2839      2.884      1.485      0.137      -1.369       9.937\n",
       "x1 x30         0.1446      0.053      2.735      0.006       0.041       0.248\n",
       "x0           -16.1599     11.138     -1.451      0.147     -37.991       5.671\n",
       "x0 x30        -0.0117      0.050     -0.232      0.816      -0.110       0.087\n",
       "x2 x30         0.2866      0.264      1.084      0.278      -0.231       0.805\n",
       "x7 x27        -0.0024      0.000     -6.360      0.000      -0.003      -0.002\n",
       "x4 x30        -0.0729      0.231     -0.315      0.753      -0.526       0.381\n",
       "x2 x5          0.0005      0.000      1.408      0.159      -0.000       0.001\n",
       "x8 x30        -0.1390      0.045     -3.068      0.002      -0.228      -0.050\n",
       "x6 x30        14.4196      3.991      3.613      0.000       6.596      22.243\n",
       "x30^2        -27.6357      7.725     -3.577      0.000     -42.778     -12.493\n",
       "x30          -27.8122      7.726     -3.600      0.000     -42.955     -12.669\n",
       "x8 x9          0.0133      0.021      0.648      0.517      -0.027       0.054\n",
       "x5 x8          0.0001   5.17e-05      2.735      0.006    4.01e-05       0.000\n",
       "x3 x8         -0.0254      0.019     -1.313      0.189      -0.063       0.012\n",
       "x9 x30         0.0285      0.025      1.152      0.249      -0.020       0.077\n",
       "x3 x30        -0.0465      0.022     -2.080      0.038      -0.090      -0.003\n",
       "x0 x5      -3.354e-05   5.22e-05     -0.643      0.520      -0.000    6.88e-05\n",
       "x5 x11      3.766e-05   3.78e-05      0.996      0.319   -3.64e-05       0.000\n",
       "x5^2       -5.065e-08   4.99e-08     -1.015      0.310   -1.48e-07    4.72e-08\n",
       "x5 x6         -0.0066      0.005     -1.372      0.170      -0.016       0.003\n",
       "x5             0.0243      0.018      1.321      0.187      -0.012       0.060\n",
       "x3 x5       1.909e-05   2.91e-05      0.656      0.512    -3.8e-05    7.62e-05\n",
       "x5 x9      -4.807e-05   3.13e-05     -1.536      0.125      -0.000    1.33e-05\n",
       "x0 x11         0.1454      0.022      6.471      0.000       0.101       0.189\n",
       "x1 x29         0.0235      0.036      0.646      0.518      -0.048       0.095\n",
       "x0 x29         0.0379      0.035      1.098      0.272      -0.030       0.106\n",
       "x2 x29         0.1619      0.164      0.987      0.324      -0.160       0.484\n",
       "x8 x29        -0.1668      0.032     -5.168      0.000      -0.230      -0.104\n",
       "x4 x29         0.0166      0.143      0.116      0.908      -0.264       0.297\n",
       "x6 x29         9.3890      2.469      3.803      0.000       4.549      14.229\n",
       "x29^2        -17.8351      4.781     -3.730      0.000     -27.206      -8.464\n",
       "x29          -17.8771      4.781     -3.739      0.000     -27.249      -8.506\n",
       "x7 x26        -0.0015      0.000     -4.035      0.000      -0.002      -0.001\n",
       "x9 x29         0.0375      0.020      1.874      0.061      -0.002       0.077\n",
       "x3 x29        -0.0559      0.018     -3.026      0.002      -0.092      -0.020\n",
       "x3 x11        -0.0030      0.012     -0.245      0.807      -0.027       0.021\n",
       "x2 x11        -0.0132      0.091     -0.145      0.885      -0.192       0.165\n",
       "x9 x11         0.0154      0.013      1.152      0.249      -0.011       0.042\n",
       "x4 x11         0.0497      0.083      0.596      0.551      -0.114       0.213\n",
       "x8 x11        -0.0480      0.024     -1.962      0.050      -0.096   -5.13e-05\n",
       "x1 x21        -0.0128      0.053     -0.241      0.810      -0.117       0.092\n",
       "x11 x30       -0.0507      0.024     -2.121      0.034      -0.098      -0.004\n",
       "x1 x31         0.0954      0.083      1.154      0.248      -0.067       0.257\n",
       "x2 x31         0.9104      0.450      2.023      0.043       0.028       1.792\n",
       "x4 x31        -0.5730      0.393     -1.459      0.145      -1.343       0.197\n",
       "x6 x31        10.5032      7.302      1.438      0.150      -3.810      24.816\n",
       "x31          -20.3674     14.196     -1.435      0.151     -48.194       7.459\n",
       "x31^2        -20.3244     14.196     -1.432      0.152     -48.151       7.502\n",
       "x8 x31        -0.1436      0.070     -2.061      0.039      -0.280      -0.007\n",
       "x21 x30       -0.0950      0.165     -0.577      0.564      -0.418       0.228\n",
       "x6 x11        -6.9629      1.762     -3.953      0.000     -10.416      -3.510\n",
       "x0 x31        -0.2939      0.083     -3.527      0.000      -0.457      -0.131\n",
       "x11^2         13.3292      3.398      3.922      0.000       6.668      19.991\n",
       "x11           13.3406      3.399      3.925      0.000       6.679      20.002\n",
       "x9 x31        -0.0240      0.037     -0.649      0.516      -0.097       0.049\n",
       "x3 x31        -0.0160      0.032     -0.505      0.613      -0.078       0.046\n",
       "x1 x19         0.0761      0.073      1.042      0.297      -0.067       0.219\n",
       "x21 x31        0.0283      0.080      0.353      0.724      -0.129       0.186\n",
       "x11 x29       -0.0483      0.016     -3.014      0.003      -0.080      -0.017\n",
       "x11 x31       -0.0251      0.038     -0.663      0.507      -0.099       0.049\n",
       "x21 x29        0.0422      0.166      0.254      0.800      -0.284       0.368\n",
       "x2 x19         0.2726      0.256      1.064      0.287      -0.230       0.775\n",
       "x4 x19        -0.2949      0.193     -1.530      0.126      -0.673       0.083\n",
       "x5 x30        -0.0001   9.18e-05     -1.198      0.231      -0.000    6.99e-05\n",
       "x0 x19        -0.1059      0.073     -1.451      0.147      -0.249       0.037\n",
       "x8 x19         0.0088      0.082      0.107      0.915      -0.153       0.170\n",
       "x5 x29     -6.093e-05   6.82e-05     -0.894      0.371      -0.000    7.27e-05\n",
       "x3 x19         0.0418      0.042      1.003      0.316      -0.040       0.124\n",
       "x6 x19        19.8225      7.606      2.606      0.009       4.915      34.730\n",
       "x19^2        -32.5666     12.507     -2.604      0.009     -57.082      -8.051\n",
       "x19          -32.5626     12.507     -2.604      0.009     -57.078      -8.047\n",
       "x9 x19        -0.0444      0.047     -0.936      0.349      -0.137       0.049\n",
       "x1 x37         0.0378      0.077      0.493      0.622      -0.112       0.188\n",
       "x0 x37         0.0159      0.071      0.225      0.822      -0.123       0.155\n",
       "x2 x37        -0.0596      0.196     -0.305      0.761      -0.443       0.324\n",
       "x4 x37         0.1600      0.166      0.963      0.336      -0.166       0.486\n",
       "x8 x37        -0.0356      0.071     -0.504      0.614      -0.174       0.103\n",
       "x3 x37        -0.1079      0.063     -1.713      0.087      -0.231       0.016\n",
       "x9 x37         0.2301      0.068      3.378      0.001       0.097       0.364\n",
       "x5 x21        -0.0001   6.05e-05     -2.308      0.021      -0.000   -2.11e-05\n",
       "x6 x37        98.1601     32.433      3.027      0.002      34.589     161.732\n",
       "x37         -190.1420     62.592     -3.038      0.002    -312.828     -67.456\n",
       "x37^2       -190.1407     62.592     -3.038      0.002    -312.827     -67.455\n",
       "x11 x21        0.0193      0.063      0.308      0.758      -0.103       0.142\n",
       "x5 x31        -0.0002      0.000     -1.759      0.079      -0.000    2.51e-05\n",
       "x5 x19        -0.0001   7.89e-05     -1.584      0.113      -0.000    2.97e-05\n",
       "x1 x59        -0.0029      0.081     -0.035      0.972      -0.162       0.156\n",
       "x1 x18        -0.0313      0.051     -0.617      0.537      -0.131       0.068\n",
       "x1 x17        -0.0751      0.035     -2.142      0.032      -0.144      -0.006\n",
       "x0 x59         0.1539      0.086      1.799      0.072      -0.014       0.322\n",
       "x2 x59        -0.2247      0.212     -1.059      0.290      -0.641       0.191\n",
       "x4 x59         0.1512      0.161      0.940      0.347      -0.164       0.466\n",
       "x3 x59         0.0533      0.055      0.962      0.336      -0.055       0.162\n",
       "x8 x59        -0.1709      0.105     -1.633      0.102      -0.376       0.034\n",
       "x9 x59         0.0939      0.072      1.295      0.195      -0.048       0.236\n",
       "x1 x15        -0.0918      0.105     -0.875      0.382      -0.298       0.114\n",
       "x59^2         68.1220     75.252      0.905      0.365     -79.380     215.624\n",
       "x59           68.1213     75.252      0.905      0.365     -79.381     215.623\n",
       "x6 x59       -35.0858     38.903     -0.902      0.367    -111.340      41.168\n",
       "x1 x82         0.1092      0.057      1.905      0.057      -0.003       0.222\n",
       "x0 x15         0.1148      0.099      1.156      0.248      -0.080       0.309\n",
       "x2 x15         0.0505      0.296      0.171      0.865      -0.530       0.631\n",
       "x4 x15         0.0793      0.244      0.325      0.745      -0.398       0.557\n",
       "x0 x18        -0.0434      0.051     -0.847      0.397      -0.144       0.057\n",
       "x0 x82         0.0045      0.060      0.075      0.940      -0.113       0.122\n",
       "x8 x15        -0.0276      0.110     -0.252      0.801      -0.243       0.187\n",
       "x2 x18         0.1433      0.157      0.914      0.361      -0.164       0.451\n",
       "x2 x32         0.2085      0.780      0.267      0.789      -1.321       1.738\n",
       "x4 x18        -0.1798      0.124     -1.455      0.146      -0.422       0.062\n",
       "x4 x32         0.2991      0.667      0.448      0.654      -1.009       1.607\n",
       "x0 x32        -0.0492      0.183     -0.269      0.788      -0.407       0.309\n",
       "x6 x32        47.7563     16.669      2.865      0.004      15.083      80.430\n",
       "x32          -93.4848     32.354     -2.889      0.004    -156.902     -30.068\n",
       "x32^2        -93.4863     32.354     -2.889      0.004    -156.903     -30.069\n",
       "x1 x32        -0.0961      0.175     -0.550      0.582      -0.439       0.246\n",
       "x8 x32        -0.0381      0.145     -0.263      0.792      -0.322       0.246\n",
       "x8 x18         0.0479      0.052      0.915      0.360      -0.055       0.151\n",
       "x6 x15         6.4711     12.030      0.538      0.591     -17.109      30.052\n",
       "x15^2        -12.6467     23.144     -0.546      0.585     -58.011      32.718\n",
       "x15          -12.6476     23.144     -0.546      0.585     -58.012      32.717\n",
       "x3 x32        -0.0680      0.065     -1.044      0.296      -0.196       0.060\n",
       "x9 x32         0.0371      0.064      0.580      0.562      -0.088       0.162\n",
       "x4 x82         0.0224      0.170      0.132      0.895      -0.310       0.355\n",
       "x2 x82        -0.1847      0.213     -0.866      0.387      -0.603       0.233\n",
       "x3 x15        -0.0043      0.047     -0.091      0.927      -0.096       0.087\n",
       "x3 x82         0.0992      0.048      2.065      0.039       0.005       0.193\n",
       "x9 x15        -0.0134      0.053     -0.252      0.801      -0.117       0.091\n",
       "x9 x82         0.0421      0.062      0.683      0.495      -0.079       0.163\n",
       "x19 x21      -10.8564      4.171     -2.603      0.009     -19.032      -2.681\n",
       "x8 x82         0.1909      0.069      2.778      0.005       0.056       0.326\n",
       "x6 x18        -1.6137      4.533     -0.356      0.722     -10.498       7.271\n",
       "x18            3.3537      8.746      0.383      0.701     -13.790      20.497\n",
       "x18^2          3.3492      8.746      0.383      0.702     -13.794      20.493\n",
       "x5 x18     -2.975e-05   5.57e-05     -0.534      0.593      -0.000    7.94e-05\n",
       "x3 x18         0.0121      0.026      0.463      0.643      -0.039       0.063\n",
       "x21 x37        0.0927      0.060      1.542      0.123      -0.025       0.211\n",
       "x9 x18        -0.0543      0.029     -1.873      0.061      -0.111       0.003\n",
       "x6 x82       254.3900     99.661      2.553      0.011      59.043     449.737\n",
       "x82         -492.0269    192.441     -2.557      0.011    -869.231    -114.823\n",
       "x82^2       -492.0261    192.441     -2.557      0.011    -869.230    -114.822\n",
       "x0 x17         0.0599      0.036      1.667      0.095      -0.011       0.130\n",
       "x15 x19        0.1038      0.070      1.490      0.136      -0.033       0.240\n",
       "x11 x19       -0.0430      0.040     -1.086      0.277      -0.121       0.035\n",
       "x2 x17        -0.0063      0.105     -0.060      0.952      -0.212       0.199\n",
       "x4 x17         0.0165      0.088      0.187      0.852      -0.156       0.190\n",
       "x1 x39         0.0277      0.059      0.469      0.639      -0.088       0.144\n",
       "x8 x17         0.0058      0.037      0.157      0.876      -0.067       0.078\n",
       "x7 x47        -0.0003      0.000     -2.316      0.021      -0.000   -3.97e-05\n",
       "x1 x34         0.0455      0.037      1.244      0.214      -0.026       0.117\n",
       "x22 x29        0.0498      0.166      0.299      0.765      -0.276       0.376\n",
       "x11 x37       -0.0813      0.040     -2.048      0.041      -0.159      -0.003\n",
       "x6 x17         5.4479      3.324      1.639      0.101      -1.068      11.964\n",
       "x17^2        -10.4429      6.417     -1.627      0.104     -23.020       2.134\n",
       "x17          -10.4466      6.417     -1.628      0.104     -23.024       2.131\n",
       "x3 x17        -0.0497      0.022     -2.275      0.023      -0.092      -0.007\n",
       "x5 x37     -4.101e-05   7.01e-05     -0.585      0.558      -0.000    9.63e-05\n",
       "x9 x17         0.0336      0.024      1.382      0.167      -0.014       0.081\n",
       "x5 x17     -9.733e-06   4.16e-05     -0.234      0.815   -9.14e-05    7.19e-05\n",
       "x1 x23        -0.0779      0.057     -1.377      0.169      -0.189       0.033\n",
       "x11 x32       -0.0170      0.085     -0.200      0.842      -0.183       0.149\n",
       "x5 x23     -9.932e-05   6.16e-05     -1.612      0.107      -0.000    2.15e-05\n",
       "x5 x82     -5.215e-05   8.42e-05     -0.620      0.536      -0.000       0.000\n",
       "x21 x32        0.0592      0.080      0.740      0.459      -0.098       0.216\n",
       "x5 x59      1.251e-05   7.01e-05      0.179      0.858      -0.000       0.000\n",
       "x5 x15      2.948e-05   9.39e-05      0.314      0.754      -0.000       0.000\n",
       "x11 x17        0.0006      0.022      0.027      0.979      -0.042       0.043\n",
       "x5 x28        -0.0001   4.76e-05     -2.382      0.017      -0.000   -2.01e-05\n",
       "x4 x39         0.0568      0.114      0.498      0.619      -0.167       0.281\n",
       "x2 x39        -0.0808      0.144     -0.561      0.575      -0.363       0.202\n",
       "x5 x34      5.956e-05   5.09e-05      1.170      0.242   -4.03e-05       0.000\n",
       "x11 x18       -0.0227      0.029     -0.779      0.436      -0.080       0.034\n",
       "x0 x39         0.0402      0.060      0.675      0.500      -0.077       0.157\n",
       "x7 x98         0.0025      0.000     21.367      0.000       0.002       0.003\n",
       "x8 x39         0.0912      0.068      1.344      0.179      -0.042       0.224\n",
       "x11 x59       -0.0444      0.040     -1.100      0.271      -0.124       0.035\n",
       "x7 x25        -0.0007      0.000     -1.811      0.070      -0.001    5.78e-05\n",
       "x9 x39         0.0787      0.049      1.606      0.108      -0.017       0.175\n",
       "x3 x39        -0.0535      0.038     -1.395      0.163      -0.129       0.022\n",
       "x39         -324.2200    112.580     -2.880      0.004    -544.889    -103.551\n",
       "x39^2       -324.2186    112.580     -2.880      0.004    -544.887    -103.550\n",
       "x6 x39       167.7229     58.291      2.877      0.004      53.466     281.980\n",
       "x3^2           0.0080      0.004      2.211      0.027       0.001       0.015\n",
       "x3 x6         -2.6266      1.699     -1.546      0.122      -5.957       0.704\n",
       "x1 x58        -0.2394      0.207     -1.156      0.248      -0.645       0.167\n",
       "x0 x58         0.3045      0.213      1.428      0.153      -0.113       0.722\n",
       "x4 x58        -0.0616      0.522     -0.118      0.906      -1.086       0.962\n",
       "x1 x55         0.0625      0.055      1.135      0.256      -0.045       0.170\n",
       "x2 x58         0.2873      0.694      0.414      0.679      -1.072       1.647\n",
       "x7 x60         0.0007   9.26e-05      7.204      0.000       0.000       0.001\n",
       "x11 x15       -0.0023      0.058     -0.040      0.968      -0.117       0.112\n",
       "x3 x58        -0.1554      0.186     -0.835      0.404      -0.520       0.209\n",
       "x9 x58         0.4189      0.236      1.773      0.076      -0.044       0.882\n",
       "x3 x9          0.0113      0.007      1.563      0.118      -0.003       0.025\n",
       "x8 x58        -0.3680      0.226     -1.631      0.103      -0.810       0.074\n",
       "x3            10.2705      6.575      1.562      0.118      -2.618      23.159\n",
       "x6 x58      -283.0322    225.364     -1.256      0.209    -724.769     158.705\n",
       "x58^2        546.2917    435.480      1.254      0.210    -307.294    1399.878\n",
       "x58          546.2919    435.480      1.254      0.210    -307.294    1399.878\n",
       "x22 x30       -0.1347      0.166     -0.812      0.417      -0.460       0.190\n",
       "x18 x21        0.0282      0.039      0.723      0.470      -0.048       0.105\n",
       "x5 x22        -0.0001   6.05e-05     -1.941      0.052      -0.000    1.18e-06\n",
       "x11 x39       -0.0588      0.039     -1.519      0.129      -0.135       0.017\n",
       "x11 x82        0.0940      0.031      3.062      0.002       0.034       0.154\n",
       "x15 x21       -0.0019      0.072     -0.027      0.979      -0.143       0.139\n",
       "x19 x30        0.0362      0.069      0.525      0.600      -0.099       0.171\n",
       "x23 x30       -0.0305      0.168     -0.182      0.856      -0.359       0.298\n",
       "x21 x59        0.0628      0.043      1.460      0.144      -0.022       0.147\n",
       "x1 x72         0.1153      0.078      1.472      0.141      -0.038       0.269\n",
       "x6 x9        -14.0478      1.872     -7.506      0.000     -17.716     -10.379\n",
       "x9^2          -0.0025      0.005     -0.523      0.601      -0.012       0.007\n",
       "x11 x23        0.0823      0.065      1.274      0.203      -0.044       0.209\n",
       "x0 x34         0.0021      0.036      0.060      0.952      -0.067       0.072\n",
       "x7 x35        -0.0005      0.000     -3.097      0.002      -0.001      -0.000\n",
       "x0 x55         0.0341      0.065      0.526      0.599      -0.093       0.161\n",
       "x21 x39        0.0234      0.025      0.940      0.347      -0.025       0.072\n",
       "x5 x39     -2.665e-05   5.31e-05     -0.502      0.615      -0.000    7.74e-05\n",
       "x2 x72        -0.1568      0.113     -1.394      0.163      -0.377       0.064\n",
       "x4 x72        -0.1411      0.096     -1.474      0.141      -0.329       0.047\n",
       "x8 x72         0.0182      0.081      0.224      0.823      -0.141       0.178\n",
       "x9            54.1857      7.243      7.481      0.000      39.988      68.383\n",
       "x0 x72        -0.0372      0.081     -0.460      0.645      -0.196       0.121\n",
       "x5 x32     -1.473e-05      0.000     -0.080      0.936      -0.000       0.000\n",
       "x72           69.0715    121.440      0.569      0.570    -168.963     307.106\n",
       "x72^2         69.0714    121.440      0.569      0.570    -168.963     307.106\n",
       "x6 x72       -35.2788     62.865     -0.561      0.575    -158.501      87.944\n",
       "x22 x31        0.0118      0.085      0.138      0.890      -0.156       0.179\n",
       "x2 x55        -0.2259      0.165     -1.367      0.172      -0.550       0.098\n",
       "x3 x72         0.0199      0.028      0.710      0.477      -0.035       0.075\n",
       "x11 x58       -0.0001      0.110     -0.001      0.999      -0.216       0.216\n",
       "x4 x55         0.2248      0.151      1.493      0.135      -0.070       0.520\n",
       "x9 x72         0.0089      0.031      0.284      0.776      -0.052       0.070\n",
       "x11 x34        0.0570      0.022      2.567      0.010       0.013       0.101\n",
       "x1 x22        -0.0559      0.053     -1.050      0.294      -0.160       0.049\n",
       "x23 x29        0.0766      0.168      0.456      0.648      -0.252       0.406\n",
       "x11 x55       -0.0375      0.038     -0.989      0.323      -0.112       0.037\n",
       "x1 x16        -0.1708      0.066     -2.592      0.010      -0.300      -0.042\n",
       "x8 x55        -0.0897      0.055     -1.645      0.100      -0.197       0.017\n",
       "x22 x37        0.0515      0.060      0.856      0.392      -0.066       0.169\n",
       "x0 x21        -0.0637      0.007     -9.302      0.000      -0.077      -0.050\n",
       "x30 x37       -0.1539      0.057     -2.711      0.007      -0.265      -0.043\n",
       "x17 x21       -0.0157      0.017     -0.934      0.350      -0.049       0.017\n",
       "x1 x10         0.0873      0.015      5.990      0.000       0.059       0.116\n",
       "x1 x103        0.1406      0.054      2.584      0.010       0.034       0.247\n",
       "x19 x22      -10.8030      4.168     -2.592      0.010     -18.972      -2.634\n",
       "x19 x31       -0.1156      0.091     -1.267      0.205      -0.294       0.063\n",
       "x17 x31        0.0007      0.044      0.015      0.988      -0.085       0.086\n",
       "x3 x55         0.0668      0.037      1.801      0.072      -0.006       0.139\n",
       "x30 x107      -0.0567      0.025     -2.258      0.024      -0.106      -0.007\n",
       "x0 x28         0.0289      0.022      1.330      0.183      -0.014       0.071\n",
       "x9 x55        -0.0266      0.044     -0.607      0.544      -0.113       0.059\n",
       "x18 x30        0.0718      0.041      1.730      0.084      -0.010       0.153\n",
       "x2 x34        -0.0689      0.116     -0.596      0.551      -0.296       0.158\n",
       "x55^2        104.5410     70.354      1.486      0.137     -33.361     242.443\n",
       "x55          104.5404     70.354      1.486      0.137     -33.361     242.442\n",
       "x6 x55       -53.9860     36.376     -1.484      0.138    -125.288      17.316\n",
       "x11 x22        0.0455      0.063      0.723      0.469      -0.078       0.169\n",
       "x1 x12        -0.0482      0.081     -0.594      0.553      -0.207       0.111\n",
       "x7 x102        0.0013      0.000     10.689      0.000       0.001       0.001\n",
       "x1 x77         0.0061      0.062      0.098      0.922      -0.116       0.129\n",
       "x4 x34        -0.0313      0.094     -0.333      0.739      -0.215       0.153\n",
       "x5 x10     -1.167e-05   1.71e-05     -0.681      0.496   -4.52e-05    2.19e-05\n",
       "x22 x59        0.0009      0.041      0.021      0.983      -0.079       0.080\n",
       "x8 x34         0.0474      0.039      1.212      0.225      -0.029       0.124\n",
       "x30 x109       0.0173      0.026      0.668      0.504      -0.033       0.068\n",
       "x21 x55        0.0192      0.025      0.764      0.445      -0.030       0.068\n",
       "x30 x108      -0.0169      0.025     -0.680      0.497      -0.066       0.032\n",
       "x0 x103        0.0438      0.061      0.721      0.471      -0.075       0.163\n",
       "x29 x82        0.0783      0.036      2.147      0.032       0.007       0.150\n",
       "x11 x72        0.0435      0.046      0.949      0.343      -0.046       0.133\n",
       "x0 x12         0.2386      0.081      2.963      0.003       0.081       0.396\n",
       "x21 x72        0.0089      0.037      0.241      0.810      -0.064       0.082\n",
       "x2 x28         0.2213      0.097      2.281      0.023       0.031       0.411\n",
       "x21 x82        0.0729      0.122      0.599      0.549      -0.166       0.312\n",
       "x7 x36        -0.0004      0.000     -3.304      0.001      -0.001      -0.000\n",
       "x3 x28        -0.0446      0.013     -3.533      0.000      -0.069      -0.020\n",
       "x29 x34        0.0433      0.031      1.412      0.158      -0.017       0.103\n",
       "x21 x58        0.0008      0.089      0.008      0.993      -0.174       0.175\n",
       "x0 x16         0.1064      0.063      1.689      0.091      -0.017       0.230\n",
       "x5 x103    -7.442e-05   9.17e-05     -0.812      0.417      -0.000       0.000\n",
       "x30 x82       -0.0113      0.053     -0.215      0.830      -0.115       0.092\n",
       "x9 x28         0.0468      0.014      3.379      0.001       0.020       0.074\n",
       "x8 x28        -0.0089      0.024     -0.375      0.708      -0.056       0.038\n",
       "x1 x28        -0.0192      0.019     -0.996      0.319      -0.057       0.019\n",
       "x5 x12         0.0003      0.000      1.644      0.100   -4.92e-05       0.001\n",
       "x0 x77        -0.0148      0.059     -0.252      0.801      -0.130       0.101\n",
       "x2 x12        -0.6724      0.558     -1.205      0.228      -1.766       0.422\n",
       "x4 x28        -0.1109      0.084     -1.318      0.188      -0.276       0.054\n",
       "x3 x34        -0.0241      0.024     -0.985      0.325      -0.072       0.024\n",
       "x1 x106        0.0805      0.010      8.406      0.000       0.062       0.099\n",
       "x4 x12         0.4672      0.498      0.938      0.348      -0.509       1.444\n",
       "x2 x103       -0.1702      0.192     -0.886      0.376      -0.547       0.207\n",
       "x9 x34        -0.0088      0.027     -0.332      0.740      -0.061       0.043\n",
       "x4 x103       -0.0264      0.147     -0.180      0.857      -0.314       0.261\n",
       "x6 x34        -9.5860      3.616     -2.651      0.008     -16.674      -2.498\n",
       "x34           18.8361      6.972      2.702      0.007       5.171      32.501\n",
       "x34^2         18.8390      6.972      2.702      0.007       5.174      32.504\n",
       "x23 x28        0.0253      0.015      1.638      0.101      -0.005       0.056\n",
       "x8 x12         0.1472      0.091      1.618      0.106      -0.031       0.326\n",
       "x3 x12         0.1405      0.058      2.428      0.015       0.027       0.254\n",
       "x5 x107     3.116e-06   1.16e-05      0.269      0.788   -1.96e-05    2.58e-05\n",
       "x3 x103        0.1717      0.042      4.109      0.000       0.090       0.254\n",
       "x2 x77        -0.1023      0.211     -0.485      0.628      -0.516       0.311\n",
       "x4 x77         0.0910      0.163      0.558      0.577      -0.229       0.411\n",
       "x6 x28         2.6384      1.546      1.707      0.088      -0.391       5.668\n",
       "x8 x103       -0.0963      0.068     -1.424      0.154      -0.229       0.036\n",
       "x29 x108      -0.0068      0.017     -0.391      0.695      -0.041       0.027\n",
       "x3 x77         0.1448      0.068      2.121      0.034       0.011       0.279\n",
       "x9 x103        0.1167      0.047      2.491      0.013       0.025       0.209\n",
       "x28           -5.2847      2.998     -1.763      0.078     -11.161       0.591\n",
       "x28^2         -5.3057      2.998     -1.770      0.077     -11.182       0.570\n",
       "x1 x108        0.0114      0.014      0.831      0.406      -0.016       0.038\n",
       "x9 x77        -0.0265      0.079     -0.335      0.738      -0.181       0.129\n",
       "x8 x77         0.0364      0.083      0.438      0.661      -0.127       0.199\n",
       "x5 x77      -6.16e-06      0.000     -0.060      0.952      -0.000       0.000\n",
       "x9 x12        -0.1280      0.056     -2.275      0.023      -0.238      -0.018\n",
       "x5 x16      8.504e-05   7.37e-05      1.154      0.248   -5.94e-05       0.000\n",
       "x6 x12        -0.4780     10.018     -0.048      0.962     -20.115      19.159\n",
       "x12            0.9953     19.372      0.051      0.959     -36.976      38.966\n",
       "x12^2          0.9982     19.372      0.052      0.959     -36.973      38.969\n",
       "x4 x16         0.2824      0.145      1.946      0.052      -0.002       0.567\n",
       "x2 x16        -0.2406      0.182     -1.321      0.187      -0.598       0.116\n",
       "x7 x100        0.0024      0.000     21.118      0.000       0.002       0.003\n",
       "x31 x37       -0.1994      0.073     -2.716      0.007      -0.343      -0.055\n",
       "x103^2       144.2343    158.674      0.909      0.363    -166.783     455.252\n",
       "x103         144.2323    158.674      0.909      0.363    -166.785     455.250\n",
       "x6 x103      -74.7000     82.117     -0.910      0.363    -235.659      86.259\n",
       "x5 x108    -4.005e-06   1.39e-05     -0.289      0.773   -3.12e-05    2.32e-05\n",
       "x15 x31       -0.1649      0.092     -1.790      0.074      -0.346       0.016\n",
       "x1 x107        0.0191      0.009      2.062      0.039       0.001       0.037\n",
       "x77^2        441.6238    304.532      1.450      0.147    -155.290    1038.538\n",
       "x77          441.6208    304.532      1.450      0.147    -155.293    1038.535\n",
       "x6 x77      -228.8016    157.569     -1.452      0.147    -537.654      80.051\n",
       "x30 x106      -0.0353      0.026     -1.347      0.178      -0.087       0.016\n",
       "x8 x16        -0.0245      0.065     -0.379      0.705      -0.151       0.102\n",
       "x30 x59       -0.0659      0.049     -1.339      0.181      -0.162       0.031\n",
       "x18 x31        0.0615      0.055      1.127      0.260      -0.045       0.168\n",
       "x17 x30       -0.0613      0.032     -1.914      0.056      -0.124       0.001\n",
       "x30 x110      -0.0343      0.024     -1.399      0.162      -0.082       0.014\n",
       "x21 x34        0.0671      0.023      2.945      0.003       0.022       0.112\n",
       "x29 x109       0.0037      0.017      0.220      0.826      -0.029       0.037\n",
       "x3 x16         0.0452      0.039      1.152      0.249      -0.032       0.122\n",
       "x9 x16        -0.0905      0.049     -1.859      0.063      -0.186       0.005\n",
       "x29 x106      -0.0117      0.018     -0.665      0.506      -0.046       0.023\n",
       "x31 x107      -0.0156      0.039     -0.397      0.692      -0.093       0.062\n",
       "x1 x62         0.0836      0.056      1.501      0.133      -0.026       0.193\n",
       "x0 x87         0.1494      0.082      1.828      0.068      -0.011       0.310\n",
       "x29 x107      -0.0303      0.017     -1.820      0.069      -0.063       0.002\n",
       "x1 x33        -1.9821      3.592     -0.552      0.581      -9.024       5.060\n",
       "x6 x16         7.1497      6.110      1.170      0.242      -4.826      19.126\n",
       "x16^2        -13.5798     11.772     -1.154      0.249     -36.654       9.495\n",
       "x16          -13.5800     11.772     -1.154      0.249     -36.655       9.495\n",
       "x17 x29       -0.0146      0.024     -0.618      0.537      -0.061       0.032\n",
       "x2 x33         3.1435     16.023      0.196      0.844     -28.264      34.551\n",
       "x4 x33        -0.1757      8.330     -0.021      0.983     -16.503      16.152\n",
       "x7 x53         0.0014      0.000     11.970      0.000       0.001       0.002\n",
       "x0 x33        -1.4655      2.504     -0.585      0.558      -6.373       3.443\n",
       "x31 x59       -0.0695      0.067     -1.041      0.298      -0.201       0.061\n",
       "x3 x33        -0.0583      1.185     -0.049      0.961      -2.380       2.264\n",
       "x8 x33         1.7575      1.842      0.954      0.340      -1.853       5.368\n",
       "x7 x64         0.0019      0.000     16.525      0.000       0.002       0.002\n",
       "x6 x33       285.5643    208.975      1.366      0.172    -124.049     695.178\n",
       "x33         -566.8396    430.890     -1.316      0.188   -1411.429     277.749\n",
       "x33^2       -566.8398    430.890     -1.316      0.188   -1411.429     277.749\n",
       "x9 x33        -0.3282      1.079     -0.304      0.761      -2.444       1.787\n",
       "x30 x34        0.0759      0.045      1.676      0.094      -0.013       0.165\n",
       "x7 x78         0.0014      0.000     13.020      0.000       0.001       0.002\n",
       "x5 x55      7.481e-05   7.09e-05      1.056      0.291   -6.41e-05       0.000\n",
       "x1 x63         0.0845      0.047      1.794      0.073      -0.008       0.177\n",
       "x30 x105      -0.0275      0.028     -0.973      0.330      -0.083       0.028\n",
       "x15 x30       -0.1352      0.071     -1.915      0.056      -0.274       0.003\n",
       "x7 x52         0.0007      0.000      6.006      0.000       0.001       0.001\n",
       "x1 x87         0.0045      0.063      0.072      0.942      -0.118       0.127\n",
       "x1 x71         0.0429      0.066      0.649      0.516      -0.087       0.172\n",
       "x29 x37       -0.0941      0.049     -1.909      0.056      -0.191       0.002\n",
       "x5 x106     1.225e-05   1.27e-05      0.961      0.336   -1.27e-05    3.72e-05\n",
       "x18 x29        0.0059      0.030      0.197      0.843      -0.052       0.064\n",
       "x19 x32       -0.2370      0.105     -2.261      0.024      -0.442      -0.032\n",
       "x7 x74        -0.0005      0.000     -4.298      0.000      -0.001      -0.000\n",
       "x19 x23      -10.9024      4.169     -2.615      0.009     -19.074      -2.731\n",
       "x2 x87        -0.0212      0.257     -0.082      0.934      -0.526       0.484\n",
       "x4 x87        -0.0996      0.205     -0.486      0.627      -0.501       0.302\n",
       "x3 x87         0.1058      0.052      2.015      0.044       0.003       0.209\n",
       "x23 x82        0.0259      0.127      0.204      0.838      -0.223       0.274\n",
       "x7 x54         0.0014      0.000      8.505      0.000       0.001       0.002\n",
       "x19 x29       -0.1016      0.055     -1.847      0.065      -0.210       0.006\n",
       "x1 x83         0.1720      0.023      7.451      0.000       0.127       0.217\n",
       "x31 x106      -0.0499      0.041     -1.211      0.226      -0.131       0.031\n",
       "x9 x87         0.1991      0.062      3.236      0.001       0.079       0.320\n",
       "x1 x38         0.0656      0.101      0.652      0.514      -0.132       0.263\n",
       "x1 x109        0.0124      0.010      1.298      0.194      -0.006       0.031\n",
       "x8 x87        -0.0651      0.094     -0.694      0.488      -0.249       0.119\n",
       "x15 x22        0.0595      0.077      0.772      0.440      -0.092       0.210\n",
       "x87^2       1051.9037    266.281      3.950      0.000     529.964    1573.843\n",
       "x87         1051.9047    266.281      3.950      0.000     529.965    1573.844\n",
       "x6 x87      -544.7495    137.799     -3.953      0.000    -814.849    -274.650\n",
       "x0 x62         0.0395      0.055      0.717      0.473      -0.069       0.148\n",
       "x30 x39        0.0283      0.038      0.748      0.455      -0.046       0.103\n",
       "x30 x55        0.0410      0.041      0.990      0.322      -0.040       0.122\n",
       "x29 x59       -0.0536      0.039     -1.371      0.170      -0.130       0.023\n",
       "x7 x66         0.0015   9.18e-05     16.354      0.000       0.001       0.002\n",
       "x22 x82        0.0815      0.124      0.660      0.509      -0.161       0.324\n",
       "x10 x28        0.0232      0.015      1.593      0.111      -0.005       0.052\n",
       "x0 x71         0.0781      0.071      1.094      0.274      -0.062       0.218\n",
       "x5 x109    -1.751e-05   1.23e-05     -1.427      0.154   -4.16e-05    6.55e-06\n",
       "x4 x62         0.0429      0.062      0.696      0.486      -0.078       0.164\n",
       "x18 x22        0.0716      0.040      1.768      0.077      -0.008       0.151\n",
       "x2 x62        -0.0857      0.077     -1.110      0.267      -0.237       0.066\n",
       "x0 x23         0.0582      0.012      4.976      0.000       0.035       0.081\n",
       "x7 x57        -0.0001   9.18e-05     -1.094      0.274      -0.000    7.95e-05\n",
       "x4 x38         0.0614      0.084      0.731      0.465      -0.103       0.226\n",
       "x3 x38         0.0761      0.058      1.319      0.187      -0.037       0.189\n",
       "x2 x38        -0.1305      0.110     -1.190      0.234      -0.345       0.084\n",
       "x9 x38        -0.0548      0.065     -0.844      0.399      -0.182       0.072\n",
       "x0 x38     -6.422e-05      0.107     -0.001      1.000      -0.209       0.209\n",
       "x8 x62        -0.0230      0.060     -0.384      0.701      -0.140       0.094\n",
       "x30 x72       -0.0222      0.031     -0.724      0.469      -0.082       0.038\n",
       "x5 x58     -2.723e-05      0.000     -0.144      0.885      -0.000       0.000\n",
       "x8 x38        -0.3281      0.112     -2.919      0.004      -0.548      -0.108\n",
       "x4 x71        -0.0630      0.079     -0.797      0.426      -0.218       0.092\n",
       "x5 x33        -0.0001      0.002     -0.072      0.942      -0.004       0.003\n",
       "x2 x71        -0.0607      0.091     -0.670      0.503      -0.238       0.117\n",
       "x7 x46        -0.0037      0.000    -19.681      0.000      -0.004      -0.003\n",
       "x0 x63        -0.0689      0.052     -1.318      0.187      -0.171       0.034\n",
       "x29 x105      -0.0159      0.018     -0.867      0.386      -0.052       0.020\n",
       "x31 x114       0.0458      0.045      1.020      0.308      -0.042       0.134\n",
       "x3 x62         0.0823      0.035      2.385      0.017       0.015       0.150\n",
       "x28 x37       -0.0875      0.038     -2.297      0.022      -0.162      -0.013\n",
       "x1 x105        0.0548      0.010      5.361      0.000       0.035       0.075\n",
       "x8 x71        -0.0433      0.080     -0.540      0.589      -0.201       0.114\n",
       "x11 x62       -0.0297      0.029     -1.008      0.313      -0.087       0.028\n",
       "x6 x38       111.2663     59.489      1.870      0.061      -5.339     227.872\n",
       "x38         -213.3833    114.665     -1.861      0.063    -438.138      11.372\n",
       "x38^2       -213.3830    114.665     -1.861      0.063    -438.138      11.372\n",
       "x9 x62        -0.0515      0.040     -1.272      0.203      -0.131       0.028\n",
       "x10 x29       -0.0210      0.026     -0.793      0.428      -0.073       0.031\n",
       "x30 x112       0.0061      0.028      0.220      0.826      -0.048       0.060\n",
       "x6 x62        -7.3584     17.827     -0.413      0.680     -42.302      27.585\n",
       "x62^2         14.3153     34.419      0.416      0.677     -53.149      81.780\n",
       "x62           14.3153     34.419      0.416      0.677     -53.149      81.780\n",
       "x11 x16       -0.0418      0.037     -1.138      0.255      -0.114       0.030\n",
       "x11 x108       0.0043      0.014      0.305      0.760      -0.023       0.032\n",
       "x7 x20         0.0017      0.000      9.496      0.000       0.001       0.002\n",
       "x31 x109      -0.0636      0.043     -1.462      0.144      -0.149       0.022\n",
       "x29 x112      -0.0045      0.017     -0.270      0.787      -0.037       0.028\n",
       "x3 x71         0.0022      0.041      0.054      0.957      -0.079       0.083\n",
       "x19 x28       -0.0728      0.051     -1.419      0.156      -0.173       0.028\n",
       "x9 x71         0.0491      0.046      1.077      0.281      -0.040       0.138\n",
       "x18 x59        0.0638      0.054      1.177      0.239      -0.042       0.170\n",
       "x11 x71        0.0239      0.035      0.681      0.496      -0.045       0.093\n",
       "x29 x39        0.0769      0.029      2.633      0.008       0.020       0.134\n",
       "x21 x71        0.0445      0.035      1.258      0.208      -0.025       0.114\n",
       "x71          190.3687     76.764      2.480      0.013      39.904     340.834\n",
       "x71^2        190.3687     76.764      2.480      0.013      39.904     340.834\n",
       "x6 x71       -98.3878     39.743     -2.476      0.013    -176.289     -20.486\n",
       "x21 x33        0.2482      0.655      0.379      0.705      -1.037       1.533\n",
       "x3 x63        -0.0846      0.034     -2.466      0.014      -0.152      -0.017\n",
       "x28 x34        0.0732      0.022      3.302      0.001       0.030       0.117\n",
       "x9 x63         0.0928      0.035      2.678      0.007       0.025       0.161\n",
       "x5 x83      2.458e-05   2.53e-05      0.973      0.331    -2.5e-05    7.41e-05\n",
       "x5 x105     2.045e-05   1.35e-05      1.515      0.130      -6e-06    4.69e-05\n",
       "x31 x110       0.0152      0.039      0.391      0.696      -0.061       0.092\n",
       "x5 x87        -0.0002      0.000     -1.277      0.202      -0.000    8.97e-05\n",
       "x19 x34       -0.0779      0.042     -1.878      0.060      -0.159       0.003\n",
       "1          -1.695e+05   4323.454    -39.203      0.000   -1.78e+05   -1.61e+05\n",
       "==============================================================================\n",
       "Omnibus:                      985.141   Durbin-Watson:                   2.032\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             3519.551\n",
       "Skew:                          -0.193   Prob(JB):                         0.00\n",
       "Kurtosis:                       5.177   Cond. No.                     1.11e+16\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 7.02e-17. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model4_ols.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "476464b4",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Jarque-Bera ----\n",
      "3519.551207775486\n",
      "\n",
      " Prob ----\n",
      "0.0\n",
      "\n",
      " Skew ----\n",
      "-0.1927036024772934\n",
      "\n",
      " Kurtosis ----\n",
      "5.177351294043062\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-41-42a69f1a355e>:13: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show();\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for normality\n",
    "normality_test(model4_ols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "9718a74b",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Breusch-Pagan test ----\n",
      "                                       value\n",
      "Lagrange multiplier statistic   1.860237e+03\n",
      "p-value                        1.754553e-155\n",
      "f-value                         4.295839e+00\n",
      "f p-value                      7.770911e-177\n",
      "\n",
      " Goldfeld-Quandt test ----\n",
      "                value\n",
      "F statistic  0.968281\n",
      "p-value      0.927404\n",
      "\n",
      " Residuals plot ----\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#test for homoscedasticity\n",
    "homoscedasticity_test(model4_ols)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5de5b281",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### Model 4: Summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "9ebc7e1f",
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Model 4: Binomial Feature Engineering ----\n",
      "The R-squared value for the train set was 0.865, and the R-squared value for the test set was 0.645. These values resulted in a differential of 0.22049. The RMSE of our model predicitons was 596698921.69\n",
      "\n",
      " Model 1: ----\n",
      "The R-squared value for the train set was 0.889, and the R-squared value for the test set was 0.882. These values resulted in a differential of 0.00697. The RMSE of our model predicitons was 122550.02\n"
     ]
    }
   ],
   "source": [
    "print('\\n Model 4: Binomial Feature Engineering ----')\n",
    "print(model4_summary)\n",
    "print('\\n Model 1: ----')\n",
    "print(best_model1_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac2287c9",
   "metadata": {
    "hidden": true
   },
   "source": [
    "Though Model 4 has a similar R-squared train score as that of Model 1, the Model 4 test R-squared test score was significantly lower than that of Model 1. In addition, Model 4's RMSE was significantly higher than that of Model 1. This may be due to the fact there are a few outliers in the test sample as seen in the Actual vs Predicted scatter plot above."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3fba18b7",
   "metadata": {},
   "source": [
    "## Top Features in Model 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34fb2fc0",
   "metadata": {},
   "source": [
    "Using the best model, which is Model 1, we found the best features by analyzing the top coefficients of the linear model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "e531a4e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('lat', 25.74627687183348),\n",
       " ('zipcode_98039', 1.1319734365019591),\n",
       " ('zipcode_98004', 0.9799999511998865),\n",
       " ('zipcode_98112', 0.9202668161824104),\n",
       " ('zipcode_98109', 0.8519668400788292),\n",
       " ('zipcode_98119', 0.8158578455284438),\n",
       " ('zipcode_98102', 0.8142500503716282),\n",
       " ('zipcode_98105', 0.7880824419300454),\n",
       " ('zipcode_98040', 0.76271332469029),\n",
       " ('zipcode_98122', 0.6867898612895754),\n",
       " ('zipcode_98107', 0.6729325541323918),\n",
       " ('zipcode_98103', 0.6574121818149714),\n",
       " ('zipcode_98199', 0.656665572664741),\n",
       " ('zipcode_98115', 0.6430071079258124),\n",
       " ('zipcode_98033', 0.6329585694721738),\n",
       " ('grade_4', 0.6134568220185997),\n",
       " ('zipcode_98116', 0.612744176721872),\n",
       " ('zipcode_98117', 0.6127175538180258),\n",
       " ('zipcode_98005', 0.60896116559509),\n",
       " ('zipcode_98029', 0.5908856987966655),\n",
       " ('zipcode_98008', 0.5675745397221803),\n",
       " ('zipcode_98144', 0.5615871435757953),\n",
       " ('zipcode_98006', 0.5609062394342299),\n",
       " ('zipcode_98007', 0.5554176308269629),\n",
       " ('zipcode_98136', 0.5547300361783365),\n",
       " ('grade_5', 0.5415988205081192),\n",
       " ('zipcode_98075', 0.5082900526595089),\n",
       " ('zipcode_98052', 0.5066053741900762),\n",
       " ('zipcode_98027', 0.49548417004791734),\n",
       " ('zipcode_98053', 0.49083350067180964),\n",
       " ('grade_6', 0.48859732886350565),\n",
       " ('zipcode_98074', 0.48298750288054626),\n",
       " ('zipcode_98065', 0.4631712082533048),\n",
       " ('zipcode_98045', 0.4588057181069439),\n",
       " ('waterfront_1', 0.4569433924926118),\n",
       " ('zipcode_98024', 0.4544629533124637),\n",
       " ('long', 0.4411913623894449),\n",
       " ('condition_5', 0.42024730497400054),\n",
       " ('grade_7', 0.41953897894309033),\n",
       " ('zipcode_98126', 0.41871915540430193),\n",
       " ('grade_13', 0.3993665842266787),\n",
       " ('zipcode_98118', 0.37003454580933315),\n",
       " ('zipcode_98125', 0.3669700433545997),\n",
       " ('zipcode_98034', 0.3612349785786575),\n",
       " ('condition_4', 0.3499678091343884),\n",
       " ('grade_8', 0.33981959439310505),\n",
       " ('zipcode_98177', 0.3313780840020706),\n",
       " ('zipcode_98010', 0.3269552899375321),\n",
       " ('condition_3', 0.30813862572201467),\n",
       " ('zipcode_98059', 0.2998967191825681),\n",
       " ('zipcode_98072', 0.2896081319784707),\n",
       " ('zipcode_98077', 0.28560698362614545),\n",
       " ('view_4', 0.28468558583948556),\n",
       " ('sqft_living', 0.27778137774993195),\n",
       " ('zipcode_98014', 0.274572598575608),\n",
       " ('zipcode_98056', 0.2590928732837945),\n",
       " ('zipcode_98108', 0.2554848820119632),\n",
       " ('zipcode_98011', 0.24293920871762187),\n",
       " ('zipcode_98106', 0.23832418493535595),\n",
       " ('zipcode_98038', 0.23562876551105338),\n",
       " ('zipcode_98133', 0.2297340191485152),\n",
       " ('grade_9', 0.22206952400245292),\n",
       " ('zipcode_98022', 0.2200392230197994),\n",
       " ('zipcode_98019', 0.21272920861983488),\n",
       " ('zipcode_98166', 0.20493440586334788),\n",
       " ('zipcode_98155', 0.19377711595765157),\n",
       " ('condition_2', 0.18873371429716446),\n",
       " ('zipcode_98028', 0.18219097842598414),\n",
       " ('view_3', 0.17524104530162044),\n",
       " ('zipcode_98146', 0.1672511965707828),\n",
       " ('zipcode_98070', 0.1605603060461318),\n",
       " ('sqft_living15', 0.1578744284507574),\n",
       " ('sqft_above', 0.15358935105142357),\n",
       " ('zipcode_98058', 0.1408784603284703),\n",
       " ('grade_10', 0.13379240684693772),\n",
       " ('view_1', 0.12513047326629334),\n",
       " ('grade_12', 0.11040891675083736),\n",
       " ('zipcode_98055', 0.10518371511187763),\n",
       " ('view_2', 0.1014795326661165),\n",
       " ('zipcode_98042', 0.09920037961979589),\n",
       " ('zipcode_98148', 0.08566918980031835),\n",
       " ('floors_3.0', 0.08389688311020096),\n",
       " ('zipcode_98178', 0.08381873860050781),\n",
       " ('sqft_lot', 0.0740598173338656),\n",
       " ('if_renovated_1', 0.0713442727400837),\n",
       " ('floors_3.5', 0.06622635805616492),\n",
       " ('month_of_date_4', 0.06570029710114511),\n",
       " ('zipcode_98031', 0.06168707528591488),\n",
       " ('zipcode_98092', 0.061220775181793335),\n",
       " ('bathrooms', 0.05782733142665268),\n",
       " ('zipcode_98023', 0.05668423291131308),\n",
       " ('zipcode_98030', 0.05607142634805928),\n",
       " ('bedrooms', 0.046846264193050914),\n",
       " ('zipcode_98032', 0.04629272585733535),\n",
       " ('month_of_date_3', 0.042392051016494126),\n",
       " ('zipcode_98188', 0.037704281592950695),\n",
       " ('zipcode_98002', 0.027091584236448307),\n",
       " ('sqft_lot15', 0.021707485594649606),\n",
       " ('grade_11', 0.01518248107266745),\n",
       " ('month_of_date_2', 0.015002904404290085),\n",
       " ('month_of_date_10', 0.014260340843474495),\n",
       " ('month_of_date_11', 0.013626976452739914),\n",
       " ('month_of_date_9', 0.012417935614914555),\n",
       " ('zipcode_98003', 0.009694597941621003),\n",
       " ('floors_2.0', 0.008796698434260466),\n",
       " ('month_of_date_7', 0.007935332238255377),\n",
       " ('month_of_date_5', 0.00748889699671107),\n",
       " ('month_of_date_8', 0.006954178621191076),\n",
       " ('floors_1.5', 0.0061179414590978864),\n",
       " ('month_of_date_12', 0.004685355933173874),\n",
       " ('floors_2.5', 0.004615170223381773),\n",
       " ('zipcode_98198', 0.002117316502904809),\n",
       " ('month_of_date_6', 0.0014301803486373998),\n",
       " ('zipcode_98168', 0.0006200442177368704),\n",
       " ('sqft_basement', 9.381312854550572e-06)]"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features = {x[0]:abs(x[1]) for x in zip(X_test.columns,model1_ln.coef_)}\n",
    "features = sorted(features.items(), key=lambda x: x[1], reverse=True)\n",
    "features"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86067c69",
   "metadata": {},
   "source": [
    "Upon visual inspection of the absolute value of each of the top coefficients it becomes apparent that our model predicted heavily using positional data, followed by certain grades, and sqft_living as the next non-positional continuous features behind lat/long."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff9fec3d",
   "metadata": {},
   "source": [
    "## Conclusions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e51f320",
   "metadata": {},
   "source": [
    "The final conclusion of the business recommendation hinges on our best-performing Model 1: a multiple linear regression model using all features. More specifically, this multi-linear regression model leverages the power of log to transform all positive variables. Simultaneously, this model also dummies out categorical variables to derive its statistical results. The multiple linear regression model proves to be the most robut model in dealing with outlier values while also proving to be the most accurate model when benchmarked against its R-Squared values as well as its RMSE values. However, there are still some assumption limitations to the model including a high conditional number (multicollinearity).\n",
    "\n",
    "Hence, given a set of housing datapoints, our multiple linear regression model can aid in predicting the housing prices from a given dataset. While one may assume that complex models may provide a more accurate prediction, our results reveal that a more simple model actually provides more accurate solutions. Furthermore, the simple multiple linear regression model also reveals that amongst all features, location features and square footage of living space seems to have the biggest impact on housing prices. Thus, for the sake of predicting home values, it is essential to capture accurate data pertaining to these two features of any home.  \n",
    "\n",
    "This model will help ACME Bank employees to safely appraise homes, while avoiding the risk of COVID-19. However, we would not recommend the model to be deployed at this time as the margin of error (~$123K) is high. We would need to further refine the model by either introducing more data into the model, or segmenting the dataset into groups such as by house size and create multiple models more accurate for a specific type of a home. In addition, the model is tuned for the King County dataset. Any predictions in other counties would require further refinement and additional data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "533ce1c9",
   "metadata": {},
   "source": [
    "## Next Steps"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df083231",
   "metadata": {},
   "source": [
    "The model can be further improved with additional datasets within the same county (King County), or from different counties nearby in the Seattle-metro region. Furthermore, datasets from King County from earlier years (pre-2014) could also help improve the model. \n",
    "\n",
    "The model could also be further tuned with consideration of the housing inflation from 2015-2021 as prices may have increased from the impact of the ongoing COVID-19 pandemic. \n",
    "\n",
    "Outliers within the dataset can also contribute to discrepencies within the model. Further investigation into outliers within the dataset could also help further improve the model. \n",
    "\n",
    "The model is currently tuned for a dataset that encapsulates both small-medium houses as well as larger houses. A seperation and distinction between the two styles of homes could also help improve the model.\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "firstEnv",
   "language": "python",
   "name": "firstenv"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
